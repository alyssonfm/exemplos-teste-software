import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test001");
        java.util.Comparator<java.lang.CharSequence> charSequenceComparator1 = null;
        java.util.Map<java.lang.Comparable<java.lang.String>, java.util.Comparator<java.lang.CharSequence>> strComparableMap2 = java.util.Collections.singletonMap((java.lang.Comparable<java.lang.String>) "hi!", charSequenceComparator1);
        org.junit.Assert.assertNotNull(strComparableMap2);
    }

    @Test
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test002");
        java.util.List<java.util.List<java.io.Serializable>> serializableListList0 = java.util.Collections.emptyList();
        org.junit.Assert.assertNotNull(serializableListList0);
    }

    @Test
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test003");
        java.util.Set set0 = java.util.Collections.EMPTY_SET;
        org.junit.Assert.assertNotNull(set0);
    }

    @Test
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test004");
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList41 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList41, serializableArray40);
        java.util.Collection<java.io.Serializable> serializableCollection43 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList41);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] { 'a', 10, 100, serializableList41, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList51 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList51, serializableArray50);
        boolean boolean55 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList51, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        serializableList51.add(10, (java.io.Serializable) '#');
        java.io.Serializable[] serializableArray94 = new java.io.Serializable[] { false, (-1), 'a', (-1.0f), "hi!", '#', '4', '4', '#', (byte) 10, 100, 1.0f, (byte) -1, (short) 0, '4', (-1.0d), (-1.0d), 'a', 'a', (short) 10, "hi!", (byte) -1, 0.0d, 1.0f, (-1.0d), 0.0d, 100L, 10.0f, '4', 1L, (-1), (-1L), 100, 0L, true };
        java.util.ArrayList<java.io.Serializable> serializableList95 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean96 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList95, serializableArray94);
        java.lang.Object obj97 = null;
        boolean boolean98 = serializableList95.equals(obj97);
        boolean boolean99 = serializableList51.equals((java.lang.Object) serializableList95);
        org.junit.Assert.assertNotNull(serializableArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(serializableCollection43);
        org.junit.Assert.assertNotNull(serializableArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(serializableArray94);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test005");
        java.util.Set<java.util.List<java.io.Serializable>> serializableListSet0 = java.util.Collections.emptySet();
        org.junit.Assert.assertNotNull(serializableListSet0);
    }

    @Test
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test006");
        java.util.Collection<java.io.Serializable> serializableCollection0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collection<java.io.Serializable> serializableCollection1 = java.util.Collections.synchronizedCollection(serializableCollection0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test007");
        java.io.Serializable[] serializableArray41 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList42 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList42, serializableArray41);
        java.util.Collection<java.io.Serializable> serializableCollection44 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList42);
        java.io.Serializable[] serializableArray51 = new java.io.Serializable[] { 'a', 10, 100, serializableList42, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList52 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList52, serializableArray51);
        boolean boolean56 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList52, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        serializableList52.ensureCapacity((int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.io.Serializable>> serializableListList59 = java.util.Collections.nCopies((int) (short) -1, (java.util.List<java.io.Serializable>) serializableList52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: List length = -1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(serializableCollection44);
        org.junit.Assert.assertNotNull(serializableArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test008");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean6 = strSet3.equals((java.lang.Object) false);
        int int7 = strSet3.size();
        java.util.SortedSet<java.io.Serializable> serializableSet8 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList9 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet8);
        java.util.SortedSet<java.io.Serializable> serializableSet10 = java.util.Collections.unmodifiableSortedSet(serializableSet8);
        boolean boolean11 = strSet3.removeAll((java.util.Collection<java.io.Serializable>) serializableSet8);
        java.lang.Class<java.io.Serializable> serializableClass12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.io.Serializable> serializableSet13 = java.util.Collections.checkedSet((java.util.Set<java.io.Serializable>) serializableSet8, serializableClass12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: type");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(serializableSet8);
        org.junit.Assert.assertNotNull(serializableIterableList9);
        org.junit.Assert.assertNotNull(serializableSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test009");
        java.io.Serializable[] serializableArray51 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList52 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList52, serializableArray51);
        java.util.Collection<java.io.Serializable> serializableCollection54 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList52);
        java.io.Serializable[] serializableArray79 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList52, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList80 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList80, serializableArray79);
        serializableList80.ensureCapacity(100);
        serializableList80.trimToSize();
        java.util.Random random85 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections.shuffle((java.util.List<java.io.Serializable>) serializableList80, random85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(serializableCollection54);
        org.junit.Assert.assertNotNull(serializableArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test010");
        java.util.Enumeration<java.util.LinkedHashSet<java.lang.String>> strSetEnumeration0 = java.util.Collections.emptyEnumeration();
        org.junit.Assert.assertNotNull(strSetEnumeration0);
    }

    @Test
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test011");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.lang.Class<java.io.Serializable> serializableClass1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.checkedSortedSet(serializableSet0, serializableClass1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: type");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
    }

    @Test
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test012");
        java.io.Serializable[] serializableArray51 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList52 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList52, serializableArray51);
        java.util.Collection<java.io.Serializable> serializableCollection54 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList52);
        java.io.Serializable[] serializableArray79 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList52, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList80 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList80, serializableArray79);
        serializableList80.ensureCapacity(100);
        java.lang.Object[] objArray84 = serializableList80.toArray();
        boolean boolean86 = serializableList80.remove((java.lang.Object) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.Serializable> serializableList89 = serializableList80.subList((int) (short) -1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: fromIndex = -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(serializableCollection54);
        org.junit.Assert.assertNotNull(serializableArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test013");
        java.util.List<java.io.Serializable> serializableList0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.Serializable> serializableList1 = java.util.Collections.synchronizedList(serializableList0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test014");
        java.util.List<java.io.Serializable> serializableList0 = null;
        java.util.Random random1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections.shuffle(serializableList0, random1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test015");
        java.io.Serializable[] serializableArray35 = new java.io.Serializable[] { false, (-1), 'a', (-1.0f), "hi!", '#', '4', '4', '#', (byte) 10, 100, 1.0f, (byte) -1, (short) 0, '4', (-1.0d), (-1.0d), 'a', 'a', (short) 10, "hi!", (byte) -1, 0.0d, 1.0f, (-1.0d), 0.0d, 100L, 10.0f, '4', 1L, (-1), (-1L), 100, 0L, true };
        java.util.ArrayList<java.io.Serializable> serializableList36 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList36, serializableArray35);
        java.lang.Object obj38 = null;
        boolean boolean39 = serializableList36.equals(obj38);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections.swap((java.util.List<java.io.Serializable>) serializableList36, (int) (short) 10, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 35");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test016");
        java.util.ListIterator<java.util.ListIterator<java.io.Serializable>> serializableItorItor0 = java.util.Collections.emptyListIterator();
        org.junit.Assert.assertNotNull(serializableItorItor0);
    }

    @Test
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test017");
        java.io.Serializable[] serializableArray35 = new java.io.Serializable[] { false, (-1), 'a', (-1.0f), "hi!", '#', '4', '4', '#', (byte) 10, 100, 1.0f, (byte) -1, (short) 0, '4', (-1.0d), (-1.0d), 'a', 'a', (short) 10, "hi!", (byte) -1, 0.0d, 1.0f, (-1.0d), 0.0d, 100L, 10.0f, '4', 1L, (-1), (-1L), 100, 0L, true };
        java.util.ArrayList<java.io.Serializable> serializableList36 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList36, serializableArray35);
        java.lang.Object obj38 = null;
        boolean boolean39 = serializableList36.equals(obj38);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable41 = serializableList36.remove((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 52 out of bounds for length 35");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test018");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.io.Serializable[] serializableArray56 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList57 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList57, serializableArray56);
        java.util.Collection<java.io.Serializable> serializableCollection59 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList57);
        java.io.Serializable[] serializableArray84 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList57, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList85 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList85, serializableArray84);
        serializableList85.ensureCapacity(100);
        java.util.ListIterator<java.io.Serializable> serializableItor90 = serializableList85.listIterator(0);
        java.util.HashSet<java.lang.String> strSet93 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        strSet93.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.util.NavigableSet<java.io.Serializable> serializableSet96 = serializableSet3.subSet((java.io.Serializable) 0, false, (java.io.Serializable) strSet93, true);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class java.util.HashSet cannot be cast to class java.lang.Integer (java.util.HashSet and java.lang.Integer are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(serializableArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(serializableCollection59);
        org.junit.Assert.assertNotNull(serializableArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(serializableItor90);
    }

    @Test
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test019");
        java.io.Serializable[] serializableArray51 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList52 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList52, serializableArray51);
        java.util.Collection<java.io.Serializable> serializableCollection54 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList52);
        java.io.Serializable[] serializableArray79 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList52, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList80 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList80, serializableArray79);
        serializableList80.ensureCapacity(100);
        java.util.ListIterator<java.io.Serializable> serializableItor85 = serializableList80.listIterator(0);
        java.util.Random random86 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections.shuffle((java.util.List<java.io.Serializable>) serializableList80, random86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(serializableCollection54);
        org.junit.Assert.assertNotNull(serializableArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(serializableItor85);
    }

    @Test
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test020");
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList41 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList41, serializableArray40);
        java.util.Collection<java.io.Serializable> serializableCollection43 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList41);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] { 'a', 10, 100, serializableList41, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList51 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList51, serializableArray50);
        boolean boolean55 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList51, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator56 = serializableList51.spliterator();
        java.io.Serializable[] serializableArray95 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList96 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean97 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList96, serializableArray95);
        java.util.Collection<java.io.Serializable> serializableCollection98 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList96);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean99 = serializableList51.addAll((int) (short) -1, serializableCollection98);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(serializableCollection43);
        org.junit.Assert.assertNotNull(serializableArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(serializableSpliterator56);
        org.junit.Assert.assertNotNull(serializableArray95);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertNotNull(serializableCollection98);
    }

    @Test
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test021");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.lang.Class<java.io.Serializable> serializableClass3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.SortedSet<java.io.Serializable> serializableSet4 = java.util.Collections.checkedSortedSet(serializableSet0, serializableClass3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: type");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
    }

    @Test
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test022");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean6 = strSet3.equals((java.lang.Object) false);
        java.io.Serializable[] serializableArray42 = new java.io.Serializable[] { false, (-1), 'a', (-1.0f), "hi!", '#', '4', '4', '#', (byte) 10, 100, 1.0f, (byte) -1, (short) 0, '4', (-1.0d), (-1.0d), 'a', 'a', (short) 10, "hi!", (byte) -1, 0.0d, 1.0f, (-1.0d), 0.0d, 100L, 10.0f, '4', 1L, (-1), (-1L), 100, 0L, true };
        java.util.ArrayList<java.io.Serializable> serializableList43 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList43, serializableArray42);
        java.lang.Object obj45 = null;
        boolean boolean46 = serializableList43.equals(obj45);
        java.util.Collection<java.io.Serializable> serializableCollection47 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList43);
        boolean boolean48 = strSet3.contains((java.lang.Object) serializableList43);
        java.util.function.UnaryOperator<java.io.Serializable> serializableUnaryOperator49 = null;
        // The following exception was thrown during execution in test generation
        try {
            serializableList43.replaceAll(serializableUnaryOperator49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(serializableArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(serializableCollection47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test023");
        java.io.Serializable[] serializableArray51 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList52 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList52, serializableArray51);
        java.util.Collection<java.io.Serializable> serializableCollection54 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList52);
        java.io.Serializable[] serializableArray79 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList52, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList80 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList80, serializableArray79);
        serializableList80.ensureCapacity(100);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable85 = serializableList80.get((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 39");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(serializableCollection54);
        org.junit.Assert.assertNotNull(serializableArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test024");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration6 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableSet3);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable7 = serializableSet3.last();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableEnumeration6);
    }

    @Test
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test025");
        java.util.Map<java.lang.CharSequence, java.util.NavigableSet<java.io.Serializable>> charSequenceMap0 = java.util.Collections.emptyMap();
        org.junit.Assert.assertNotNull(charSequenceMap0);
    }

    @Test
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test026");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        boolean boolean5 = serializableSet3.remove((java.lang.Object) (-1.0f));
        java.io.Serializable serializable6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.NavigableSet<java.io.Serializable> serializableSet8 = serializableSet3.headSet(serializable6, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test027");
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList41 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList41, serializableArray40);
        java.util.Collection<java.io.Serializable> serializableCollection43 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList41);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] { 'a', 10, 100, serializableList41, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList51 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList51, serializableArray50);
        boolean boolean55 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList51, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator56 = serializableList51.spliterator();
        serializableList51.clear();
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet61 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet61, strArray60);
        boolean boolean64 = strSet61.equals((java.lang.Object) false);
        int int65 = strSet61.size();
        java.util.SortedSet<java.io.Serializable> serializableSet66 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList67 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet66);
        java.util.SortedSet<java.io.Serializable> serializableSet68 = java.util.Collections.unmodifiableSortedSet(serializableSet66);
        boolean boolean69 = strSet61.removeAll((java.util.Collection<java.io.Serializable>) serializableSet66);
        int int70 = serializableList51.lastIndexOf((java.lang.Object) strSet61);
        java.lang.Class<java.io.Serializable> serializableClass71 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.Serializable> serializableList72 = java.util.Collections.checkedList((java.util.List<java.io.Serializable>) serializableList51, serializableClass71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: type");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(serializableCollection43);
        org.junit.Assert.assertNotNull(serializableArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(serializableSpliterator56);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(serializableSet66);
        org.junit.Assert.assertNotNull(serializableIterableList67);
        org.junit.Assert.assertNotNull(serializableSet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
    }

    @Test
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test028");
        java.util.List list0 = java.util.Collections.EMPTY_LIST;
        org.junit.Assert.assertNotNull(list0);
    }

    @Test
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test029");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor0 = java.util.Collections.emptyIterator();
        org.junit.Assert.assertNotNull(charSequenceItor0);
    }

    @Test
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test030");
        java.util.Comparator<java.lang.Object> objComparator0 = java.util.Collections.reverseOrder();
        org.junit.Assert.assertNotNull(objComparator0);
    }

    @Test
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test031");
        java.io.Serializable[] serializableArray37 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList38 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList38, serializableArray37);
        java.util.Collection<java.io.Serializable> serializableCollection40 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList38);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator41 = serializableList38.spliterator();
        java.lang.Class<java.io.Serializable> serializableClass42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.Serializable> serializableList43 = java.util.Collections.checkedList((java.util.List<java.io.Serializable>) serializableList38, serializableClass42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: type");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(serializableCollection40);
        org.junit.Assert.assertNotNull(serializableSpliterator41);
    }

    @Test
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test032");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.io.Serializable serializable6 = serializableSet3.ceiling((java.io.Serializable) 0.0d);
        java.util.Comparator<? super java.io.Serializable> wildcardComparator7 = serializableSet3.comparator();
        // The following exception was thrown during execution in test generation
        try {
            java.util.NavigableSet<java.io.Serializable> serializableSet12 = serializableSet3.subSet((java.io.Serializable) (short) 0, true, (java.io.Serializable) '#', false);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class java.lang.Character cannot be cast to class java.lang.Short (java.lang.Character and java.lang.Short are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertNull(wildcardComparator7);
    }

    @Test
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test033");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.io.Serializable serializable6 = serializableSet3.ceiling((java.io.Serializable) 0.0d);
        java.util.SortedSet<java.io.Serializable> serializableSet8 = serializableSet3.tailSet((java.io.Serializable) (short) 10);
        java.io.Serializable serializable9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.SortedSet<java.io.Serializable> serializableSet10 = serializableSet3.tailSet(serializable9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertNotNull(serializableSet8);
    }

    @Test
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test034");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.io.Serializable serializable6 = serializableSet3.ceiling((java.io.Serializable) 0.0d);
        java.util.Comparator<? super java.io.Serializable> wildcardComparator7 = serializableSet3.comparator();
        java.util.SortedSet<java.io.Serializable> serializableSet8 = java.util.Collections.emptySortedSet();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = serializableSet3.contains((java.lang.Object) serializableSet8);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class java.util.Collections$UnmodifiableNavigableSet$EmptyNavigableSet cannot be cast to class java.lang.Comparable (java.util.Collections$UnmodifiableNavigableSet$EmptyNavigableSet and java.lang.Comparable are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertNull(wildcardComparator7);
        org.junit.Assert.assertNotNull(serializableSet8);
    }

    @Test
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test035");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        serializableSet3.clear();
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        boolean boolean13 = strSet10.equals((java.lang.Object) false);
        int int14 = strSet10.size();
        java.util.SortedSet<java.io.Serializable> serializableSet15 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList16 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet15);
        java.util.SortedSet<java.io.Serializable> serializableSet17 = java.util.Collections.unmodifiableSortedSet(serializableSet15);
        boolean boolean18 = strSet10.removeAll((java.util.Collection<java.io.Serializable>) serializableSet15);
        // The following exception was thrown during execution in test generation
        try {
            java.util.NavigableSet<java.io.Serializable> serializableSet20 = serializableSet3.headSet((java.io.Serializable) strSet10, false);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class java.util.LinkedHashSet cannot be cast to class java.lang.Comparable (java.util.LinkedHashSet and java.lang.Comparable are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(serializableSet15);
        org.junit.Assert.assertNotNull(serializableIterableList16);
        org.junit.Assert.assertNotNull(serializableSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test036");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        boolean boolean5 = serializableSet3.remove((java.lang.Object) (-1.0f));
        java.util.HashSet<java.lang.String> strSet7 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.lang.Object obj8 = strSet7.clone();
        java.io.Serializable[] serializableArray61 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList62 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList62, serializableArray61);
        java.util.Collection<java.io.Serializable> serializableCollection64 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList62);
        java.io.Serializable[] serializableArray89 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList62, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList90 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList90, serializableArray89);
        serializableList90.ensureCapacity(100);
        serializableList90.trimToSize();
        // The following exception was thrown during execution in test generation
        try {
            java.util.NavigableSet<java.io.Serializable> serializableSet96 = serializableSet3.subSet((java.io.Serializable) strSet7, false, (java.io.Serializable) serializableList90, false);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class java.util.HashSet cannot be cast to class java.lang.Comparable (java.util.HashSet and java.lang.Comparable are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "[]");
        org.junit.Assert.assertNotNull(serializableArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(serializableCollection64);
        org.junit.Assert.assertNotNull(serializableArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test037");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.io.Serializable serializable6 = serializableSet3.ceiling((java.io.Serializable) 0.0d);
        java.util.Comparator<? super java.io.Serializable> wildcardComparator7 = serializableSet3.comparator();
        java.util.SortedSet<java.io.Serializable> serializableSet9 = serializableSet3.tailSet((java.io.Serializable) 100L);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable10 = serializableSet3.last();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertNull(wildcardComparator7);
        org.junit.Assert.assertNotNull(serializableSet9);
    }

    @Test
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test038");
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList41 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList41, serializableArray40);
        java.util.Collection<java.io.Serializable> serializableCollection43 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList41);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] { 'a', 10, 100, serializableList41, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList51 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList51, serializableArray50);
        boolean boolean55 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList51, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.Map<java.io.Serializable, java.lang.Object> serializableMap58 = java.util.Collections.singletonMap((java.io.Serializable) (short) 1, (java.lang.Object) (short) 1);
        int int59 = serializableList51.lastIndexOf((java.lang.Object) (short) 1);
        serializableList51.clear();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration61 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableList51);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable63 = serializableList51.remove(0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(serializableCollection43);
        org.junit.Assert.assertNotNull(serializableArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(serializableMap58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(serializableEnumeration61);
    }

    @Test
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test039");
        java.io.Serializable[] serializableArray35 = new java.io.Serializable[] { false, (-1), 'a', (-1.0f), "hi!", '#', '4', '4', '#', (byte) 10, 100, 1.0f, (byte) -1, (short) 0, '4', (-1.0d), (-1.0d), 'a', 'a', (short) 10, "hi!", (byte) -1, 0.0d, 1.0f, (-1.0d), 0.0d, 100L, 10.0f, '4', 1L, (-1), (-1L), 100, 0L, true };
        java.util.ArrayList<java.io.Serializable> serializableList36 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList36, serializableArray35);
        java.lang.Object obj38 = null;
        boolean boolean39 = serializableList36.equals(obj38);
        boolean boolean40 = serializableList36.isEmpty();
        java.lang.String[] strArray47 = new java.lang.String[] { "", "hi!", "hi!", "", "", "" };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray48 = serializableList36.toArray(strArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: arraycopy: element type mismatch: can not cast one of the elements of java.lang.Object[] to the type of the destination array, java.lang.String");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strArray47);
    }

    @Test
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test040");
        java.io.Serializable[] serializableArray35 = new java.io.Serializable[] { false, (-1), 'a', (-1.0f), "hi!", '#', '4', '4', '#', (byte) 10, 100, 1.0f, (byte) -1, (short) 0, '4', (-1.0d), (-1.0d), 'a', 'a', (short) 10, "hi!", (byte) -1, 0.0d, 1.0f, (-1.0d), 0.0d, 100L, 10.0f, '4', 1L, (-1), (-1L), 100, 0L, true };
        java.util.ArrayList<java.io.Serializable> serializableList36 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList36, serializableArray35);
        java.lang.Object obj38 = null;
        boolean boolean39 = serializableList36.equals(obj38);
        java.util.stream.Stream<java.io.Serializable> serializableStream40 = serializableList36.stream();
        java.io.Serializable serializable42 = serializableList36.remove(1);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.io.Serializable> serializableItor44 = serializableList36.listIterator((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 34");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(serializableStream40);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + (-1) + "'", serializable42, (-1));
    }

    @Test
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test041");
        java.util.SortedSet<java.lang.CharSequence> charSequenceSet0 = java.util.Collections.emptySortedSet();
        org.junit.Assert.assertNotNull(charSequenceSet0);
    }

    @Test
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test042");
        java.util.Enumeration<java.util.List<java.io.Serializable>> serializableListEnumeration0 = java.util.Collections.emptyEnumeration();
        org.junit.Assert.assertNotNull(serializableListEnumeration0);
    }

    @Test
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test043");
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList41 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList41, serializableArray40);
        java.util.Collection<java.io.Serializable> serializableCollection43 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList41);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] { 'a', 10, 100, serializableList41, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList51 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList51, serializableArray50);
        boolean boolean55 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList51, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.Map<java.io.Serializable, java.lang.Object> serializableMap58 = java.util.Collections.singletonMap((java.io.Serializable) (short) 1, (java.lang.Object) (short) 1);
        int int59 = serializableList51.lastIndexOf((java.lang.Object) (short) 1);
        serializableList51.clear();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration61 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableList51);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable63 = serializableList51.remove((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(serializableCollection43);
        org.junit.Assert.assertNotNull(serializableArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(serializableMap58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(serializableEnumeration61);
    }

    @Test
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test044");
        java.util.SortedMap<java.util.Enumeration<java.util.HashSet<java.lang.String>>, java.util.Iterator<java.io.Serializable>> strSetEnumerationMap0 = java.util.Collections.emptySortedMap();
        java.util.SortedMap<java.util.Enumeration<java.util.HashSet<java.lang.String>>, java.util.Iterator<java.io.Serializable>> strSetEnumerationMap1 = java.util.Collections.synchronizedSortedMap(strSetEnumerationMap0);
        java.util.SortedMap<java.util.Enumeration<java.util.HashSet<java.lang.String>>, java.util.Iterator<java.io.Serializable>> strSetEnumerationMap2 = java.util.Collections.synchronizedSortedMap(strSetEnumerationMap1);
        org.junit.Assert.assertNotNull(strSetEnumerationMap0);
        org.junit.Assert.assertNotNull(strSetEnumerationMap1);
        org.junit.Assert.assertNotNull(strSetEnumerationMap2);
    }

    @Test
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test045");
        // The following exception was thrown during execution in test generation
        try {
            java.util.HashSet<java.util.Iterator<java.io.Serializable>> serializableItorSet2 = new java.util.HashSet<java.util.Iterator<java.io.Serializable>>((int) '#', (float) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal load factor: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test046");
        java.util.HashSet<java.util.NavigableSet<java.io.Serializable>> serializableSetSet2 = new java.util.HashSet<java.util.NavigableSet<java.io.Serializable>>(100, (float) ' ');
    }

    @Test
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test047");
        java.util.ArrayList<java.util.stream.BaseStream<java.io.Serializable, java.util.stream.Stream<java.io.Serializable>>> serializableBaseStreamList0 = new java.util.ArrayList<java.util.stream.BaseStream<java.io.Serializable, java.util.stream.Stream<java.io.Serializable>>>();
    }

    @Test
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test048");
        java.util.List<java.lang.Object[]> objArrayList0 = java.util.Collections.emptyList();
        org.junit.Assert.assertNotNull(objArrayList0);
    }

    @Test
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test049");
        java.util.NavigableSet<java.util.Comparator<java.lang.CharSequence>> charSequenceComparatorSet0 = java.util.Collections.emptyNavigableSet();
        org.junit.Assert.assertNotNull(charSequenceComparatorSet0);
    }

    @Test
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test050");
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList41 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList41, serializableArray40);
        java.util.Collection<java.io.Serializable> serializableCollection43 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList41);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] { 'a', 10, 100, serializableList41, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList51 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList51, serializableArray50);
        boolean boolean55 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList51, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        serializableList51.ensureCapacity((int) (short) -1);
        java.util.Collections.reverse((java.util.List<java.io.Serializable>) serializableList51);
        java.lang.Class<java.io.Serializable> serializableClass59 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.Serializable> serializableList60 = java.util.Collections.checkedList((java.util.List<java.io.Serializable>) serializableList51, serializableClass59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: type");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(serializableCollection43);
        org.junit.Assert.assertNotNull(serializableArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test051");
        java.io.Serializable[] serializableArray51 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList52 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList52, serializableArray51);
        java.util.Collection<java.io.Serializable> serializableCollection54 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList52);
        java.io.Serializable[] serializableArray79 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList52, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList80 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList80, serializableArray79);
        serializableList80.ensureCapacity(100);
        java.util.ListIterator<java.io.Serializable> serializableItor85 = serializableList80.listIterator(0);
        java.util.Comparator<java.lang.CharSequence> charSequenceComparator86 = java.util.Collections.reverseOrder();
        java.util.Comparator<java.lang.CharSequence> charSequenceComparator87 = java.util.Collections.reverseOrder(charSequenceComparator86);
        int int88 = serializableList80.indexOf((java.lang.Object) charSequenceComparator87);
        java.util.TreeSet<java.lang.CharSequence> charSequenceSet89 = new java.util.TreeSet<java.lang.CharSequence>(charSequenceComparator87);
        java.util.TreeSet<java.lang.CharSequence> charSequenceSet90 = new java.util.TreeSet<java.lang.CharSequence>(charSequenceComparator87);
        org.junit.Assert.assertNotNull(serializableArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(serializableCollection54);
        org.junit.Assert.assertNotNull(serializableArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(serializableItor85);
        org.junit.Assert.assertNotNull(charSequenceComparator86);
        org.junit.Assert.assertNotNull(charSequenceComparator87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
    }

    @Test
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test052");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration6 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableSet3);
        java.util.SortedSet<java.io.Serializable> serializableSet7 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList8 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet7);
        java.util.SortedSet<java.io.Serializable> serializableSet9 = java.util.Collections.unmodifiableSortedSet(serializableSet7);
        java.util.TreeSet<java.io.Serializable> serializableSet10 = new java.util.TreeSet<java.io.Serializable>(serializableSet9);
        java.io.Serializable serializable11 = serializableSet10.pollFirst();
        java.util.HashSet<java.util.ListIterator<java.io.Serializable>> serializableItorSet13 = new java.util.HashSet<java.util.ListIterator<java.io.Serializable>>((int) '4');
        java.util.NavigableSet<java.io.Serializable> serializableSet15 = serializableSet10.tailSet((java.io.Serializable) '4', true);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator16 = serializableSet10.spliterator();
        boolean boolean17 = serializableSet3.addAll((java.util.Collection<java.io.Serializable>) serializableSet10);
        java.io.Serializable[] serializableArray58 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList59 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList59, serializableArray58);
        java.util.Collection<java.io.Serializable> serializableCollection61 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList59);
        java.io.Serializable[] serializableArray68 = new java.io.Serializable[] { 'a', 10, 100, serializableList59, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList69 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList69, serializableArray68);
        boolean boolean73 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList69, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.Map<java.io.Serializable, java.lang.Object> serializableMap76 = java.util.Collections.singletonMap((java.io.Serializable) (short) 1, (java.lang.Object) (short) 1);
        int int77 = serializableList69.lastIndexOf((java.lang.Object) (short) 1);
        serializableList69.clear();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration79 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableList69);
        boolean boolean80 = serializableSet3.retainAll((java.util.Collection<java.io.Serializable>) serializableList69);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable82 = serializableList69.remove(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableEnumeration6);
        org.junit.Assert.assertNotNull(serializableSet7);
        org.junit.Assert.assertNotNull(serializableIterableList8);
        org.junit.Assert.assertNotNull(serializableSet9);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNotNull(serializableSet15);
        org.junit.Assert.assertNotNull(serializableSpliterator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(serializableArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(serializableCollection61);
        org.junit.Assert.assertNotNull(serializableArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(serializableMap76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(serializableEnumeration79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test053");
        java.util.HashSet<java.lang.Iterable<java.io.Serializable>> serializableIterableSet0 = new java.util.HashSet<java.lang.Iterable<java.io.Serializable>>();
    }

    @Test
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test054");
        java.util.NavigableSet<java.util.LinkedHashSet<java.lang.String>> strSetSet0 = java.util.Collections.emptyNavigableSet();
        org.junit.Assert.assertNotNull(strSetSet0);
    }

    @Test
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test055");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        java.io.Serializable serializable7 = serializableSet3.ceiling((java.io.Serializable) (byte) 10);
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNull(serializable7);
    }

    @Test
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test056");
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList41 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList41, serializableArray40);
        java.util.Collection<java.io.Serializable> serializableCollection43 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList41);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] { 'a', 10, 100, serializableList41, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList51 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList51, serializableArray50);
        boolean boolean55 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList51, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.Map<java.io.Serializable, java.lang.Object> serializableMap58 = java.util.Collections.singletonMap((java.io.Serializable) (short) 1, (java.lang.Object) (short) 1);
        int int59 = serializableList51.lastIndexOf((java.lang.Object) (short) 1);
        serializableList51.clear();
        java.util.SortedSet<java.io.Serializable> serializableSet61 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList62 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet61);
        java.util.SortedSet<java.io.Serializable> serializableSet63 = java.util.Collections.unmodifiableSortedSet(serializableSet61);
        java.util.TreeSet<java.io.Serializable> serializableSet64 = new java.util.TreeSet<java.io.Serializable>(serializableSet63);
        java.io.Serializable serializable65 = serializableSet64.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator66 = serializableSet64.comparator();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration67 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableSet64);
        java.util.SortedSet<java.io.Serializable> serializableSet68 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList69 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet68);
        java.util.SortedSet<java.io.Serializable> serializableSet70 = java.util.Collections.unmodifiableSortedSet(serializableSet68);
        java.util.TreeSet<java.io.Serializable> serializableSet71 = new java.util.TreeSet<java.io.Serializable>(serializableSet70);
        java.io.Serializable serializable72 = serializableSet71.pollFirst();
        java.util.HashSet<java.util.ListIterator<java.io.Serializable>> serializableItorSet74 = new java.util.HashSet<java.util.ListIterator<java.io.Serializable>>((int) '4');
        java.util.NavigableSet<java.io.Serializable> serializableSet76 = serializableSet71.tailSet((java.io.Serializable) '4', true);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator77 = serializableSet71.spliterator();
        boolean boolean78 = serializableSet64.addAll((java.util.Collection<java.io.Serializable>) serializableSet71);
        java.util.SortedSet<java.io.Serializable> serializableSet79 = java.util.Collections.synchronizedSortedSet((java.util.SortedSet<java.io.Serializable>) serializableSet64);
        boolean boolean80 = serializableList51.retainAll((java.util.Collection<java.io.Serializable>) serializableSet64);
        java.util.List<java.io.Serializable> serializableList81 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int82 = java.util.Collections.lastIndexOfSubList((java.util.List<java.io.Serializable>) serializableList51, serializableList81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(serializableCollection43);
        org.junit.Assert.assertNotNull(serializableArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(serializableMap58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(serializableSet61);
        org.junit.Assert.assertNotNull(serializableIterableList62);
        org.junit.Assert.assertNotNull(serializableSet63);
        org.junit.Assert.assertNull(serializable65);
        org.junit.Assert.assertNull(wildcardComparator66);
        org.junit.Assert.assertNotNull(serializableEnumeration67);
        org.junit.Assert.assertNotNull(serializableSet68);
        org.junit.Assert.assertNotNull(serializableIterableList69);
        org.junit.Assert.assertNotNull(serializableSet70);
        org.junit.Assert.assertNull(serializable72);
        org.junit.Assert.assertNotNull(serializableSet76);
        org.junit.Assert.assertNotNull(serializableSpliterator77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(serializableSet79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test057");
        java.util.Iterator<java.util.List<java.io.Serializable>> serializableListItor0 = java.util.Collections.emptyIterator();
        org.junit.Assert.assertNotNull(serializableListItor0);
    }

    @Test
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test058");
        java.util.Comparator<java.util.Spliterator<java.io.Serializable>> serializableSpliteratorComparator0 = java.util.Collections.reverseOrder();
        org.junit.Assert.assertNotNull(serializableSpliteratorComparator0);
    }

    @Test
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test059");
        java.util.Set<java.util.Spliterator<java.io.Serializable>> serializableSpliteratorSet0 = java.util.Collections.emptySet();
        org.junit.Assert.assertNotNull(serializableSpliteratorSet0);
    }

    @Test
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test060");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration6 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableSet3);
        java.util.SortedSet<java.io.Serializable> serializableSet7 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList8 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet7);
        java.util.SortedSet<java.io.Serializable> serializableSet9 = java.util.Collections.unmodifiableSortedSet(serializableSet7);
        java.util.TreeSet<java.io.Serializable> serializableSet10 = new java.util.TreeSet<java.io.Serializable>(serializableSet9);
        java.io.Serializable serializable11 = serializableSet10.pollFirst();
        java.util.HashSet<java.util.ListIterator<java.io.Serializable>> serializableItorSet13 = new java.util.HashSet<java.util.ListIterator<java.io.Serializable>>((int) '4');
        java.util.NavigableSet<java.io.Serializable> serializableSet15 = serializableSet10.tailSet((java.io.Serializable) '4', true);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator16 = serializableSet10.spliterator();
        boolean boolean17 = serializableSet3.addAll((java.util.Collection<java.io.Serializable>) serializableSet10);
        java.io.Serializable[] serializableArray58 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList59 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList59, serializableArray58);
        java.util.Collection<java.io.Serializable> serializableCollection61 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList59);
        java.io.Serializable[] serializableArray68 = new java.io.Serializable[] { 'a', 10, 100, serializableList59, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList69 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList69, serializableArray68);
        boolean boolean73 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList69, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.Map<java.io.Serializable, java.lang.Object> serializableMap76 = java.util.Collections.singletonMap((java.io.Serializable) (short) 1, (java.lang.Object) (short) 1);
        int int77 = serializableList69.lastIndexOf((java.lang.Object) (short) 1);
        serializableList69.clear();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration79 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableList69);
        boolean boolean80 = serializableSet3.retainAll((java.util.Collection<java.io.Serializable>) serializableList69);
        java.util.HashSet<java.lang.String> strSet81 = new java.util.HashSet<java.lang.String>();
        java.io.Serializable serializable82 = serializableSet3.floor((java.io.Serializable) strSet81);
        boolean boolean83 = strSet81.isEmpty();
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableEnumeration6);
        org.junit.Assert.assertNotNull(serializableSet7);
        org.junit.Assert.assertNotNull(serializableIterableList8);
        org.junit.Assert.assertNotNull(serializableSet9);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNotNull(serializableSet15);
        org.junit.Assert.assertNotNull(serializableSpliterator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(serializableArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(serializableCollection61);
        org.junit.Assert.assertNotNull(serializableArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(serializableMap76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(serializableEnumeration79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(serializable82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test061");
        java.util.Set<java.util.Comparator<java.lang.CharSequence>> charSequenceComparatorSet0 = java.util.Collections.emptySet();
        org.junit.Assert.assertNotNull(charSequenceComparatorSet0);
    }

    @Test
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test062");
        java.util.Comparator<java.lang.CharSequence> charSequenceComparator0 = java.util.Collections.reverseOrder();
        java.util.Comparator<java.lang.CharSequence> charSequenceComparator1 = java.util.Collections.reverseOrder(charSequenceComparator0);
        java.util.Comparator<java.lang.CharSequence> charSequenceComparator2 = java.util.Collections.reverseOrder(charSequenceComparator0);
        java.util.Comparator<java.lang.CharSequence> charSequenceComparator3 = java.util.Collections.reverseOrder(charSequenceComparator2);
        java.lang.Class<?> wildcardClass4 = charSequenceComparator3.getClass();
        org.junit.Assert.assertNotNull(charSequenceComparator0);
        org.junit.Assert.assertNotNull(charSequenceComparator1);
        org.junit.Assert.assertNotNull(charSequenceComparator2);
        org.junit.Assert.assertNotNull(charSequenceComparator3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test063");
        java.io.Serializable[] serializableArray37 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList38 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList38, serializableArray37);
        java.util.Collection<java.io.Serializable> serializableCollection40 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList38);
        java.lang.Object obj41 = serializableList38.clone();
        java.util.Iterator<java.io.Serializable> serializableItor42 = serializableList38.iterator();
        java.util.ArrayList<java.util.Enumeration<java.util.HashSet<java.lang.String>>> strSetEnumerationList44 = new java.util.ArrayList<java.util.Enumeration<java.util.HashSet<java.lang.String>>>((int) (short) 100);
        boolean boolean45 = serializableList38.equals((java.lang.Object) strSetEnumerationList44);
        java.lang.Class<java.io.Serializable> serializableClass46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collection<java.io.Serializable> serializableCollection47 = java.util.Collections.checkedCollection((java.util.Collection<java.io.Serializable>) serializableList38, serializableClass46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: type");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(serializableCollection40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertNotNull(serializableItor42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test064");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        java.util.NavigableSet<java.io.Serializable> serializableSet6 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet3);
        java.util.SortedSet<java.io.Serializable> serializableSet7 = java.util.Collections.synchronizedSortedSet((java.util.SortedSet<java.io.Serializable>) serializableSet6);
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableSet6);
        org.junit.Assert.assertNotNull(serializableSet7);
    }

    @Test
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test065");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration6 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableSet3);
        java.util.SortedSet<java.io.Serializable> serializableSet7 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList8 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet7);
        java.util.SortedSet<java.io.Serializable> serializableSet9 = java.util.Collections.unmodifiableSortedSet(serializableSet7);
        java.util.TreeSet<java.io.Serializable> serializableSet10 = new java.util.TreeSet<java.io.Serializable>(serializableSet9);
        java.io.Serializable serializable11 = serializableSet10.pollFirst();
        java.util.HashSet<java.util.ListIterator<java.io.Serializable>> serializableItorSet13 = new java.util.HashSet<java.util.ListIterator<java.io.Serializable>>((int) '4');
        java.util.NavigableSet<java.io.Serializable> serializableSet15 = serializableSet10.tailSet((java.io.Serializable) '4', true);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator16 = serializableSet10.spliterator();
        boolean boolean17 = serializableSet3.addAll((java.util.Collection<java.io.Serializable>) serializableSet10);
        java.util.SortedSet<java.io.Serializable> serializableSet18 = java.util.Collections.synchronizedSortedSet((java.util.SortedSet<java.io.Serializable>) serializableSet3);
        java.lang.Class<java.io.Serializable> serializableClass19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.SortedSet<java.io.Serializable> serializableSet20 = java.util.Collections.checkedSortedSet(serializableSet18, serializableClass19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: type");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableEnumeration6);
        org.junit.Assert.assertNotNull(serializableSet7);
        org.junit.Assert.assertNotNull(serializableIterableList8);
        org.junit.Assert.assertNotNull(serializableSet9);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNotNull(serializableSet15);
        org.junit.Assert.assertNotNull(serializableSpliterator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(serializableSet18);
    }

    @Test
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test066");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.util.HashSet<java.lang.String> strSet5 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.lang.Object obj6 = strSet5.clone();
        java.io.Serializable serializable7 = serializableSet3.lower((java.io.Serializable) strSet5);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet11 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet11, strArray10);
        boolean boolean14 = strSet11.equals((java.lang.Object) false);
        boolean boolean15 = strSet11.isEmpty();
        boolean boolean17 = strSet11.equals((java.lang.Object) 10L);
        java.util.SortedSet<java.io.Serializable> serializableSet18 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList19 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet18);
        java.util.SortedSet<java.io.Serializable> serializableSet20 = java.util.Collections.unmodifiableSortedSet(serializableSet18);
        java.util.TreeSet<java.io.Serializable> serializableSet21 = new java.util.TreeSet<java.io.Serializable>(serializableSet20);
        boolean boolean23 = serializableSet21.remove((java.lang.Object) (-1.0f));
        java.util.Comparator<? super java.io.Serializable> wildcardComparator24 = serializableSet21.comparator();
        boolean boolean25 = strSet11.remove((java.lang.Object) serializableSet21);
        boolean boolean26 = strSet5.remove((java.lang.Object) serializableSet21);
        java.util.SortedSet<java.io.Serializable> serializableSet27 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList28 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet27);
        java.util.SortedSet<java.io.Serializable> serializableSet29 = java.util.Collections.unmodifiableSortedSet(serializableSet27);
        java.util.TreeSet<java.io.Serializable> serializableSet30 = new java.util.TreeSet<java.io.Serializable>(serializableSet29);
        java.io.Serializable serializable31 = serializableSet30.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator32 = serializableSet30.comparator();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean33 = serializableSet21.add((java.io.Serializable) serializableSet30);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class java.util.TreeSet cannot be cast to class java.lang.Comparable (java.util.TreeSet and java.lang.Comparable are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "[]");
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(serializableSet18);
        org.junit.Assert.assertNotNull(serializableIterableList19);
        org.junit.Assert.assertNotNull(serializableSet20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardComparator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(serializableSet27);
        org.junit.Assert.assertNotNull(serializableIterableList28);
        org.junit.Assert.assertNotNull(serializableSet29);
        org.junit.Assert.assertNull(serializable31);
        org.junit.Assert.assertNull(wildcardComparator32);
    }

    @Test
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test067");
        java.util.Enumeration<java.util.NavigableSet<java.io.Serializable>> serializableSetEnumeration0 = java.util.Collections.emptyEnumeration();
        org.junit.Assert.assertNotNull(serializableSetEnumeration0);
    }

    @Test
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test068");
        java.util.Enumeration<java.util.SortedMap<java.util.Enumeration<java.util.HashSet<java.lang.String>>, java.util.Iterator<java.io.Serializable>>> setEnumerationMapEnumeration0 = java.util.Collections.emptyEnumeration();
        org.junit.Assert.assertNotNull(setEnumerationMapEnumeration0);
    }

    @Test
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test069");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable[] serializableArray55 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList56 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList56, serializableArray55);
        java.util.Collection<java.io.Serializable> serializableCollection58 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList56);
        java.io.Serializable[] serializableArray83 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList56, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList84 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList84, serializableArray83);
        serializableList84.ensureCapacity(100);
        serializableList84.trimToSize();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean89 = serializableSet3.add((java.io.Serializable) serializableList84);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class java.util.ArrayList cannot be cast to class java.lang.Comparable (java.util.ArrayList and java.lang.Comparable are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNotNull(serializableArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(serializableCollection58);
        org.junit.Assert.assertNotNull(serializableArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test070");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        boolean boolean10 = strSet7.equals((java.lang.Object) false);
        java.io.Serializable serializable11 = serializableSet3.floor((java.io.Serializable) boolean10);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable12 = serializableSet3.last();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(serializable11);
    }

    @Test
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test071");
        java.io.Serializable[] serializableArray38 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList39 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList39, serializableArray38);
        java.util.Collection<java.io.Serializable> serializableCollection41 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList39);
        java.lang.Object[] objArray42 = serializableList39.toArray();
        java.util.List<java.util.List<java.io.Serializable>> serializableListList43 = java.util.Collections.nCopies(0, (java.util.List<java.io.Serializable>) serializableList39);
        java.util.function.UnaryOperator<java.io.Serializable> serializableUnaryOperator44 = null;
        // The following exception was thrown during execution in test generation
        try {
            serializableList39.replaceAll(serializableUnaryOperator44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(serializableCollection41);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertNotNull(serializableListList43);
    }

    @Test
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test072");
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList41 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList41, serializableArray40);
        java.util.Collection<java.io.Serializable> serializableCollection43 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList41);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] { 'a', 10, 100, serializableList41, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList51 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList51, serializableArray50);
        boolean boolean55 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList51, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        serializableList51.add(10, (java.io.Serializable) '#');
        java.io.Serializable serializable60 = serializableList51.remove(0);
        java.io.Serializable serializable62 = serializableList51.get(1);
        org.junit.Assert.assertNotNull(serializableArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(serializableCollection43);
        org.junit.Assert.assertNotNull(serializableArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + serializable60 + "' != '" + 'a' + "'", serializable60, 'a');
        org.junit.Assert.assertEquals("'" + serializable62 + "' != '" + 100 + "'", serializable62, 100);
    }

    @Test
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test073");
        java.util.SortedSet<java.util.ArrayList<java.io.Serializable>> serializableListSet0 = java.util.Collections.emptySortedSet();
        org.junit.Assert.assertNotNull(serializableListSet0);
    }

    @Test
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test074");
        java.util.NavigableSet<java.util.RandomAccess> randomAccessSet0 = java.util.Collections.emptyNavigableSet();
        org.junit.Assert.assertNotNull(randomAccessSet0);
    }

    @Test
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test075");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        serializableSet3.clear();
        java.util.Iterator<java.io.Serializable> serializableItor7 = serializableSet3.descendingIterator();
        java.io.Serializable[] serializableArray59 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList60 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList60, serializableArray59);
        java.util.Collection<java.io.Serializable> serializableCollection62 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList60);
        java.io.Serializable[] serializableArray87 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList60, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList88 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList88, serializableArray87);
        serializableList88.ensureCapacity(100);
        java.lang.Object[] objArray92 = serializableList88.toArray();
        boolean boolean94 = serializableList88.remove((java.lang.Object) (byte) 0);
        java.io.Serializable serializable95 = serializableSet3.higher((java.io.Serializable) (byte) 0);
        boolean boolean97 = serializableSet3.contains((java.lang.Object) ' ');
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableItor7);
        org.junit.Assert.assertNotNull(serializableArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(serializableCollection62);
        org.junit.Assert.assertNotNull(serializableArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNull(serializable95);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test076");
        java.io.Serializable[] serializableArray51 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList52 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList52, serializableArray51);
        java.util.Collection<java.io.Serializable> serializableCollection54 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList52);
        java.io.Serializable[] serializableArray79 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList52, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList80 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList80, serializableArray79);
        serializableList80.ensureCapacity(100);
        java.util.stream.Stream<java.io.Serializable> serializableStream84 = serializableList80.stream();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration85 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableList80);
        java.util.function.UnaryOperator<java.io.Serializable> serializableUnaryOperator86 = null;
        // The following exception was thrown during execution in test generation
        try {
            serializableList80.replaceAll(serializableUnaryOperator86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(serializableCollection54);
        org.junit.Assert.assertNotNull(serializableArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(serializableStream84);
        org.junit.Assert.assertNotNull(serializableEnumeration85);
    }

    @Test
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test077");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        java.util.NavigableSet<java.io.Serializable> serializableSet6 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet3);
        java.util.SortedSet<java.io.Serializable> serializableSet7 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList8 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet7);
        java.util.SortedSet<java.io.Serializable> serializableSet9 = java.util.Collections.unmodifiableSortedSet(serializableSet7);
        java.util.TreeSet<java.io.Serializable> serializableSet10 = new java.util.TreeSet<java.io.Serializable>(serializableSet9);
        java.util.HashSet<java.lang.String> strSet12 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.lang.Object obj13 = strSet12.clone();
        java.io.Serializable serializable14 = serializableSet10.lower((java.io.Serializable) strSet12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        boolean boolean21 = strSet18.equals((java.lang.Object) false);
        boolean boolean22 = strSet18.isEmpty();
        boolean boolean24 = strSet18.equals((java.lang.Object) 10L);
        java.util.SortedSet<java.io.Serializable> serializableSet25 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList26 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet25);
        java.util.SortedSet<java.io.Serializable> serializableSet27 = java.util.Collections.unmodifiableSortedSet(serializableSet25);
        java.util.TreeSet<java.io.Serializable> serializableSet28 = new java.util.TreeSet<java.io.Serializable>(serializableSet27);
        boolean boolean30 = serializableSet28.remove((java.lang.Object) (-1.0f));
        java.util.Comparator<? super java.io.Serializable> wildcardComparator31 = serializableSet28.comparator();
        boolean boolean32 = strSet18.remove((java.lang.Object) serializableSet28);
        boolean boolean33 = strSet12.remove((java.lang.Object) serializableSet28);
        boolean boolean34 = serializableSet3.remove((java.lang.Object) boolean33);
        java.util.HashSet<java.util.ListIterator<java.io.Serializable>> serializableItorSet36 = new java.util.HashSet<java.util.ListIterator<java.io.Serializable>>((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean37 = serializableSet3.remove((java.lang.Object) serializableItorSet36);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class java.util.HashSet cannot be cast to class java.lang.Comparable (java.util.HashSet and java.lang.Comparable are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableSet6);
        org.junit.Assert.assertNotNull(serializableSet7);
        org.junit.Assert.assertNotNull(serializableIterableList8);
        org.junit.Assert.assertNotNull(serializableSet9);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "[]");
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(serializableSet25);
        org.junit.Assert.assertNotNull(serializableIterableList26);
        org.junit.Assert.assertNotNull(serializableSet27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardComparator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test078");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration6 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableSet3);
        java.util.SortedSet<java.io.Serializable> serializableSet7 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList8 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet7);
        java.util.SortedSet<java.io.Serializable> serializableSet9 = java.util.Collections.unmodifiableSortedSet(serializableSet7);
        java.util.TreeSet<java.io.Serializable> serializableSet10 = new java.util.TreeSet<java.io.Serializable>(serializableSet9);
        java.io.Serializable serializable11 = serializableSet10.pollFirst();
        java.util.HashSet<java.util.ListIterator<java.io.Serializable>> serializableItorSet13 = new java.util.HashSet<java.util.ListIterator<java.io.Serializable>>((int) '4');
        java.util.NavigableSet<java.io.Serializable> serializableSet15 = serializableSet10.tailSet((java.io.Serializable) '4', true);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator16 = serializableSet10.spliterator();
        boolean boolean17 = serializableSet3.addAll((java.util.Collection<java.io.Serializable>) serializableSet10);
        java.util.Iterator<java.io.Serializable> serializableItor18 = serializableSet10.iterator();
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableEnumeration6);
        org.junit.Assert.assertNotNull(serializableSet7);
        org.junit.Assert.assertNotNull(serializableIterableList8);
        org.junit.Assert.assertNotNull(serializableSet9);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNotNull(serializableSet15);
        org.junit.Assert.assertNotNull(serializableSpliterator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(serializableItor18);
    }

    @Test
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test079");
        java.io.Serializable[] serializableArray51 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList52 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList52, serializableArray51);
        java.util.Collection<java.io.Serializable> serializableCollection54 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList52);
        java.io.Serializable[] serializableArray79 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList52, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList80 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList80, serializableArray79);
        serializableList80.ensureCapacity(100);
        java.util.stream.Stream<java.io.Serializable> serializableStream84 = serializableList80.stream();
        boolean boolean85 = serializableList80.isEmpty();
        java.io.Serializable serializable86 = null;
        boolean boolean88 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList80, serializable86, (java.io.Serializable) 10L);
        org.junit.Assert.assertNotNull(serializableArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(serializableCollection54);
        org.junit.Assert.assertNotNull(serializableArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(serializableStream84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test080");
        java.util.NavigableSet<java.io.Serializable> serializableSet0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.NavigableSet<java.io.Serializable> serializableSet1 = java.util.Collections.unmodifiableNavigableSet(serializableSet0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test081");
        java.io.Serializable[] serializableArray51 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList52 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList52, serializableArray51);
        java.util.Collection<java.io.Serializable> serializableCollection54 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList52);
        java.io.Serializable[] serializableArray79 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList52, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList80 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList80, serializableArray79);
        serializableList80.ensureCapacity(100);
        java.util.ListIterator<java.io.Serializable> serializableItor85 = serializableList80.listIterator(0);
        java.util.Comparator<java.lang.CharSequence> charSequenceComparator86 = java.util.Collections.reverseOrder();
        java.util.Comparator<java.lang.CharSequence> charSequenceComparator87 = java.util.Collections.reverseOrder(charSequenceComparator86);
        int int88 = serializableList80.indexOf((java.lang.Object) charSequenceComparator87);
        java.util.Random random89 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections.shuffle((java.util.List<java.io.Serializable>) serializableList80, random89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(serializableCollection54);
        org.junit.Assert.assertNotNull(serializableArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(serializableItor85);
        org.junit.Assert.assertNotNull(charSequenceComparator86);
        org.junit.Assert.assertNotNull(charSequenceComparator87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
    }

    @Test
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test082");
        java.util.HashSet<java.lang.String> strSet1 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.lang.Object obj2 = strSet1.clone();
        boolean boolean3 = strSet1.isEmpty();
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test083");
        java.util.SortedMap<java.lang.Class<?>, java.lang.String> wildcardClassMap0 = java.util.Collections.emptySortedMap();
        org.junit.Assert.assertNotNull(wildcardClassMap0);
    }

    @Test
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test084");
        java.util.Comparator<java.util.Collection<java.io.Serializable>> serializableCollectionComparator0 = java.util.Collections.reverseOrder();
        org.junit.Assert.assertNotNull(serializableCollectionComparator0);
    }

    @Test
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test085");
        java.util.Comparator<java.util.AbstractSet<java.lang.String>> strSetComparator0 = java.util.Collections.reverseOrder();
        org.junit.Assert.assertNotNull(strSetComparator0);
    }

    @Test
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test086");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        java.util.NavigableSet<java.io.Serializable> serializableSet6 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet3);
        java.util.SortedSet<java.io.Serializable> serializableSet7 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList8 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet7);
        java.util.SortedSet<java.io.Serializable> serializableSet9 = java.util.Collections.unmodifiableSortedSet(serializableSet7);
        java.util.TreeSet<java.io.Serializable> serializableSet10 = new java.util.TreeSet<java.io.Serializable>(serializableSet9);
        java.io.Serializable serializable11 = serializableSet10.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator12 = serializableSet10.comparator();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration13 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableSet10);
        java.util.SortedSet<java.io.Serializable> serializableSet14 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList15 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet14);
        java.util.SortedSet<java.io.Serializable> serializableSet16 = java.util.Collections.unmodifiableSortedSet(serializableSet14);
        java.util.TreeSet<java.io.Serializable> serializableSet17 = new java.util.TreeSet<java.io.Serializable>(serializableSet16);
        java.io.Serializable serializable18 = serializableSet17.pollFirst();
        java.util.HashSet<java.util.ListIterator<java.io.Serializable>> serializableItorSet20 = new java.util.HashSet<java.util.ListIterator<java.io.Serializable>>((int) '4');
        java.util.NavigableSet<java.io.Serializable> serializableSet22 = serializableSet17.tailSet((java.io.Serializable) '4', true);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator23 = serializableSet17.spliterator();
        boolean boolean24 = serializableSet10.addAll((java.util.Collection<java.io.Serializable>) serializableSet17);
        java.io.Serializable[] serializableArray65 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList66 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList66, serializableArray65);
        java.util.Collection<java.io.Serializable> serializableCollection68 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList66);
        java.io.Serializable[] serializableArray75 = new java.io.Serializable[] { 'a', 10, 100, serializableList66, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList76 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList76, serializableArray75);
        boolean boolean80 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList76, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.Map<java.io.Serializable, java.lang.Object> serializableMap83 = java.util.Collections.singletonMap((java.io.Serializable) (short) 1, (java.lang.Object) (short) 1);
        int int84 = serializableList76.lastIndexOf((java.lang.Object) (short) 1);
        serializableList76.clear();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration86 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableList76);
        boolean boolean87 = serializableSet10.retainAll((java.util.Collection<java.io.Serializable>) serializableList76);
        java.util.HashSet<java.lang.String> strSet88 = new java.util.HashSet<java.lang.String>();
        java.io.Serializable serializable89 = serializableSet10.floor((java.io.Serializable) strSet88);
        // The following exception was thrown during execution in test generation
        try {
            java.util.NavigableSet<java.io.Serializable> serializableSet91 = serializableSet3.headSet((java.io.Serializable) serializableSet10, true);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class java.util.TreeSet cannot be cast to class java.lang.Comparable (java.util.TreeSet and java.lang.Comparable are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableSet6);
        org.junit.Assert.assertNotNull(serializableSet7);
        org.junit.Assert.assertNotNull(serializableIterableList8);
        org.junit.Assert.assertNotNull(serializableSet9);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(wildcardComparator12);
        org.junit.Assert.assertNotNull(serializableEnumeration13);
        org.junit.Assert.assertNotNull(serializableSet14);
        org.junit.Assert.assertNotNull(serializableIterableList15);
        org.junit.Assert.assertNotNull(serializableSet16);
        org.junit.Assert.assertNull(serializable18);
        org.junit.Assert.assertNotNull(serializableSet22);
        org.junit.Assert.assertNotNull(serializableSpliterator23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(serializableArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(serializableCollection68);
        org.junit.Assert.assertNotNull(serializableArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(serializableMap83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(serializableEnumeration86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(serializable89);
    }

    @Test
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test087");
        java.util.HashSet<java.util.stream.Stream[]> streamArraySet2 = new java.util.HashSet<java.util.stream.Stream[]>(34, (float) 34);
    }

    @Test
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test088");
        java.util.Comparator<java.util.LinkedHashSet<java.lang.String>> strSetComparator0 = java.util.Collections.reverseOrder();
        org.junit.Assert.assertNotNull(strSetComparator0);
    }

    @Test
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test089");
        java.io.Serializable[] serializableArray37 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList38 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList38, serializableArray37);
        java.util.Collection<java.io.Serializable> serializableCollection40 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList38);
        java.lang.Object obj41 = serializableList38.clone();
        java.util.Iterator<java.io.Serializable> serializableItor42 = serializableList38.iterator();
        serializableList38.clear();
        java.util.SortedSet<java.io.Serializable> serializableSet44 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList45 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet44);
        java.util.SortedSet<java.io.Serializable> serializableSet46 = java.util.Collections.unmodifiableSortedSet(serializableSet44);
        java.util.TreeSet<java.io.Serializable> serializableSet47 = new java.util.TreeSet<java.io.Serializable>(serializableSet46);
        java.io.Serializable serializable48 = serializableSet47.pollFirst();
        java.io.Serializable serializable50 = serializableSet47.ceiling((java.io.Serializable) 0.0d);
        java.util.Comparator<? super java.io.Serializable> wildcardComparator51 = serializableSet47.comparator();
        int int52 = serializableList38.lastIndexOf((java.lang.Object) wildcardComparator51);
        org.junit.Assert.assertNotNull(serializableArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(serializableCollection40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertNotNull(serializableItor42);
        org.junit.Assert.assertNotNull(serializableSet44);
        org.junit.Assert.assertNotNull(serializableIterableList45);
        org.junit.Assert.assertNotNull(serializableSet46);
        org.junit.Assert.assertNull(serializable48);
        org.junit.Assert.assertNull(serializable50);
        org.junit.Assert.assertNull(wildcardComparator51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
    }

    @Test
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test090");
        java.util.SortedSet<java.lang.AutoCloseable> autoCloseableSet0 = java.util.Collections.emptySortedSet();
        org.junit.Assert.assertNotNull(autoCloseableSet0);
    }

    @Test
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test091");
        java.util.Set<java.util.AbstractSet<java.lang.String>> strSetSet0 = java.util.Collections.emptySet();
        org.junit.Assert.assertNotNull(strSetSet0);
    }

    @Test
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test092");
        java.util.SortedSet<java.lang.reflect.AnnotatedElement> annotatedElementSet0 = java.util.Collections.emptySortedSet();
        org.junit.Assert.assertNotNull(annotatedElementSet0);
    }

    @Test
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test093");
        java.util.Enumeration<java.util.stream.Stream[]> streamArrayEnumeration0 = java.util.Collections.emptyEnumeration();
        org.junit.Assert.assertNotNull(streamArrayEnumeration0);
    }

    @Test
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test094");
        java.util.Map map0 = java.util.Collections.EMPTY_MAP;
        java.lang.Class<java.lang.Comparable<java.lang.String>> strComparableClass1 = null;
        java.lang.Class<java.util.Comparator<java.lang.CharSequence>> charSequenceComparatorClass2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.Comparable<java.lang.String>, java.util.Comparator<java.lang.CharSequence>> strComparableMap3 = java.util.Collections.checkedMap((java.util.Map<java.lang.Comparable<java.lang.String>, java.util.Comparator<java.lang.CharSequence>>) map0, strComparableClass1, charSequenceComparatorClass2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(map0);
    }

    @Test
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test095");
        java.util.NavigableSet<java.util.Map<java.lang.Comparable<java.lang.String>, java.util.Comparator<java.lang.CharSequence>>> strComparableMapSet0 = java.util.Collections.emptyNavigableSet();
        org.junit.Assert.assertNotNull(strComparableMapSet0);
    }

    @Test
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test096");
        java.util.Enumeration<java.util.RandomAccess> randomAccessEnumeration0 = java.util.Collections.emptyEnumeration();
        org.junit.Assert.assertNotNull(randomAccessEnumeration0);
    }

    @Test
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test097");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.io.Serializable[] serializableArray56 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList57 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList57, serializableArray56);
        java.util.Collection<java.io.Serializable> serializableCollection59 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList57);
        java.io.Serializable[] serializableArray84 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList57, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList85 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList85, serializableArray84);
        serializableList85.ensureCapacity(100);
        java.lang.Object[] objArray89 = serializableList85.toArray();
        boolean boolean91 = serializableList85.remove((java.lang.Object) (byte) 0);
        java.util.NavigableSet<java.io.Serializable> serializableSet93 = serializableSet3.tailSet((java.io.Serializable) boolean91, true);
        java.util.Set<java.io.Serializable> serializableSet94 = java.util.Collections.synchronizedSet((java.util.Set<java.io.Serializable>) serializableSet3);
        java.lang.Class<java.io.Serializable> serializableClass95 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.NavigableSet<java.io.Serializable> serializableSet96 = java.util.Collections.checkedNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet3, serializableClass95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: type");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(serializableArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(serializableCollection59);
        org.junit.Assert.assertNotNull(serializableArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(serializableSet93);
        org.junit.Assert.assertNotNull(serializableSet94);
    }

    @Test
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test098");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        int int6 = serializableSet3.size();
        java.util.HashSet<java.lang.String> strSet8 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.lang.Object obj9 = null;
        boolean boolean10 = strSet8.contains(obj9);
        int int11 = strSet8.size();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        boolean boolean19 = strSet16.equals((java.lang.Object) false);
        boolean boolean20 = strSet16.isEmpty();
        boolean boolean22 = strSet16.equals((java.lang.Object) 10L);
        java.util.SortedSet<java.io.Serializable> serializableSet23 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList24 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet23);
        java.util.SortedSet<java.io.Serializable> serializableSet25 = java.util.Collections.unmodifiableSortedSet(serializableSet23);
        java.util.TreeSet<java.io.Serializable> serializableSet26 = new java.util.TreeSet<java.io.Serializable>(serializableSet25);
        boolean boolean28 = serializableSet26.remove((java.lang.Object) (-1.0f));
        java.util.Comparator<? super java.io.Serializable> wildcardComparator29 = serializableSet26.comparator();
        boolean boolean30 = strSet16.remove((java.lang.Object) serializableSet26);
        // The following exception was thrown during execution in test generation
        try {
            java.util.NavigableSet<java.io.Serializable> serializableSet32 = serializableSet3.subSet((java.io.Serializable) strSet8, false, (java.io.Serializable) boolean30, true);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class java.util.HashSet cannot be cast to class java.lang.Comparable (java.util.HashSet and java.lang.Comparable are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(serializableSet23);
        org.junit.Assert.assertNotNull(serializableIterableList24);
        org.junit.Assert.assertNotNull(serializableSet25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(wildcardComparator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test099");
        java.util.Set<java.util.TreeSet<java.io.Serializable>> serializableSetSet0 = java.util.Collections.emptySet();
        org.junit.Assert.assertNotNull(serializableSetSet0);
    }

    @Test
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test100");
        java.util.SortedSet<java.util.RandomAccess> randomAccessSet0 = java.util.Collections.emptySortedSet();
        org.junit.Assert.assertNotNull(randomAccessSet0);
    }

    @Test
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test101");
        java.util.Enumeration<java.util.HashSet<java.lang.String>> strSetEnumeration0 = java.util.Collections.emptyEnumeration();
        java.util.ArrayList<java.util.HashSet<java.lang.String>> strSetList1 = java.util.Collections.list(strSetEnumeration0);
        java.util.ArrayList<java.util.HashSet<java.lang.String>> strSetList2 = java.util.Collections.list(strSetEnumeration0);
        java.util.ArrayList<java.util.HashSet<java.lang.String>> strSetList3 = java.util.Collections.list(strSetEnumeration0);
        org.junit.Assert.assertNotNull(strSetEnumeration0);
        org.junit.Assert.assertNotNull(strSetList1);
        org.junit.Assert.assertNotNull(strSetList2);
        org.junit.Assert.assertNotNull(strSetList3);
    }

    @Test
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test102");
        java.util.SortedMap<java.util.RandomAccess, java.util.ArrayList<java.io.Serializable>> randomAccessMap0 = java.util.Collections.emptySortedMap();
        org.junit.Assert.assertNotNull(randomAccessMap0);
    }

    @Test
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test103");
        java.util.NavigableMap<java.lang.reflect.GenericDeclaration, java.lang.Iterable<java.io.Serializable>> genericDeclarationMap0 = java.util.Collections.emptyNavigableMap();
        org.junit.Assert.assertNotNull(genericDeclarationMap0);
    }

    @Test
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test104");
        java.util.Iterator<java.util.Comparator<java.lang.CharSequence>> charSequenceComparatorItor0 = java.util.Collections.emptyIterator();
        org.junit.Assert.assertNotNull(charSequenceComparatorItor0);
    }

    @Test
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test105");
        java.util.HashSet<java.lang.String> strSet1 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList3 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet2);
        java.util.SortedSet<java.io.Serializable> serializableSet4 = java.util.Collections.unmodifiableSortedSet(serializableSet2);
        java.util.TreeSet<java.io.Serializable> serializableSet5 = new java.util.TreeSet<java.io.Serializable>(serializableSet4);
        java.io.Serializable serializable6 = serializableSet5.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator7 = serializableSet5.comparator();
        int int8 = serializableSet5.size();
        boolean boolean9 = strSet1.remove((java.lang.Object) serializableSet5);
        boolean boolean10 = strSet1.isEmpty();
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNotNull(serializableIterableList3);
        org.junit.Assert.assertNotNull(serializableSet4);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertNull(wildcardComparator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test106");
        java.util.Enumeration<java.lang.Cloneable> cloneableEnumeration0 = java.util.Collections.emptyEnumeration();
        org.junit.Assert.assertNotNull(cloneableEnumeration0);
    }

    @Test
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test107");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean6 = strSet3.equals((java.lang.Object) false);
        int int7 = strSet3.size();
        java.util.SortedSet<java.io.Serializable> serializableSet8 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList9 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet8);
        java.util.SortedSet<java.io.Serializable> serializableSet10 = java.util.Collections.unmodifiableSortedSet(serializableSet8);
        boolean boolean11 = strSet3.removeAll((java.util.Collection<java.io.Serializable>) serializableSet8);
        int int12 = strSet3.size();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(serializableSet8);
        org.junit.Assert.assertNotNull(serializableIterableList9);
        org.junit.Assert.assertNotNull(serializableSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
    }

    @Test
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test108");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        serializableSet3.clear();
        java.util.NavigableSet<java.io.Serializable> serializableSet7 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet3);
        java.lang.Class<java.io.Serializable> serializableClass8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.NavigableSet<java.io.Serializable> serializableSet9 = java.util.Collections.checkedNavigableSet(serializableSet7, serializableClass8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: type");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableSet7);
    }

    @Test
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test109");
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList41 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList41, serializableArray40);
        java.util.Collection<java.io.Serializable> serializableCollection43 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList41);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] { 'a', 10, 100, serializableList41, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList51 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList51, serializableArray50);
        boolean boolean55 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList51, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator56 = serializableList51.spliterator();
        serializableList51.clear();
        boolean boolean58 = serializableList51.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable60 = serializableList51.remove((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(serializableCollection43);
        org.junit.Assert.assertNotNull(serializableArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(serializableSpliterator56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test110");
        java.io.Serializable[] serializableArray51 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList52 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList52, serializableArray51);
        java.util.Collection<java.io.Serializable> serializableCollection54 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList52);
        java.io.Serializable[] serializableArray79 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList52, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList80 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList80, serializableArray79);
        serializableList80.ensureCapacity(100);
        java.util.ListIterator<java.io.Serializable> serializableItor85 = serializableList80.listIterator(0);
        java.util.Comparator<java.lang.CharSequence> charSequenceComparator86 = java.util.Collections.reverseOrder();
        java.util.Comparator<java.lang.CharSequence> charSequenceComparator87 = java.util.Collections.reverseOrder(charSequenceComparator86);
        int int88 = serializableList80.indexOf((java.lang.Object) charSequenceComparator87);
        java.util.HashSet<java.lang.String> strSet90 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        int int91 = strSet90.size();
        strSet90.clear();
        java.util.Collections.fill((java.util.List<java.io.Serializable>) serializableList80, strSet90);
        java.lang.CharSequence[] charSequenceArray98 = new java.lang.CharSequence[] { "hi!", "hi!", "hi!", "" };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence[] charSequenceArray99 = serializableList80.toArray(charSequenceArray98);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: arraycopy: element type mismatch: can not cast one of the elements of java.lang.Object[] to the type of the destination array, java.lang.CharSequence");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(serializableCollection54);
        org.junit.Assert.assertNotNull(serializableArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(serializableItor85);
        org.junit.Assert.assertNotNull(charSequenceComparator86);
        org.junit.Assert.assertNotNull(charSequenceComparator87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNotNull(charSequenceArray98);
    }

    @Test
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test111");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        int int6 = serializableSet3.size();
        java.io.Serializable serializable7 = serializableSet3.pollFirst();
        java.util.SortedSet<java.io.Serializable> serializableSet8 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList9 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet8);
        java.util.SortedSet<java.io.Serializable> serializableSet10 = java.util.Collections.unmodifiableSortedSet(serializableSet8);
        java.util.TreeSet<java.io.Serializable> serializableSet11 = new java.util.TreeSet<java.io.Serializable>(serializableSet10);
        java.util.HashSet<java.lang.String> strSet13 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.lang.Object obj14 = strSet13.clone();
        java.io.Serializable serializable15 = serializableSet11.lower((java.io.Serializable) strSet13);
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        boolean boolean22 = strSet19.equals((java.lang.Object) false);
        boolean boolean23 = strSet19.isEmpty();
        boolean boolean25 = strSet19.equals((java.lang.Object) 10L);
        java.util.SortedSet<java.io.Serializable> serializableSet26 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList27 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet26);
        java.util.SortedSet<java.io.Serializable> serializableSet28 = java.util.Collections.unmodifiableSortedSet(serializableSet26);
        java.util.TreeSet<java.io.Serializable> serializableSet29 = new java.util.TreeSet<java.io.Serializable>(serializableSet28);
        boolean boolean31 = serializableSet29.remove((java.lang.Object) (-1.0f));
        java.util.Comparator<? super java.io.Serializable> wildcardComparator32 = serializableSet29.comparator();
        boolean boolean33 = strSet19.remove((java.lang.Object) serializableSet29);
        boolean boolean34 = strSet13.remove((java.lang.Object) serializableSet29);
        java.util.Iterator<java.io.Serializable> serializableItor35 = serializableSet29.iterator();
        // The following exception was thrown during execution in test generation
        try {
            java.util.SortedSet<java.io.Serializable> serializableSet36 = serializableSet3.headSet((java.io.Serializable) serializableSet29);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class java.util.TreeSet cannot be cast to class java.lang.Comparable (java.util.TreeSet and java.lang.Comparable are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNotNull(serializableSet8);
        org.junit.Assert.assertNotNull(serializableIterableList9);
        org.junit.Assert.assertNotNull(serializableSet10);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "[]");
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(serializableSet26);
        org.junit.Assert.assertNotNull(serializableIterableList27);
        org.junit.Assert.assertNotNull(serializableSet28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(wildcardComparator32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(serializableItor35);
    }

    @Test
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test112");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration6 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableSet3);
        java.util.SortedSet<java.io.Serializable> serializableSet7 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList8 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet7);
        java.util.SortedSet<java.io.Serializable> serializableSet9 = java.util.Collections.unmodifiableSortedSet(serializableSet7);
        java.util.TreeSet<java.io.Serializable> serializableSet10 = new java.util.TreeSet<java.io.Serializable>(serializableSet9);
        java.io.Serializable serializable11 = serializableSet10.pollFirst();
        java.util.HashSet<java.util.ListIterator<java.io.Serializable>> serializableItorSet13 = new java.util.HashSet<java.util.ListIterator<java.io.Serializable>>((int) '4');
        java.util.NavigableSet<java.io.Serializable> serializableSet15 = serializableSet10.tailSet((java.io.Serializable) '4', true);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator16 = serializableSet10.spliterator();
        boolean boolean17 = serializableSet3.addAll((java.util.Collection<java.io.Serializable>) serializableSet10);
        java.io.Serializable[] serializableArray58 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList59 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList59, serializableArray58);
        java.util.Collection<java.io.Serializable> serializableCollection61 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList59);
        java.io.Serializable[] serializableArray68 = new java.io.Serializable[] { 'a', 10, 100, serializableList59, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList69 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList69, serializableArray68);
        boolean boolean73 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList69, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.Map<java.io.Serializable, java.lang.Object> serializableMap76 = java.util.Collections.singletonMap((java.io.Serializable) (short) 1, (java.lang.Object) (short) 1);
        int int77 = serializableList69.lastIndexOf((java.lang.Object) (short) 1);
        serializableList69.clear();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration79 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableList69);
        boolean boolean80 = serializableSet3.retainAll((java.util.Collection<java.io.Serializable>) serializableList69);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.Serializable> serializableList83 = serializableList69.subList((int) (short) 1, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 35");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableEnumeration6);
        org.junit.Assert.assertNotNull(serializableSet7);
        org.junit.Assert.assertNotNull(serializableIterableList8);
        org.junit.Assert.assertNotNull(serializableSet9);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNotNull(serializableSet15);
        org.junit.Assert.assertNotNull(serializableSpliterator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(serializableArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(serializableCollection61);
        org.junit.Assert.assertNotNull(serializableArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(serializableMap76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(serializableEnumeration79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test113");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.HashSet<java.util.ListIterator<java.io.Serializable>> serializableItorSet6 = new java.util.HashSet<java.util.ListIterator<java.io.Serializable>>((int) '4');
        java.util.NavigableSet<java.io.Serializable> serializableSet8 = serializableSet3.tailSet((java.io.Serializable) '4', true);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator9 = serializableSet3.spliterator();
        java.lang.Object obj10 = serializableSet3.clone();
        java.lang.Class<java.io.Serializable> serializableClass11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collection<java.io.Serializable> serializableCollection12 = java.util.Collections.checkedCollection((java.util.Collection<java.io.Serializable>) serializableSet3, serializableClass11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: type");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(serializableSet8);
        org.junit.Assert.assertNotNull(serializableSpliterator9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "[]");
    }

    @Test
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test114");
        java.util.SortedSet<java.io.Serializable> serializableSet1 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList2 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet1);
        java.util.SortedSet<java.io.Serializable> serializableSet3 = java.util.Collections.unmodifiableSortedSet(serializableSet1);
        java.util.TreeSet<java.io.Serializable> serializableSet4 = new java.util.TreeSet<java.io.Serializable>(serializableSet3);
        java.io.Serializable serializable5 = serializableSet4.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator6 = serializableSet4.comparator();
        serializableSet4.clear();
        java.util.Iterator<java.io.Serializable> serializableItor8 = serializableSet4.descendingIterator();
        java.io.Serializable[] serializableArray60 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList61 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList61, serializableArray60);
        java.util.Collection<java.io.Serializable> serializableCollection63 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList61);
        java.io.Serializable[] serializableArray88 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList61, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList89 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList89, serializableArray88);
        serializableList89.ensureCapacity(100);
        java.lang.Object[] objArray93 = serializableList89.toArray();
        boolean boolean95 = serializableList89.remove((java.lang.Object) (byte) 0);
        java.io.Serializable serializable96 = serializableSet4.higher((java.io.Serializable) (byte) 0);
        java.util.List<java.util.AbstractCollection<java.io.Serializable>> serializableCollectionList97 = java.util.Collections.nCopies((int) '4', (java.util.AbstractCollection<java.io.Serializable>) serializableSet4);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator98 = serializableSet4.spliterator();
        org.junit.Assert.assertNotNull(serializableSet1);
        org.junit.Assert.assertNotNull(serializableIterableList2);
        org.junit.Assert.assertNotNull(serializableSet3);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(serializableItor8);
        org.junit.Assert.assertNotNull(serializableArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(serializableCollection63);
        org.junit.Assert.assertNotNull(serializableArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNull(serializable96);
        org.junit.Assert.assertNotNull(serializableCollectionList97);
        org.junit.Assert.assertNotNull(serializableSpliterator98);
    }

    @Test
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test115");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.lang.Class<java.io.Serializable> serializableClass4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.io.Serializable> serializableSet5 = java.util.Collections.checkedSet((java.util.Set<java.io.Serializable>) serializableSet2, serializableClass4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: type");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
    }

    @Test
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test116");
        java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.util.AbstractList<java.io.Serializable>> strSetMap0 = java.util.Collections.emptyNavigableMap();
        java.lang.Class<java.util.AbstractSet<java.lang.String>> strSetClass1 = null;
        java.lang.Class<java.util.AbstractList<java.io.Serializable>> serializableListClass2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.util.AbstractList<java.io.Serializable>> strSetMap3 = java.util.Collections.checkedNavigableMap(strSetMap0, strSetClass1, serializableListClass2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSetMap0);
    }

    @Test
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test117");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        boolean boolean6 = serializableSet3.isEmpty();
        serializableSet3.clear();
        java.util.Spliterator<java.io.Serializable> serializableSpliterator8 = serializableSet3.spliterator();
        java.lang.Class<java.io.Serializable> serializableClass9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collection<java.io.Serializable> serializableCollection10 = java.util.Collections.checkedCollection((java.util.Collection<java.io.Serializable>) serializableSet3, serializableClass9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: type");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(serializableSpliterator8);
    }

    @Test
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test118");
        java.util.Comparator<java.util.stream.Stream<java.io.Serializable>> serializableStreamComparator0 = java.util.Collections.reverseOrder();
        org.junit.Assert.assertNotNull(serializableStreamComparator0);
    }

    @Test
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test119");
        java.util.Map<java.lang.Cloneable, java.util.stream.BaseStream<java.io.Serializable, java.util.stream.Stream<java.io.Serializable>>> cloneableMap0 = java.util.Collections.emptyMap();
        org.junit.Assert.assertNotNull(cloneableMap0);
    }

    @Test
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test120");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.util.Iterator<java.io.Serializable> serializableItor4 = serializableSet3.iterator();
        java.lang.Class<java.io.Serializable> serializableClass5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.io.Serializable> serializableSet6 = java.util.Collections.checkedSet((java.util.Set<java.io.Serializable>) serializableSet3, serializableClass5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: type");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNotNull(serializableItor4);
    }

    @Test
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test121");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.util.HashSet<java.lang.String> strSet5 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.lang.Object obj6 = strSet5.clone();
        java.io.Serializable serializable7 = serializableSet3.lower((java.io.Serializable) strSet5);
        java.util.Iterator<java.io.Serializable> serializableItor8 = serializableSet3.iterator();
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "[]");
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNotNull(serializableItor8);
    }

    @Test
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test122");
        java.util.NavigableMap<java.util.List<java.io.Serializable>, java.util.Map<java.lang.Comparable<java.lang.String>, java.util.Comparator<java.lang.CharSequence>>> serializableListMap0 = java.util.Collections.emptyNavigableMap();
        org.junit.Assert.assertNotNull(serializableListMap0);
    }

    @Test
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test123");
        java.util.Comparator<java.lang.reflect.AnnotatedElement> annotatedElementComparator0 = java.util.Collections.reverseOrder();
        org.junit.Assert.assertNotNull(annotatedElementComparator0);
    }

    @Test
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test124");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        int int6 = serializableSet3.size();
        java.io.Serializable serializable7 = serializableSet3.pollFirst();
        java.io.Serializable serializable8 = serializableSet3.pollFirst();
        java.util.SortedSet<java.io.Serializable> serializableSet9 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList10 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet9);
        java.util.SortedSet<java.io.Serializable> serializableSet11 = java.util.Collections.unmodifiableSortedSet(serializableSet9);
        java.util.TreeSet<java.io.Serializable> serializableSet12 = new java.util.TreeSet<java.io.Serializable>(serializableSet11);
        java.util.Iterator<java.io.Serializable> serializableItor13 = serializableSet12.iterator();
        java.util.NavigableSet<java.io.Serializable> serializableSet14 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet12);
        // The following exception was thrown during execution in test generation
        try {
            java.util.NavigableSet<java.io.Serializable> serializableSet16 = serializableSet3.headSet((java.io.Serializable) serializableSet12, false);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class java.util.TreeSet cannot be cast to class java.lang.Comparable (java.util.TreeSet and java.lang.Comparable are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(serializableSet9);
        org.junit.Assert.assertNotNull(serializableIterableList10);
        org.junit.Assert.assertNotNull(serializableSet11);
        org.junit.Assert.assertNotNull(serializableItor13);
        org.junit.Assert.assertNotNull(serializableSet14);
    }

    @Test
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test125");
        java.util.HashSet<java.util.AbstractList<java.io.Serializable>> serializableListSet0 = new java.util.HashSet<java.util.AbstractList<java.io.Serializable>>();
    }

    @Test
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test126");
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList41 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList41, serializableArray40);
        java.util.Collection<java.io.Serializable> serializableCollection43 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList41);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] { 'a', 10, 100, serializableList41, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList51 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList51, serializableArray50);
        boolean boolean55 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList51, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.Map<java.io.Serializable, java.lang.Object> serializableMap58 = java.util.Collections.singletonMap((java.io.Serializable) (short) 1, (java.lang.Object) (short) 1);
        int int59 = serializableList51.lastIndexOf((java.lang.Object) (short) 1);
        serializableList51.clear();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration61 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableList51);
        java.util.Random random62 = null;
        java.util.Collections.shuffle((java.util.List<java.io.Serializable>) serializableList51, random62);
        // The following exception was thrown during execution in test generation
        try {
            serializableList51.add((int) (byte) -1, (java.io.Serializable) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(serializableCollection43);
        org.junit.Assert.assertNotNull(serializableArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(serializableMap58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(serializableEnumeration61);
    }

    @Test
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test127");
        java.io.Serializable[] serializableArray51 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList52 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList52, serializableArray51);
        java.util.Collection<java.io.Serializable> serializableCollection54 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList52);
        java.io.Serializable[] serializableArray79 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList52, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList80 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList80, serializableArray79);
        serializableList80.ensureCapacity(100);
        serializableList80.trimToSize();
        serializableList80.clear();
        org.junit.Assert.assertNotNull(serializableArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(serializableCollection54);
        org.junit.Assert.assertNotNull(serializableArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test128");
        java.util.SortedSet<java.lang.Object[]> objArraySet0 = java.util.Collections.emptySortedSet();
        org.junit.Assert.assertNotNull(objArraySet0);
    }

    @Test
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test129");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor0 = java.util.Collections.emptyIterator();
        org.junit.Assert.assertNotNull(strComparableItor0);
    }

    @Test
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test130");
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList41 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList41, serializableArray40);
        java.util.Collection<java.io.Serializable> serializableCollection43 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList41);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] { 'a', 10, 100, serializableList41, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList51 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList51, serializableArray50);
        boolean boolean55 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList51, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.ListIterator<java.io.Serializable> serializableItor56 = serializableList51.listIterator();
        java.util.SortedSet<java.io.Serializable> serializableSet57 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList58 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet57);
        java.util.SortedSet<java.io.Serializable> serializableSet59 = java.util.Collections.unmodifiableSortedSet(serializableSet57);
        java.util.TreeSet<java.io.Serializable> serializableSet60 = new java.util.TreeSet<java.io.Serializable>(serializableSet59);
        java.io.Serializable serializable61 = serializableSet60.pollFirst();
        java.io.Serializable serializable63 = serializableSet60.ceiling((java.io.Serializable) 0.0d);
        java.util.SortedSet<java.io.Serializable> serializableSet65 = serializableSet60.tailSet((java.io.Serializable) (short) 10);
        boolean boolean66 = serializableList51.remove((java.lang.Object) (short) 10);
        java.io.Serializable serializable68 = null;
        // The following exception was thrown during execution in test generation
        try {
            serializableList51.add((int) ' ', serializable68);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Size: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(serializableCollection43);
        org.junit.Assert.assertNotNull(serializableArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(serializableItor56);
        org.junit.Assert.assertNotNull(serializableSet57);
        org.junit.Assert.assertNotNull(serializableIterableList58);
        org.junit.Assert.assertNotNull(serializableSet59);
        org.junit.Assert.assertNull(serializable61);
        org.junit.Assert.assertNull(serializable63);
        org.junit.Assert.assertNotNull(serializableSet65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test131");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        boolean boolean6 = serializableSet3.isEmpty();
        java.io.Serializable[] serializableArray47 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList48 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList48, serializableArray47);
        java.util.Collection<java.io.Serializable> serializableCollection50 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList48);
        java.io.Serializable[] serializableArray57 = new java.io.Serializable[] { 'a', 10, 100, serializableList48, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList58 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList58, serializableArray57);
        boolean boolean62 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList58, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.Map<java.io.Serializable, java.lang.Object> serializableMap65 = java.util.Collections.singletonMap((java.io.Serializable) (short) 1, (java.lang.Object) (short) 1);
        int int66 = serializableList58.lastIndexOf((java.lang.Object) (short) 1);
        serializableList58.clear();
        java.util.Random random68 = null;
        java.util.Collections.shuffle((java.util.List<java.io.Serializable>) serializableList58, random68);
        java.io.Serializable serializable70 = serializableSet3.lower((java.io.Serializable) random68);
        java.io.Serializable serializable71 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.SortedSet<java.io.Serializable> serializableSet72 = serializableSet3.tailSet(serializable71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(serializableArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(serializableCollection50);
        org.junit.Assert.assertNotNull(serializableArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(serializableMap65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNull(serializable70);
    }

    @Test
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test132");
        java.util.SortedSet<java.util.List<java.io.Serializable>> serializableListSet0 = java.util.Collections.emptySortedSet();
        org.junit.Assert.assertNotNull(serializableListSet0);
    }

    @Test
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test133");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.util.Iterator<java.io.Serializable> serializableItor4 = serializableSet3.iterator();
        java.lang.Class<java.io.Serializable> serializableClass5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.NavigableSet<java.io.Serializable> serializableSet6 = java.util.Collections.checkedNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet3, serializableClass5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: type");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNotNull(serializableItor4);
    }

    @Test
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test134");
        // The following exception was thrown during execution in test generation
        try {
            java.util.HashSet<java.lang.Object> objSet2 = new java.util.HashSet<java.lang.Object>((int) (byte) -1, (float) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal initial capacity: -1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test135");
        java.util.Set<java.lang.String[]> strArraySet0 = java.util.Collections.emptySet();
        org.junit.Assert.assertNotNull(strArraySet0);
    }

    @Test
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test136");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        boolean boolean6 = serializableSet3.isEmpty();
        serializableSet3.clear();
        java.io.Serializable serializable8 = serializableSet3.pollFirst();
        java.util.Iterator<java.io.Serializable> serializableItor9 = serializableSet3.iterator();
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(serializableItor9);
    }

    @Test
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test137");
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList41 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList41, serializableArray40);
        java.util.Collection<java.io.Serializable> serializableCollection43 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList41);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] { 'a', 10, 100, serializableList41, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList51 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList51, serializableArray50);
        boolean boolean55 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList51, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.Map<java.io.Serializable, java.lang.Object> serializableMap58 = java.util.Collections.singletonMap((java.io.Serializable) (short) 1, (java.lang.Object) (short) 1);
        int int59 = serializableList51.lastIndexOf((java.lang.Object) (short) 1);
        serializableList51.clear();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration61 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableList51);
        java.util.Random random62 = null;
        java.util.Collections.shuffle((java.util.List<java.io.Serializable>) serializableList51, random62);
        serializableList51.trimToSize();
        java.util.List<java.lang.Cloneable> cloneableList65 = java.util.Collections.singletonList((java.lang.Cloneable) serializableList51);
        org.junit.Assert.assertNotNull(serializableArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(serializableCollection43);
        org.junit.Assert.assertNotNull(serializableArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(serializableMap58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(serializableEnumeration61);
        org.junit.Assert.assertNotNull(cloneableList65);
    }

    @Test
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test138");
        java.util.ListIterator<java.util.List<java.io.Serializable>> serializableListItor0 = java.util.Collections.emptyListIterator();
        org.junit.Assert.assertNotNull(serializableListItor0);
    }

    @Test
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test139");
        java.util.SortedSet<java.util.stream.Stream[]> streamArraySet0 = java.util.Collections.emptySortedSet();
        org.junit.Assert.assertNotNull(streamArraySet0);
    }

    @Test
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test140");
        java.util.ArrayList<java.io.Serializable> serializableList1 = new java.util.ArrayList<java.io.Serializable>((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections.swap((java.util.List<java.io.Serializable>) serializableList1, (int) (byte) 100, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test141");
        // The following exception was thrown during execution in test generation
        try {
            java.util.HashSet<java.util.stream.Stream[]> streamArraySet2 = new java.util.HashSet<java.util.stream.Stream[]>((int) ' ', (float) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal load factor: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test142");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        serializableSet3.clear();
        java.util.Iterator<java.io.Serializable> serializableItor7 = serializableSet3.descendingIterator();
        java.io.Serializable[] serializableArray59 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList60 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList60, serializableArray59);
        java.util.Collection<java.io.Serializable> serializableCollection62 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList60);
        java.io.Serializable[] serializableArray87 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList60, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList88 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList88, serializableArray87);
        serializableList88.ensureCapacity(100);
        java.lang.Object[] objArray92 = serializableList88.toArray();
        boolean boolean94 = serializableList88.remove((java.lang.Object) (byte) 0);
        java.io.Serializable serializable95 = serializableSet3.higher((java.io.Serializable) (byte) 0);
        java.util.Iterator<java.io.Serializable> serializableItor96 = serializableSet3.descendingIterator();
        int int97 = serializableSet3.size();
        java.util.SortedSet<java.io.Serializable> serializableSet98 = java.util.Collections.unmodifiableSortedSet((java.util.SortedSet<java.io.Serializable>) serializableSet3);
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableItor7);
        org.junit.Assert.assertNotNull(serializableArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(serializableCollection62);
        org.junit.Assert.assertNotNull(serializableArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNull(serializable95);
        org.junit.Assert.assertNotNull(serializableItor96);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 0 + "'", int97 == 0);
        org.junit.Assert.assertNotNull(serializableSet98);
    }

    @Test
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test143");
        java.io.Serializable[] serializableArray35 = new java.io.Serializable[] { false, (-1), 'a', (-1.0f), "hi!", '#', '4', '4', '#', (byte) 10, 100, 1.0f, (byte) -1, (short) 0, '4', (-1.0d), (-1.0d), 'a', 'a', (short) 10, "hi!", (byte) -1, 0.0d, 1.0f, (-1.0d), 0.0d, 100L, 10.0f, '4', 1L, (-1), (-1L), 100, 0L, true };
        java.util.ArrayList<java.io.Serializable> serializableList36 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList36, serializableArray35);
        java.lang.Object obj38 = null;
        boolean boolean39 = serializableList36.equals(obj38);
        java.util.stream.Stream<java.io.Serializable> serializableStream40 = serializableList36.stream();
        java.util.ArrayList<java.io.Serializable> serializableList41 = new java.util.ArrayList<java.io.Serializable>((java.util.Collection<java.io.Serializable>) serializableList36);
        serializableList36.ensureCapacity((-1));
        org.junit.Assert.assertNotNull(serializableArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(serializableStream40);
    }

    @Test
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test144");
        java.util.ListIterator<java.lang.Cloneable> cloneableItor0 = java.util.Collections.emptyListIterator();
        org.junit.Assert.assertNotNull(cloneableItor0);
    }

    @Test
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test145");
        java.util.List<java.lang.AutoCloseable> autoCloseableList0 = java.util.Collections.emptyList();
        org.junit.Assert.assertNotNull(autoCloseableList0);
    }

    @Test
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test146");
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList41 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList41, serializableArray40);
        java.util.Collection<java.io.Serializable> serializableCollection43 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList41);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] { 'a', 10, 100, serializableList41, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList51 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList51, serializableArray50);
        boolean boolean55 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList51, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator56 = serializableList51.spliterator();
        serializableList51.clear();
        java.lang.Object obj58 = serializableList51.clone();
        boolean boolean60 = serializableList51.add((java.io.Serializable) (byte) 0);
        org.junit.Assert.assertNotNull(serializableArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(serializableCollection43);
        org.junit.Assert.assertNotNull(serializableArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(serializableSpliterator56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test147");
        java.util.Comparator<java.util.stream.BaseStream<java.io.Serializable, java.util.stream.Stream<java.io.Serializable>>> serializableBaseStreamComparator0 = java.util.Collections.reverseOrder();
        org.junit.Assert.assertNotNull(serializableBaseStreamComparator0);
    }

    @Test
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test148");
        java.util.SortedMap<java.util.Enumeration<java.util.HashSet<java.lang.String>>, java.util.Iterator<java.io.Serializable>> strSetEnumerationMap0 = java.util.Collections.emptySortedMap();
        java.util.SortedMap<java.util.Enumeration<java.util.HashSet<java.lang.String>>, java.util.Iterator<java.io.Serializable>> strSetEnumerationMap1 = java.util.Collections.synchronizedSortedMap(strSetEnumerationMap0);
        java.lang.Class<java.util.Enumeration<java.util.HashSet<java.lang.String>>> strSetEnumerationClass2 = null;
        java.lang.Class<java.util.Iterator<java.io.Serializable>> serializableItorClass3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.SortedMap<java.util.Enumeration<java.util.HashSet<java.lang.String>>, java.util.Iterator<java.io.Serializable>> strSetEnumerationMap4 = java.util.Collections.checkedSortedMap(strSetEnumerationMap1, strSetEnumerationClass2, serializableItorClass3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSetEnumerationMap0);
        org.junit.Assert.assertNotNull(strSetEnumerationMap1);
    }

    @Test
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test149");
        java.util.NavigableMap<java.util.Iterator<java.io.Serializable>, java.util.ListIterator<java.io.Serializable>> serializableItorMap0 = java.util.Collections.emptyNavigableMap();
        org.junit.Assert.assertNotNull(serializableItorMap0);
    }

    @Test
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test150");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.HashSet<java.util.ListIterator<java.io.Serializable>> serializableItorSet6 = new java.util.HashSet<java.util.ListIterator<java.io.Serializable>>((int) '4');
        java.util.NavigableSet<java.io.Serializable> serializableSet8 = serializableSet3.tailSet((java.io.Serializable) '4', true);
        java.util.SortedSet<java.io.Serializable> serializableSet10 = serializableSet3.headSet((java.io.Serializable) (short) 0);
        java.util.SortedSet<java.io.Serializable> serializableSet11 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList12 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet11);
        java.util.SortedSet<java.io.Serializable> serializableSet13 = java.util.Collections.unmodifiableSortedSet(serializableSet11);
        java.util.TreeSet<java.io.Serializable> serializableSet14 = new java.util.TreeSet<java.io.Serializable>(serializableSet13);
        java.io.Serializable serializable15 = serializableSet14.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator16 = serializableSet14.comparator();
        serializableSet14.clear();
        java.util.NavigableSet<java.io.Serializable> serializableSet18 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet14);
        boolean boolean19 = serializableSet3.addAll((java.util.Collection<java.io.Serializable>) serializableSet18);
        java.lang.Object obj20 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = serializableSet3.remove(obj20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(serializableSet8);
        org.junit.Assert.assertNotNull(serializableSet10);
        org.junit.Assert.assertNotNull(serializableSet11);
        org.junit.Assert.assertNotNull(serializableIterableList12);
        org.junit.Assert.assertNotNull(serializableSet13);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertNull(wildcardComparator16);
        org.junit.Assert.assertNotNull(serializableSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test151");
        java.util.SortedMap<java.util.NavigableSet<java.io.Serializable>, java.lang.Class<?>> serializableSetMap0 = java.util.Collections.emptySortedMap();
        org.junit.Assert.assertNotNull(serializableSetMap0);
    }

    @Test
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test152");
        java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.util.AbstractList<java.io.Serializable>> strSetMap0 = java.util.Collections.emptyNavigableMap();
        java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.util.AbstractList<java.io.Serializable>> strSetMap1 = java.util.Collections.synchronizedNavigableMap(strSetMap0);
        java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.util.AbstractList<java.io.Serializable>> strSetMap2 = java.util.Collections.synchronizedNavigableMap(strSetMap1);
        java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.util.AbstractList<java.io.Serializable>> strSetMap3 = java.util.Collections.synchronizedNavigableMap(strSetMap2);
        java.lang.Class<java.util.AbstractSet<java.lang.String>> strSetClass4 = null;
        java.lang.Class<java.util.AbstractList<java.io.Serializable>> serializableListClass5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.util.AbstractList<java.io.Serializable>> strSetMap6 = java.util.Collections.checkedNavigableMap(strSetMap2, strSetClass4, serializableListClass5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSetMap0);
        org.junit.Assert.assertNotNull(strSetMap1);
        org.junit.Assert.assertNotNull(strSetMap2);
        org.junit.Assert.assertNotNull(strSetMap3);
    }

    @Test
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test153");
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList41 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList41, serializableArray40);
        java.util.Collection<java.io.Serializable> serializableCollection43 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList41);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] { 'a', 10, 100, serializableList41, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList51 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList51, serializableArray50);
        boolean boolean55 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList51, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.Map<java.io.Serializable, java.lang.Object> serializableMap58 = java.util.Collections.singletonMap((java.io.Serializable) (short) 1, (java.lang.Object) (short) 1);
        int int59 = serializableList51.lastIndexOf((java.lang.Object) (short) 1);
        serializableList51.clear();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration61 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableList51);
        java.util.Random random62 = null;
        java.util.Collections.shuffle((java.util.List<java.io.Serializable>) serializableList51, random62);
        serializableList51.trimToSize();
        java.lang.String str65 = serializableList51.toString();
        java.util.function.UnaryOperator<java.io.Serializable> serializableUnaryOperator66 = null;
        // The following exception was thrown during execution in test generation
        try {
            serializableList51.replaceAll(serializableUnaryOperator66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(serializableCollection43);
        org.junit.Assert.assertNotNull(serializableArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(serializableMap58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(serializableEnumeration61);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[]" + "'", str65, "[]");
    }

    @Test
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test154");
        java.util.NavigableMap<java.util.Set<java.io.Serializable>, java.lang.reflect.Type[]> serializableSetMap0 = java.util.Collections.emptyNavigableMap();
        org.junit.Assert.assertNotNull(serializableSetMap0);
    }

    @Test
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test155");
        java.io.Serializable[] serializableArray35 = new java.io.Serializable[] { false, (-1), 'a', (-1.0f), "hi!", '#', '4', '4', '#', (byte) 10, 100, 1.0f, (byte) -1, (short) 0, '4', (-1.0d), (-1.0d), 'a', 'a', (short) 10, "hi!", (byte) -1, 0.0d, 1.0f, (-1.0d), 0.0d, 100L, 10.0f, '4', 1L, (-1), (-1L), 100, 0L, true };
        java.util.ArrayList<java.io.Serializable> serializableList36 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList36, serializableArray35);
        java.lang.Object obj38 = null;
        boolean boolean39 = serializableList36.equals(obj38);
        java.util.stream.Stream<java.io.Serializable> serializableStream40 = serializableList36.stream();
        java.util.SortedSet<java.io.Serializable> serializableSet42 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList43 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet42);
        java.util.SortedSet<java.io.Serializable> serializableSet44 = java.util.Collections.unmodifiableSortedSet(serializableSet42);
        java.util.TreeSet<java.io.Serializable> serializableSet45 = new java.util.TreeSet<java.io.Serializable>(serializableSet44);
        java.io.Serializable serializable46 = serializableSet45.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator47 = serializableSet45.comparator();
        java.util.NavigableSet<java.io.Serializable> serializableSet48 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet45);
        java.util.SortedSet<java.io.Serializable> serializableSet49 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList50 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet49);
        java.util.SortedSet<java.io.Serializable> serializableSet51 = java.util.Collections.unmodifiableSortedSet(serializableSet49);
        java.util.TreeSet<java.io.Serializable> serializableSet52 = new java.util.TreeSet<java.io.Serializable>(serializableSet51);
        java.util.HashSet<java.lang.String> strSet54 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.lang.Object obj55 = strSet54.clone();
        java.io.Serializable serializable56 = serializableSet52.lower((java.io.Serializable) strSet54);
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet60 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet60, strArray59);
        boolean boolean63 = strSet60.equals((java.lang.Object) false);
        boolean boolean64 = strSet60.isEmpty();
        boolean boolean66 = strSet60.equals((java.lang.Object) 10L);
        java.util.SortedSet<java.io.Serializable> serializableSet67 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList68 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet67);
        java.util.SortedSet<java.io.Serializable> serializableSet69 = java.util.Collections.unmodifiableSortedSet(serializableSet67);
        java.util.TreeSet<java.io.Serializable> serializableSet70 = new java.util.TreeSet<java.io.Serializable>(serializableSet69);
        boolean boolean72 = serializableSet70.remove((java.lang.Object) (-1.0f));
        java.util.Comparator<? super java.io.Serializable> wildcardComparator73 = serializableSet70.comparator();
        boolean boolean74 = strSet60.remove((java.lang.Object) serializableSet70);
        boolean boolean75 = strSet54.remove((java.lang.Object) serializableSet70);
        boolean boolean76 = serializableSet45.remove((java.lang.Object) boolean75);
        java.io.Serializable serializable77 = serializableList36.set((int) (short) 1, (java.io.Serializable) boolean76);
        org.junit.Assert.assertNotNull(serializableArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(serializableStream40);
        org.junit.Assert.assertNotNull(serializableSet42);
        org.junit.Assert.assertNotNull(serializableIterableList43);
        org.junit.Assert.assertNotNull(serializableSet44);
        org.junit.Assert.assertNull(serializable46);
        org.junit.Assert.assertNull(wildcardComparator47);
        org.junit.Assert.assertNotNull(serializableSet48);
        org.junit.Assert.assertNotNull(serializableSet49);
        org.junit.Assert.assertNotNull(serializableIterableList50);
        org.junit.Assert.assertNotNull(serializableSet51);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "[]");
        org.junit.Assert.assertNull(serializable56);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(serializableSet67);
        org.junit.Assert.assertNotNull(serializableIterableList68);
        org.junit.Assert.assertNotNull(serializableSet69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(wildcardComparator73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + serializable77 + "' != '" + (-1) + "'", serializable77, (-1));
    }

    @Test
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test156");
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList41 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList41, serializableArray40);
        java.util.Collection<java.io.Serializable> serializableCollection43 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList41);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] { 'a', 10, 100, serializableList41, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList51 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList51, serializableArray50);
        boolean boolean55 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList51, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        serializableList51.ensureCapacity((int) (short) -1);
        java.util.Collections.reverse((java.util.List<java.io.Serializable>) serializableList51);
        java.util.Collection<java.io.Serializable> serializableCollection59 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean60 = serializableList51.retainAll(serializableCollection59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(serializableCollection43);
        org.junit.Assert.assertNotNull(serializableArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test157");
        java.util.Comparator<java.lang.CharSequence> charSequenceComparator0 = java.util.Collections.reverseOrder();
        java.util.Comparator<java.lang.CharSequence> charSequenceComparator1 = java.util.Collections.reverseOrder(charSequenceComparator0);
        java.util.Comparator<java.lang.CharSequence> charSequenceComparator2 = java.util.Collections.reverseOrder(charSequenceComparator0);
        java.util.Comparator<java.lang.CharSequence> charSequenceComparator3 = java.util.Collections.reverseOrder(charSequenceComparator0);
        java.util.Comparator<java.lang.CharSequence> charSequenceComparator4 = java.util.Collections.reverseOrder(charSequenceComparator3);
        org.junit.Assert.assertNotNull(charSequenceComparator0);
        org.junit.Assert.assertNotNull(charSequenceComparator1);
        org.junit.Assert.assertNotNull(charSequenceComparator2);
        org.junit.Assert.assertNotNull(charSequenceComparator3);
        org.junit.Assert.assertNotNull(charSequenceComparator4);
    }

    @Test
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test158");
        java.io.Serializable[] serializableArray51 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList52 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList52, serializableArray51);
        java.util.Collection<java.io.Serializable> serializableCollection54 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList52);
        java.io.Serializable[] serializableArray79 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList52, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList80 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList80, serializableArray79);
        serializableList80.ensureCapacity(100);
        serializableList80.trimToSize();
        java.util.Collections.reverse((java.util.List<java.io.Serializable>) serializableList80);
        java.lang.String[] strArray88 = new java.lang.String[] { "", "hi!" };
        java.util.HashSet<java.lang.String> strSet89 = new java.util.HashSet<java.lang.String>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet89, strArray88);
        java.util.Spliterator<java.lang.String> strSpliterator91 = strSet89.spliterator();
        int int92 = serializableList80.indexOf((java.lang.Object) strSet89);
        org.junit.Assert.assertNotNull(serializableArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(serializableCollection54);
        org.junit.Assert.assertNotNull(serializableArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(strSpliterator91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
    }

    @Test
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test159");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.util.ArrayList<java.io.Serializable> serializableList4 = new java.util.ArrayList<java.io.Serializable>((java.util.Collection<java.io.Serializable>) serializableSet2);
        java.util.TreeSet<java.lang.String> strSet5 = new java.util.TreeSet<java.lang.String>();
        java.util.SortedSet<java.io.Serializable> serializableSet6 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList7 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet6);
        java.util.SortedSet<java.io.Serializable> serializableSet8 = java.util.Collections.unmodifiableSortedSet(serializableSet6);
        boolean boolean9 = strSet5.removeAll((java.util.Collection<java.io.Serializable>) serializableSet8);
        java.util.ArrayList<java.io.Serializable> serializableList10 = new java.util.ArrayList<java.io.Serializable>((java.util.Collection<java.io.Serializable>) serializableSet8);
        java.util.Collections.copy((java.util.List<java.io.Serializable>) serializableList4, (java.util.List<java.io.Serializable>) serializableList10);
        java.lang.Object[] objArray12 = serializableList10.toArray();
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNotNull(serializableSet6);
        org.junit.Assert.assertNotNull(serializableIterableList7);
        org.junit.Assert.assertNotNull(serializableSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
    }

    @Test
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test160");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean6 = strSet3.equals((java.lang.Object) false);
        int int7 = strSet3.size();
        java.util.SortedSet<java.io.Serializable> serializableSet8 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList9 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet8);
        java.util.SortedSet<java.io.Serializable> serializableSet10 = java.util.Collections.unmodifiableSortedSet(serializableSet8);
        boolean boolean11 = strSet3.removeAll((java.util.Collection<java.io.Serializable>) serializableSet8);
        java.util.SortedSet<java.io.Serializable> serializableSet12 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList13 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet12);
        java.util.SortedSet<java.io.Serializable> serializableSet14 = java.util.Collections.unmodifiableSortedSet(serializableSet12);
        boolean boolean15 = strSet3.contains((java.lang.Object) serializableSet14);
        java.util.TreeSet<java.io.Serializable> serializableSet16 = new java.util.TreeSet<java.io.Serializable>(serializableSet14);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable17 = serializableSet16.last();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(serializableSet8);
        org.junit.Assert.assertNotNull(serializableIterableList9);
        org.junit.Assert.assertNotNull(serializableSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(serializableSet12);
        org.junit.Assert.assertNotNull(serializableIterableList13);
        org.junit.Assert.assertNotNull(serializableSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test161");
        java.util.SortedMap<java.util.Enumeration<java.util.HashSet<java.lang.String>>, java.util.Iterator<java.io.Serializable>> strSetEnumerationMap0 = java.util.Collections.emptySortedMap();
        java.lang.Class<java.util.Enumeration<java.util.HashSet<java.lang.String>>> strSetEnumerationClass1 = null;
        java.lang.Class<java.util.Iterator<java.io.Serializable>> serializableItorClass2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.SortedMap<java.util.Enumeration<java.util.HashSet<java.lang.String>>, java.util.Iterator<java.io.Serializable>> strSetEnumerationMap3 = java.util.Collections.checkedSortedMap(strSetEnumerationMap0, strSetEnumerationClass1, serializableItorClass2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSetEnumerationMap0);
    }

    @Test
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test162");
        java.util.NavigableMap<java.util.HashSet<java.lang.String>, java.lang.Cloneable> strSetMap0 = java.util.Collections.emptyNavigableMap();
        org.junit.Assert.assertNotNull(strSetMap0);
    }

    @Test
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test163");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration6 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableSet3);
        java.util.NavigableSet<java.io.Serializable> serializableSet9 = serializableSet3.tailSet((java.io.Serializable) 100L, true);
        java.io.Serializable[] serializableArray61 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList62 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList62, serializableArray61);
        java.util.Collection<java.io.Serializable> serializableCollection64 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList62);
        java.io.Serializable[] serializableArray89 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList62, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList90 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList90, serializableArray89);
        serializableList90.ensureCapacity(100);
        serializableList90.trimToSize();
        java.util.Collections.reverse((java.util.List<java.io.Serializable>) serializableList90);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean96 = serializableSet3.addAll((java.util.Collection<java.io.Serializable>) serializableList90);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class java.lang.Float cannot be cast to class java.lang.Short (java.lang.Float and java.lang.Short are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableEnumeration6);
        org.junit.Assert.assertNotNull(serializableSet9);
        org.junit.Assert.assertNotNull(serializableArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(serializableCollection64);
        org.junit.Assert.assertNotNull(serializableArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test164");
        // The following exception was thrown during execution in test generation
        try {
            java.util.HashSet<java.io.Serializable> serializableSet2 = new java.util.HashSet<java.io.Serializable>((int) (byte) -1, (float) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal initial capacity: -1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test165");
        java.io.Serializable[] serializableArray37 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList38 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList38, serializableArray37);
        java.util.Collection<java.io.Serializable> serializableCollection40 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList38);
        java.lang.Object[] objArray41 = serializableList38.toArray();
        java.io.Serializable[] serializableArray77 = new java.io.Serializable[] { false, (-1), 'a', (-1.0f), "hi!", '#', '4', '4', '#', (byte) 10, 100, 1.0f, (byte) -1, (short) 0, '4', (-1.0d), (-1.0d), 'a', 'a', (short) 10, "hi!", (byte) -1, 0.0d, 1.0f, (-1.0d), 0.0d, 100L, 10.0f, '4', 1L, (-1), (-1L), 100, 0L, true };
        java.util.ArrayList<java.io.Serializable> serializableList78 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList78, serializableArray77);
        java.lang.Object obj80 = null;
        boolean boolean81 = serializableList78.equals(obj80);
        java.util.stream.Stream<java.io.Serializable> serializableStream82 = serializableList78.stream();
        int int83 = serializableList38.indexOf((java.lang.Object) serializableStream82);
        java.util.List<java.lang.AutoCloseable> autoCloseableList84 = java.util.Collections.singletonList((java.lang.AutoCloseable) serializableStream82);
        org.junit.Assert.assertNotNull(serializableArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(serializableCollection40);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertNotNull(serializableArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(serializableStream82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(autoCloseableList84);
    }

    @Test
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test166");
        java.util.ArrayList<java.lang.AutoCloseable> autoCloseableList1 = new java.util.ArrayList<java.lang.AutoCloseable>();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.RandomAccess> randomAccessList2 = java.util.Collections.nCopies((int) (short) -1, (java.util.RandomAccess) autoCloseableList1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: List length = -1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test167");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.HashSet<java.lang.String> strSet2 = new java.util.HashSet<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet2, strArray1);
        strSet2.clear();
        java.util.List<java.util.HashSet<java.lang.String>> strSetList5 = java.util.Collections.singletonList(strSet2);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSetList5);
    }

    @Test
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test168");
        java.util.Comparator<java.util.HashSet<java.lang.String>> strSetComparator0 = java.util.Collections.reverseOrder();
        org.junit.Assert.assertNotNull(strSetComparator0);
    }

    @Test
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test169");
        java.io.Serializable[] serializableArray37 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList38 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList38, serializableArray37);
        java.util.Collection<java.io.Serializable> serializableCollection40 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList38);
        java.lang.Object[] objArray41 = serializableList38.toArray();
        java.util.ListIterator<java.io.Serializable> serializableItor42 = serializableList38.listIterator();
        java.util.SortedSet<java.io.Serializable> serializableSet44 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList45 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet44);
        java.util.SortedSet<java.io.Serializable> serializableSet46 = java.util.Collections.unmodifiableSortedSet(serializableSet44);
        java.util.TreeSet<java.io.Serializable> serializableSet47 = new java.util.TreeSet<java.io.Serializable>(serializableSet46);
        java.util.ArrayList<java.io.Serializable> serializableList48 = new java.util.ArrayList<java.io.Serializable>((java.util.Collection<java.io.Serializable>) serializableSet46);
        serializableList38.add((int) (byte) 1, (java.io.Serializable) serializableList48);
        serializableList38.clear();
        org.junit.Assert.assertNotNull(serializableArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(serializableCollection40);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertNotNull(serializableItor42);
        org.junit.Assert.assertNotNull(serializableSet44);
        org.junit.Assert.assertNotNull(serializableIterableList45);
        org.junit.Assert.assertNotNull(serializableSet46);
    }

    @Test
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test170");
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList41 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList41, serializableArray40);
        java.util.Collection<java.io.Serializable> serializableCollection43 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList41);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] { 'a', 10, 100, serializableList41, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList51 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList51, serializableArray50);
        boolean boolean55 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList51, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.Map<java.io.Serializable, java.lang.Object> serializableMap58 = java.util.Collections.singletonMap((java.io.Serializable) (short) 1, (java.lang.Object) (short) 1);
        int int59 = serializableList51.lastIndexOf((java.lang.Object) (short) 1);
        serializableList51.clear();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration61 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableList51);
        java.util.Random random62 = null;
        java.util.Collections.shuffle((java.util.List<java.io.Serializable>) serializableList51, random62);
        serializableList51.trimToSize();
        java.util.Random random65 = null;
        java.util.Collections.shuffle((java.util.List<java.io.Serializable>) serializableList51, random65);
        java.util.ArrayList<java.io.Serializable> serializableList67 = new java.util.ArrayList<java.io.Serializable>((java.util.Collection<java.io.Serializable>) serializableList51);
        // The following exception was thrown during execution in test generation
        try {
            serializableList67.add((int) (short) -1, (java.io.Serializable) (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(serializableCollection43);
        org.junit.Assert.assertNotNull(serializableArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(serializableMap58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(serializableEnumeration61);
    }

    @Test
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test171");
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList41 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList41, serializableArray40);
        java.util.Collection<java.io.Serializable> serializableCollection43 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList41);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] { 'a', 10, 100, serializableList41, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList51 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList51, serializableArray50);
        boolean boolean55 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList51, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator56 = serializableList51.spliterator();
        serializableList51.clear();
        java.lang.Object obj58 = serializableList51.clone();
        java.util.function.UnaryOperator<java.io.Serializable> serializableUnaryOperator59 = null;
        // The following exception was thrown during execution in test generation
        try {
            serializableList51.replaceAll(serializableUnaryOperator59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(serializableCollection43);
        org.junit.Assert.assertNotNull(serializableArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(serializableSpliterator56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "[]");
    }

    @Test
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test172");
        java.util.List<java.io.Serializable> serializableList0 = null;
        java.io.Serializable[] serializableArray52 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList53 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList53, serializableArray52);
        java.util.Collection<java.io.Serializable> serializableCollection55 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList53);
        java.io.Serializable[] serializableArray80 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList53, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList81 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList81, serializableArray80);
        serializableList81.ensureCapacity(100);
        java.lang.Object[] objArray85 = serializableList81.toArray();
        boolean boolean87 = serializableList81.remove((java.lang.Object) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int88 = java.util.Collections.indexOfSubList(serializableList0, (java.util.List<java.io.Serializable>) serializableList81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(serializableCollection55);
        org.junit.Assert.assertNotNull(serializableArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test173");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "[]" };
        java.util.HashSet<java.lang.String> strSet3 = new java.util.HashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean5 = strSet3.isEmpty();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test174");
        java.util.ListIterator<java.lang.reflect.Type[]> typeArrayItor0 = java.util.Collections.emptyListIterator();
        org.junit.Assert.assertNotNull(typeArrayItor0);
    }

    @Test
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test175");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean6 = strSet3.equals((java.lang.Object) false);
        boolean boolean7 = strSet3.isEmpty();
        boolean boolean9 = strSet3.equals((java.lang.Object) 10L);
        java.util.Iterator<java.lang.String> strItor10 = strSet3.iterator();
        java.util.SortedSet<java.io.Serializable> serializableSet11 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList12 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet11);
        java.util.SortedSet<java.io.Serializable> serializableSet13 = java.util.Collections.unmodifiableSortedSet(serializableSet11);
        java.util.TreeSet<java.io.Serializable> serializableSet14 = new java.util.TreeSet<java.io.Serializable>(serializableSet13);
        java.io.Serializable serializable15 = serializableSet14.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator16 = serializableSet14.comparator();
        java.util.NavigableSet<java.io.Serializable> serializableSet17 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet14);
        java.util.stream.Stream[][] streamArray18 = new java.util.stream.Stream[][] {};
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableSet14, streamArray18);
        java.util.Comparator<? super java.io.Serializable> wildcardComparator20 = serializableSet14.comparator();
        boolean boolean21 = strSet3.equals((java.lang.Object) serializableSet14);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable22 = serializableSet14.last();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strItor10);
        org.junit.Assert.assertNotNull(serializableSet11);
        org.junit.Assert.assertNotNull(serializableIterableList12);
        org.junit.Assert.assertNotNull(serializableSet13);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertNull(wildcardComparator16);
        org.junit.Assert.assertNotNull(serializableSet17);
        org.junit.Assert.assertNotNull(streamArray18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(wildcardComparator20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test176");
        java.io.Serializable[] serializableArray51 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList52 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList52, serializableArray51);
        java.util.Collection<java.io.Serializable> serializableCollection54 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList52);
        java.io.Serializable[] serializableArray79 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList52, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList80 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList80, serializableArray79);
        serializableList80.ensureCapacity(100);
        java.util.stream.Stream<java.io.Serializable> serializableStream84 = serializableList80.stream();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration85 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableList80);
        java.util.Random random86 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections.shuffle((java.util.List<java.io.Serializable>) serializableList80, random86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(serializableCollection54);
        org.junit.Assert.assertNotNull(serializableArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(serializableStream84);
        org.junit.Assert.assertNotNull(serializableEnumeration85);
    }

    @Test
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test177");
        java.util.HashSet<java.lang.Object> objSet1 = new java.util.HashSet<java.lang.Object>((int) (byte) 100);
    }

    @Test
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test178");
        java.util.Iterator<java.lang.reflect.AnnotatedElement> annotatedElementItor0 = java.util.Collections.emptyIterator();
        org.junit.Assert.assertNotNull(annotatedElementItor0);
    }

    @Test
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test179");
        java.util.ListIterator<java.io.Serializable> serializableItor0 = java.util.Collections.emptyListIterator();
        org.junit.Assert.assertNotNull(serializableItor0);
    }

    @Test
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test180");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean6 = strSet3.equals((java.lang.Object) false);
        java.io.Serializable[] serializableArray42 = new java.io.Serializable[] { false, (-1), 'a', (-1.0f), "hi!", '#', '4', '4', '#', (byte) 10, 100, 1.0f, (byte) -1, (short) 0, '4', (-1.0d), (-1.0d), 'a', 'a', (short) 10, "hi!", (byte) -1, 0.0d, 1.0f, (-1.0d), 0.0d, 100L, 10.0f, '4', 1L, (-1), (-1L), 100, 0L, true };
        java.util.ArrayList<java.io.Serializable> serializableList43 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList43, serializableArray42);
        java.lang.Object obj45 = null;
        boolean boolean46 = serializableList43.equals(obj45);
        java.util.Collection<java.io.Serializable> serializableCollection47 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList43);
        boolean boolean48 = strSet3.contains((java.lang.Object) serializableList43);
        java.io.Serializable serializable50 = serializableList43.get((int) (byte) 10);
        java.util.function.UnaryOperator<java.io.Serializable> serializableUnaryOperator51 = null;
        // The following exception was thrown during execution in test generation
        try {
            serializableList43.replaceAll(serializableUnaryOperator51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(serializableArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(serializableCollection47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 100 + "'", serializable50, 100);
    }

    @Test
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test181");
        java.util.NavigableMap<java.lang.Class<?>, java.util.AbstractCollection<java.io.Serializable>> wildcardClassMap0 = java.util.Collections.emptyNavigableMap();
        org.junit.Assert.assertNotNull(wildcardClassMap0);
    }

    @Test
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test182");
        java.io.Serializable[] serializableArray51 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList52 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList52, serializableArray51);
        java.util.Collection<java.io.Serializable> serializableCollection54 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList52);
        java.io.Serializable[] serializableArray79 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList52, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList80 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList80, serializableArray79);
        serializableList80.ensureCapacity(100);
        boolean boolean85 = serializableList80.contains((java.lang.Object) (-1));
        java.util.List<java.io.Serializable> serializableList86 = java.util.Collections.synchronizedList((java.util.List<java.io.Serializable>) serializableList80);
        serializableList80.clear();
        org.junit.Assert.assertNotNull(serializableArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(serializableCollection54);
        org.junit.Assert.assertNotNull(serializableArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(serializableList86);
    }

    @Test
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test183");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration6 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableSet3);
        java.util.SortedSet<java.io.Serializable> serializableSet7 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList8 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet7);
        java.util.SortedSet<java.io.Serializable> serializableSet9 = java.util.Collections.unmodifiableSortedSet(serializableSet7);
        java.util.TreeSet<java.io.Serializable> serializableSet10 = new java.util.TreeSet<java.io.Serializable>(serializableSet9);
        java.io.Serializable serializable11 = serializableSet10.pollFirst();
        java.util.HashSet<java.util.ListIterator<java.io.Serializable>> serializableItorSet13 = new java.util.HashSet<java.util.ListIterator<java.io.Serializable>>((int) '4');
        java.util.NavigableSet<java.io.Serializable> serializableSet15 = serializableSet10.tailSet((java.io.Serializable) '4', true);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator16 = serializableSet10.spliterator();
        boolean boolean17 = serializableSet3.addAll((java.util.Collection<java.io.Serializable>) serializableSet10);
        java.util.SortedSet<java.io.Serializable> serializableSet18 = java.util.Collections.synchronizedSortedSet((java.util.SortedSet<java.io.Serializable>) serializableSet3);
        java.lang.Class<java.io.Serializable> serializableClass19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.NavigableSet<java.io.Serializable> serializableSet20 = java.util.Collections.checkedNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet3, serializableClass19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: type");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableEnumeration6);
        org.junit.Assert.assertNotNull(serializableSet7);
        org.junit.Assert.assertNotNull(serializableIterableList8);
        org.junit.Assert.assertNotNull(serializableSet9);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNotNull(serializableSet15);
        org.junit.Assert.assertNotNull(serializableSpliterator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(serializableSet18);
    }

    @Test
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test184");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean6 = strSet3.equals((java.lang.Object) false);
        int int7 = strSet3.size();
        java.util.SortedSet<java.io.Serializable> serializableSet8 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList9 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet8);
        java.util.SortedSet<java.io.Serializable> serializableSet10 = java.util.Collections.unmodifiableSortedSet(serializableSet8);
        boolean boolean11 = strSet3.removeAll((java.util.Collection<java.io.Serializable>) serializableSet8);
        java.util.SortedSet<java.io.Serializable> serializableSet12 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList13 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet12);
        java.util.SortedSet<java.io.Serializable> serializableSet14 = java.util.Collections.unmodifiableSortedSet(serializableSet12);
        boolean boolean15 = strSet3.contains((java.lang.Object) serializableSet14);
        java.lang.Class<java.io.Serializable> serializableClass16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.io.Serializable> serializableSet17 = java.util.Collections.checkedSet((java.util.Set<java.io.Serializable>) serializableSet14, serializableClass16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: type");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(serializableSet8);
        org.junit.Assert.assertNotNull(serializableIterableList9);
        org.junit.Assert.assertNotNull(serializableSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(serializableSet12);
        org.junit.Assert.assertNotNull(serializableIterableList13);
        org.junit.Assert.assertNotNull(serializableSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test185");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean6 = strSet3.equals((java.lang.Object) false);
        java.io.Serializable[] serializableArray42 = new java.io.Serializable[] { false, (-1), 'a', (-1.0f), "hi!", '#', '4', '4', '#', (byte) 10, 100, 1.0f, (byte) -1, (short) 0, '4', (-1.0d), (-1.0d), 'a', 'a', (short) 10, "hi!", (byte) -1, 0.0d, 1.0f, (-1.0d), 0.0d, 100L, 10.0f, '4', 1L, (-1), (-1L), 100, 0L, true };
        java.util.ArrayList<java.io.Serializable> serializableList43 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList43, serializableArray42);
        java.lang.Object obj45 = null;
        boolean boolean46 = serializableList43.equals(obj45);
        java.util.Collection<java.io.Serializable> serializableCollection47 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList43);
        boolean boolean48 = strSet3.contains((java.lang.Object) serializableList43);
        java.io.Serializable serializable50 = serializableList43.get((int) (byte) 10);
        java.util.Set<java.util.Collection<java.io.Serializable>> serializableCollectionSet51 = java.util.Collections.singleton((java.util.Collection<java.io.Serializable>) serializableList43);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable53 = serializableList43.get((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 35");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(serializableArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(serializableCollection47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 100 + "'", serializable50, 100);
        org.junit.Assert.assertNotNull(serializableCollectionSet51);
    }

    @Test
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test186");
        java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.util.AbstractList<java.io.Serializable>> strSetMap0 = java.util.Collections.emptyNavigableMap();
        java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.util.AbstractList<java.io.Serializable>> strSetMap1 = java.util.Collections.synchronizedNavigableMap(strSetMap0);
        java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.util.AbstractList<java.io.Serializable>> strSetMap2 = java.util.Collections.synchronizedNavigableMap(strSetMap1);
        java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.util.AbstractList<java.io.Serializable>> strSetMap3 = java.util.Collections.synchronizedNavigableMap(strSetMap2);
        java.lang.Class<java.util.AbstractSet<java.lang.String>> strSetClass4 = null;
        java.lang.Class<java.util.AbstractList<java.io.Serializable>> serializableListClass5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.util.AbstractList<java.io.Serializable>> strSetMap6 = java.util.Collections.checkedNavigableMap(strSetMap3, strSetClass4, serializableListClass5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSetMap0);
        org.junit.Assert.assertNotNull(strSetMap1);
        org.junit.Assert.assertNotNull(strSetMap2);
        org.junit.Assert.assertNotNull(strSetMap3);
    }

    @Test
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test187");
        java.util.ArrayList<java.io.Serializable> serializableList1 = new java.util.ArrayList<java.io.Serializable>(100);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable3 = serializableList1.get((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test188");
        java.util.Enumeration<java.lang.Comparable<java.lang.String>> strComparableEnumeration0 = java.util.Collections.emptyEnumeration();
        org.junit.Assert.assertNotNull(strComparableEnumeration0);
    }

    @Test
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test189");
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList41 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList41, serializableArray40);
        java.util.Collection<java.io.Serializable> serializableCollection43 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList41);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] { 'a', 10, 100, serializableList41, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList51 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList51, serializableArray50);
        boolean boolean55 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList51, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        serializableList51.ensureCapacity((int) (short) -1);
        java.util.Collections.reverse((java.util.List<java.io.Serializable>) serializableList51);
        java.lang.String[] strArray65 = new java.lang.String[] { "[]", "hi!", "hi!", "hi!", "", "hi!" };
        java.lang.String[] strArray72 = new java.lang.String[] { "[]", "hi!", "hi!", "hi!", "", "hi!" };
        java.lang.String[][] strArray73 = new java.lang.String[][] { strArray65, strArray72 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[][] strArray74 = serializableList51.toArray(strArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: arraycopy: element type mismatch: can not cast one of the elements of java.lang.Object[] to the type of the destination array, [Ljava.lang.String;");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(serializableCollection43);
        org.junit.Assert.assertNotNull(serializableArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strArray73);
    }

    @Test
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test190");
        java.util.Iterator<java.util.SortedSet<java.io.Serializable>> serializableSetItor0 = java.util.Collections.emptyIterator();
        org.junit.Assert.assertNotNull(serializableSetItor0);
    }

    @Test
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test191");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.io.Serializable serializable6 = serializableSet3.ceiling((java.io.Serializable) 0.0d);
        java.util.Comparator<? super java.io.Serializable> wildcardComparator7 = serializableSet3.comparator();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration8 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableSet3);
        java.util.SortedSet<java.io.Serializable> serializableSet9 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList10 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet9);
        java.util.SortedSet<java.io.Serializable> serializableSet11 = java.util.Collections.unmodifiableSortedSet(serializableSet9);
        java.util.TreeSet<java.io.Serializable> serializableSet12 = new java.util.TreeSet<java.io.Serializable>(serializableSet11);
        java.io.Serializable serializable13 = serializableSet12.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator14 = serializableSet12.comparator();
        serializableSet12.clear();
        java.util.NavigableSet<java.io.Serializable> serializableSet16 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet12);
        java.util.Enumeration<java.io.Serializable> serializableEnumeration17 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableSet12);
        java.util.SortedSet<java.io.Serializable> serializableSet18 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList19 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet18);
        java.util.SortedSet<java.io.Serializable> serializableSet20 = java.util.Collections.unmodifiableSortedSet(serializableSet18);
        java.util.TreeSet<java.io.Serializable> serializableSet21 = new java.util.TreeSet<java.io.Serializable>(serializableSet20);
        java.io.Serializable serializable22 = serializableSet21.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator23 = serializableSet21.comparator();
        boolean boolean24 = serializableSet21.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.util.SortedSet<java.io.Serializable> serializableSet25 = serializableSet3.subSet((java.io.Serializable) serializableSet12, (java.io.Serializable) boolean24);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class java.util.TreeSet cannot be cast to class java.lang.Comparable (java.util.TreeSet and java.lang.Comparable are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertNull(wildcardComparator7);
        org.junit.Assert.assertNotNull(serializableEnumeration8);
        org.junit.Assert.assertNotNull(serializableSet9);
        org.junit.Assert.assertNotNull(serializableIterableList10);
        org.junit.Assert.assertNotNull(serializableSet11);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNotNull(serializableSet16);
        org.junit.Assert.assertNotNull(serializableEnumeration17);
        org.junit.Assert.assertNotNull(serializableSet18);
        org.junit.Assert.assertNotNull(serializableIterableList19);
        org.junit.Assert.assertNotNull(serializableSet20);
        org.junit.Assert.assertNull(serializable22);
        org.junit.Assert.assertNull(wildcardComparator23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test192");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        boolean boolean5 = serializableSet3.remove((java.lang.Object) (-1.0f));
        java.lang.Class<java.io.Serializable> serializableClass6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.io.Serializable> serializableSet7 = java.util.Collections.checkedSet((java.util.Set<java.io.Serializable>) serializableSet3, serializableClass6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: type");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test193");
        java.util.SortedSet<java.util.SortedMap<java.util.Enumeration<java.util.HashSet<java.lang.String>>, java.util.Iterator<java.io.Serializable>>> setEnumerationMapSet0 = java.util.Collections.emptySortedSet();
        org.junit.Assert.assertNotNull(setEnumerationMapSet0);
    }

    @Test
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test194");
        java.util.NavigableMap<java.util.Set<java.io.Serializable>, java.util.RandomAccess> serializableSetMap0 = java.util.Collections.emptyNavigableMap();
        org.junit.Assert.assertNotNull(serializableSetMap0);
    }

    @Test
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test195");
        java.util.NavigableSet<java.util.SortedMap<java.util.Enumeration<java.util.HashSet<java.lang.String>>, java.util.Iterator<java.io.Serializable>>> setEnumerationMapSet0 = java.util.Collections.emptyNavigableSet();
        org.junit.Assert.assertNotNull(setEnumerationMapSet0);
    }

    @Test
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test196");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        int int6 = serializableSet3.size();
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable7 = serializableSet3.first();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test197");
        java.util.SortedSet<java.util.HashSet<java.lang.String>> strSetSet0 = java.util.Collections.emptySortedSet();
        org.junit.Assert.assertNotNull(strSetSet0);
    }

    @Test
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test198");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean6 = strSet3.equals((java.lang.Object) false);
        int int7 = strSet3.size();
        java.util.SortedSet<java.io.Serializable> serializableSet8 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList9 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet8);
        java.util.SortedSet<java.io.Serializable> serializableSet10 = java.util.Collections.unmodifiableSortedSet(serializableSet8);
        boolean boolean11 = strSet3.removeAll((java.util.Collection<java.io.Serializable>) serializableSet8);
        java.util.SortedSet<java.io.Serializable> serializableSet12 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList13 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet12);
        java.util.SortedSet<java.io.Serializable> serializableSet14 = java.util.Collections.unmodifiableSortedSet(serializableSet12);
        boolean boolean15 = strSet3.contains((java.lang.Object) serializableSet14);
        java.util.TreeSet<java.io.Serializable> serializableSet16 = new java.util.TreeSet<java.io.Serializable>(serializableSet14);
        java.util.TreeSet<java.io.Serializable> serializableSet17 = new java.util.TreeSet<java.io.Serializable>(serializableSet14);
        java.util.Enumeration<java.io.Serializable> serializableEnumeration18 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableSet14);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(serializableSet8);
        org.junit.Assert.assertNotNull(serializableIterableList9);
        org.junit.Assert.assertNotNull(serializableSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(serializableSet12);
        org.junit.Assert.assertNotNull(serializableIterableList13);
        org.junit.Assert.assertNotNull(serializableSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(serializableEnumeration18);
    }

    @Test
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test199");
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList41 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList41, serializableArray40);
        java.util.Collection<java.io.Serializable> serializableCollection43 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList41);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] { 'a', 10, 100, serializableList41, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList51 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList51, serializableArray50);
        boolean boolean55 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList51, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        serializableList51.ensureCapacity((int) (short) -1);
        java.util.Collections.reverse((java.util.List<java.io.Serializable>) serializableList51);
        java.util.List<java.io.Serializable> serializableList59 = java.util.Collections.synchronizedList((java.util.List<java.io.Serializable>) serializableList51);
        java.util.Random random60 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections.shuffle(serializableList59, random60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(serializableCollection43);
        org.junit.Assert.assertNotNull(serializableArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(serializableList59);
    }

    @Test
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test200");
        java.io.Serializable[] serializableArray51 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList52 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList52, serializableArray51);
        java.util.Collection<java.io.Serializable> serializableCollection54 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList52);
        java.io.Serializable[] serializableArray79 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList52, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList80 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList80, serializableArray79);
        serializableList80.ensureCapacity(100);
        java.util.stream.Stream<java.io.Serializable> serializableStream84 = serializableList80.stream();
        boolean boolean85 = serializableList80.isEmpty();
        java.util.Collection<java.io.Serializable> serializableCollection86 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList80);
        java.lang.Object obj87 = serializableList80.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections.swap((java.util.List<java.io.Serializable>) serializableList80, (int) '4', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 52 out of bounds for length 39");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(serializableCollection54);
        org.junit.Assert.assertNotNull(serializableArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(serializableStream84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(serializableCollection86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
    }

    @Test
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test201");
        java.util.NavigableSet<java.util.Set<java.io.Serializable>> serializableSetSet0 = java.util.Collections.emptyNavigableSet();
        org.junit.Assert.assertNotNull(serializableSetSet0);
    }

    @Test
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test202");
        java.util.Comparator<java.lang.Comparable<java.lang.String>> strComparableComparator0 = java.util.Collections.reverseOrder();
        org.junit.Assert.assertNotNull(strComparableComparator0);
    }

    @Test
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test203");
        java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.util.AbstractList<java.io.Serializable>> strSetMap0 = java.util.Collections.emptyNavigableMap();
        java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.util.AbstractList<java.io.Serializable>> strSetMap1 = java.util.Collections.synchronizedNavigableMap(strSetMap0);
        java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.util.AbstractList<java.io.Serializable>> strSetMap2 = java.util.Collections.synchronizedNavigableMap(strSetMap1);
        java.lang.Class<java.util.AbstractSet<java.lang.String>> strSetClass3 = null;
        java.lang.Class<java.util.AbstractList<java.io.Serializable>> serializableListClass4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.util.AbstractList<java.io.Serializable>> strSetMap5 = java.util.Collections.checkedNavigableMap(strSetMap1, strSetClass3, serializableListClass4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSetMap0);
        org.junit.Assert.assertNotNull(strSetMap1);
        org.junit.Assert.assertNotNull(strSetMap2);
    }

    @Test
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test204");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        serializableSet3.clear();
        java.util.Iterator<java.io.Serializable> serializableItor7 = serializableSet3.descendingIterator();
        java.io.Serializable[] serializableArray59 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList60 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList60, serializableArray59);
        java.util.Collection<java.io.Serializable> serializableCollection62 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList60);
        java.io.Serializable[] serializableArray87 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList60, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList88 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList88, serializableArray87);
        serializableList88.ensureCapacity(100);
        java.lang.Object[] objArray92 = serializableList88.toArray();
        boolean boolean94 = serializableList88.remove((java.lang.Object) (byte) 0);
        java.io.Serializable serializable95 = serializableSet3.higher((java.io.Serializable) (byte) 0);
        java.util.Iterator<java.io.Serializable> serializableItor96 = serializableSet3.descendingIterator();
        java.util.SortedSet<java.io.Serializable> serializableSet97 = java.util.Collections.unmodifiableSortedSet((java.util.SortedSet<java.io.Serializable>) serializableSet3);
        java.lang.Class<java.io.Serializable> serializableClass98 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.NavigableSet<java.io.Serializable> serializableSet99 = java.util.Collections.checkedNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet3, serializableClass98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: type");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableItor7);
        org.junit.Assert.assertNotNull(serializableArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(serializableCollection62);
        org.junit.Assert.assertNotNull(serializableArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNull(serializable95);
        org.junit.Assert.assertNotNull(serializableItor96);
        org.junit.Assert.assertNotNull(serializableSet97);
    }

    @Test
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test205");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.util.HashSet<java.lang.String> strSet5 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.lang.Object obj6 = strSet5.clone();
        java.io.Serializable serializable7 = serializableSet3.lower((java.io.Serializable) strSet5);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet11 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet11, strArray10);
        boolean boolean14 = strSet11.equals((java.lang.Object) false);
        boolean boolean15 = strSet11.isEmpty();
        boolean boolean17 = strSet11.equals((java.lang.Object) 10L);
        java.util.SortedSet<java.io.Serializable> serializableSet18 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList19 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet18);
        java.util.SortedSet<java.io.Serializable> serializableSet20 = java.util.Collections.unmodifiableSortedSet(serializableSet18);
        java.util.TreeSet<java.io.Serializable> serializableSet21 = new java.util.TreeSet<java.io.Serializable>(serializableSet20);
        boolean boolean23 = serializableSet21.remove((java.lang.Object) (-1.0f));
        java.util.Comparator<? super java.io.Serializable> wildcardComparator24 = serializableSet21.comparator();
        boolean boolean25 = strSet11.remove((java.lang.Object) serializableSet21);
        boolean boolean26 = strSet5.remove((java.lang.Object) serializableSet21);
        java.util.Iterator<java.io.Serializable> serializableItor27 = serializableSet21.iterator();
        java.io.Serializable[] serializableArray68 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList69 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList69, serializableArray68);
        java.util.Collection<java.io.Serializable> serializableCollection71 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList69);
        java.io.Serializable[] serializableArray78 = new java.io.Serializable[] { 'a', 10, 100, serializableList69, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList79 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList79, serializableArray78);
        boolean boolean83 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList79, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        serializableList79.ensureCapacity((int) (short) -1);
        java.util.Collections.reverse((java.util.List<java.io.Serializable>) serializableList79);
        java.io.Serializable serializable87 = serializableSet21.floor((java.io.Serializable) serializableList79);
        java.util.SortedSet<java.io.Serializable> serializableSet88 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList89 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet88);
        java.util.SortedSet<java.io.Serializable> serializableSet90 = java.util.Collections.unmodifiableSortedSet(serializableSet88);
        java.util.TreeSet<java.io.Serializable> serializableSet91 = new java.util.TreeSet<java.io.Serializable>(serializableSet90);
        java.io.Serializable serializable92 = serializableSet91.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator93 = serializableSet91.comparator();
        boolean boolean94 = serializableSet91.isEmpty();
        serializableSet91.clear();
        java.util.Spliterator<java.io.Serializable> serializableSpliterator96 = serializableSet91.spliterator();
        java.io.Serializable serializable97 = serializableSet91.pollLast();
        // The following exception was thrown during execution in test generation
        try {
            java.util.SortedSet<java.io.Serializable> serializableSet98 = serializableSet21.headSet(serializable97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "[]");
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(serializableSet18);
        org.junit.Assert.assertNotNull(serializableIterableList19);
        org.junit.Assert.assertNotNull(serializableSet20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardComparator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(serializableItor27);
        org.junit.Assert.assertNotNull(serializableArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(serializableCollection71);
        org.junit.Assert.assertNotNull(serializableArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(serializable87);
        org.junit.Assert.assertNotNull(serializableSet88);
        org.junit.Assert.assertNotNull(serializableIterableList89);
        org.junit.Assert.assertNotNull(serializableSet90);
        org.junit.Assert.assertNull(serializable92);
        org.junit.Assert.assertNull(wildcardComparator93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(serializableSpliterator96);
        org.junit.Assert.assertNull(serializable97);
    }

    @Test
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test206");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        boolean boolean6 = serializableSet3.isEmpty();
        java.io.Serializable[] serializableArray47 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList48 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList48, serializableArray47);
        java.util.Collection<java.io.Serializable> serializableCollection50 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList48);
        java.io.Serializable[] serializableArray57 = new java.io.Serializable[] { 'a', 10, 100, serializableList48, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList58 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList58, serializableArray57);
        boolean boolean62 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList58, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.Map<java.io.Serializable, java.lang.Object> serializableMap65 = java.util.Collections.singletonMap((java.io.Serializable) (short) 1, (java.lang.Object) (short) 1);
        int int66 = serializableList58.lastIndexOf((java.lang.Object) (short) 1);
        serializableList58.clear();
        java.util.Random random68 = null;
        java.util.Collections.shuffle((java.util.List<java.io.Serializable>) serializableList58, random68);
        java.io.Serializable serializable70 = serializableSet3.lower((java.io.Serializable) random68);
        java.util.Set<java.io.Serializable> serializableSet71 = java.util.Collections.synchronizedSet((java.util.Set<java.io.Serializable>) serializableSet3);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable72 = serializableSet3.last();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(serializableArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(serializableCollection50);
        org.junit.Assert.assertNotNull(serializableArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(serializableMap65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNull(serializable70);
        org.junit.Assert.assertNotNull(serializableSet71);
    }

    @Test
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test207");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        boolean boolean6 = serializableSet3.isEmpty();
        java.io.Serializable[] serializableArray47 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList48 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList48, serializableArray47);
        java.util.Collection<java.io.Serializable> serializableCollection50 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList48);
        java.io.Serializable[] serializableArray57 = new java.io.Serializable[] { 'a', 10, 100, serializableList48, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList58 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList58, serializableArray57);
        boolean boolean62 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList58, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.Map<java.io.Serializable, java.lang.Object> serializableMap65 = java.util.Collections.singletonMap((java.io.Serializable) (short) 1, (java.lang.Object) (short) 1);
        int int66 = serializableList58.lastIndexOf((java.lang.Object) (short) 1);
        serializableList58.clear();
        java.util.Random random68 = null;
        java.util.Collections.shuffle((java.util.List<java.io.Serializable>) serializableList58, random68);
        java.io.Serializable serializable70 = serializableSet3.lower((java.io.Serializable) random68);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable71 = serializableSet3.last();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(serializableArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(serializableCollection50);
        org.junit.Assert.assertNotNull(serializableArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(serializableMap65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNull(serializable70);
    }

    @Test
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test208");
        java.io.Serializable[] serializableArray51 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList52 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList52, serializableArray51);
        java.util.Collection<java.io.Serializable> serializableCollection54 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList52);
        java.io.Serializable[] serializableArray79 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList52, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList80 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList80, serializableArray79);
        serializableList80.ensureCapacity(100);
        boolean boolean85 = serializableList80.contains((java.lang.Object) (-1));
        boolean boolean86 = serializableList80.isEmpty();
        org.junit.Assert.assertNotNull(serializableArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(serializableCollection54);
        org.junit.Assert.assertNotNull(serializableArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test209");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        serializableSet3.clear();
        java.util.Iterator<java.io.Serializable> serializableItor7 = serializableSet3.descendingIterator();
        java.io.Serializable[] serializableArray59 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList60 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList60, serializableArray59);
        java.util.Collection<java.io.Serializable> serializableCollection62 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList60);
        java.io.Serializable[] serializableArray87 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList60, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList88 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList88, serializableArray87);
        serializableList88.ensureCapacity(100);
        java.lang.Object[] objArray92 = serializableList88.toArray();
        boolean boolean94 = serializableList88.remove((java.lang.Object) (byte) 0);
        java.io.Serializable serializable95 = serializableSet3.higher((java.io.Serializable) (byte) 0);
        java.util.Iterator<java.io.Serializable> serializableItor96 = serializableSet3.descendingIterator();
        int int97 = serializableSet3.size();
        int int98 = serializableSet3.size();
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableItor7);
        org.junit.Assert.assertNotNull(serializableArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(serializableCollection62);
        org.junit.Assert.assertNotNull(serializableArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNull(serializable95);
        org.junit.Assert.assertNotNull(serializableItor96);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 0 + "'", int97 == 0);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 0 + "'", int98 == 0);
    }

    @Test
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test210");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean6 = strSet3.equals((java.lang.Object) false);
        int int7 = strSet3.size();
        java.util.SortedSet<java.io.Serializable> serializableSet8 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList9 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet8);
        java.util.SortedSet<java.io.Serializable> serializableSet10 = java.util.Collections.unmodifiableSortedSet(serializableSet8);
        boolean boolean11 = strSet3.removeAll((java.util.Collection<java.io.Serializable>) serializableSet8);
        java.util.SortedSet<java.io.Serializable> serializableSet12 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList13 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet12);
        java.util.SortedSet<java.io.Serializable> serializableSet14 = java.util.Collections.unmodifiableSortedSet(serializableSet12);
        boolean boolean15 = strSet3.contains((java.lang.Object) serializableSet14);
        java.util.TreeSet<java.io.Serializable> serializableSet16 = new java.util.TreeSet<java.io.Serializable>(serializableSet14);
        java.util.TreeSet<java.io.Serializable> serializableSet17 = new java.util.TreeSet<java.io.Serializable>(serializableSet14);
        java.util.Set<java.io.Serializable> serializableSet18 = java.util.Collections.synchronizedSet((java.util.Set<java.io.Serializable>) serializableSet14);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(serializableSet8);
        org.junit.Assert.assertNotNull(serializableIterableList9);
        org.junit.Assert.assertNotNull(serializableSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(serializableSet12);
        org.junit.Assert.assertNotNull(serializableIterableList13);
        org.junit.Assert.assertNotNull(serializableSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(serializableSet18);
    }

    @Test
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test211");
        java.io.Serializable[] serializableArray37 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList38 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList38, serializableArray37);
        java.util.Collection<java.io.Serializable> serializableCollection40 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList38);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator41 = serializableList38.spliterator();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration42 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableList38);
        org.junit.Assert.assertNotNull(serializableArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(serializableCollection40);
        org.junit.Assert.assertNotNull(serializableSpliterator41);
        org.junit.Assert.assertNotNull(serializableEnumeration42);
    }

    @Test
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test212");
        java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.util.AbstractList<java.io.Serializable>> strSetMap0 = null;
        java.lang.Class<java.util.AbstractSet<java.lang.String>> strSetClass1 = null;
        java.lang.Class<java.util.AbstractList<java.io.Serializable>> serializableListClass2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.util.AbstractList<java.io.Serializable>> strSetMap3 = java.util.Collections.checkedNavigableMap(strSetMap0, strSetClass1, serializableListClass2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test213");
        java.util.NavigableSet<java.util.stream.BaseStream<java.io.Serializable, java.util.stream.Stream<java.io.Serializable>>> serializableBaseStreamSet0 = java.util.Collections.emptyNavigableSet();
        org.junit.Assert.assertNotNull(serializableBaseStreamSet0);
    }

    @Test
    public void test214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test214");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        serializableSet3.clear();
        java.util.Iterator<java.io.Serializable> serializableItor7 = serializableSet3.descendingIterator();
        java.io.Serializable[] serializableArray59 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList60 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList60, serializableArray59);
        java.util.Collection<java.io.Serializable> serializableCollection62 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList60);
        java.io.Serializable[] serializableArray87 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList60, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList88 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList88, serializableArray87);
        serializableList88.ensureCapacity(100);
        java.lang.Object[] objArray92 = serializableList88.toArray();
        boolean boolean94 = serializableList88.remove((java.lang.Object) (byte) 0);
        java.io.Serializable serializable95 = serializableSet3.higher((java.io.Serializable) (byte) 0);
        java.util.Iterator<java.io.Serializable> serializableItor96 = serializableSet3.descendingIterator();
        int int97 = serializableSet3.size();
        java.io.Serializable serializable98 = serializableSet3.pollLast();
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableItor7);
        org.junit.Assert.assertNotNull(serializableArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(serializableCollection62);
        org.junit.Assert.assertNotNull(serializableArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNull(serializable95);
        org.junit.Assert.assertNotNull(serializableItor96);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 0 + "'", int97 == 0);
        org.junit.Assert.assertNull(serializable98);
    }

    @Test
    public void test215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test215");
        java.io.Serializable[] serializableArray37 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList38 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList38, serializableArray37);
        java.util.Collection<java.io.Serializable> serializableCollection40 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList38);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator41 = serializableList38.spliterator();
        java.util.Spliterator<java.io.Serializable> serializableSpliterator42 = serializableList38.spliterator();
        java.lang.Object[] objArray43 = serializableList38.toArray();
        java.util.SortedSet<java.io.Serializable> serializableSet44 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList45 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet44);
        java.util.SortedSet<java.io.Serializable> serializableSet46 = java.util.Collections.unmodifiableSortedSet(serializableSet44);
        java.util.TreeSet<java.io.Serializable> serializableSet47 = new java.util.TreeSet<java.io.Serializable>(serializableSet46);
        java.io.Serializable serializable48 = serializableSet47.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator49 = serializableSet47.comparator();
        java.util.NavigableSet<java.io.Serializable> serializableSet50 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet47);
        java.util.SortedSet<java.io.Serializable> serializableSet51 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList52 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet51);
        java.util.SortedSet<java.io.Serializable> serializableSet53 = java.util.Collections.unmodifiableSortedSet(serializableSet51);
        java.util.TreeSet<java.io.Serializable> serializableSet54 = new java.util.TreeSet<java.io.Serializable>(serializableSet53);
        java.util.HashSet<java.lang.String> strSet56 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.lang.Object obj57 = strSet56.clone();
        java.io.Serializable serializable58 = serializableSet54.lower((java.io.Serializable) strSet56);
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet62 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet62, strArray61);
        boolean boolean65 = strSet62.equals((java.lang.Object) false);
        boolean boolean66 = strSet62.isEmpty();
        boolean boolean68 = strSet62.equals((java.lang.Object) 10L);
        java.util.SortedSet<java.io.Serializable> serializableSet69 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList70 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet69);
        java.util.SortedSet<java.io.Serializable> serializableSet71 = java.util.Collections.unmodifiableSortedSet(serializableSet69);
        java.util.TreeSet<java.io.Serializable> serializableSet72 = new java.util.TreeSet<java.io.Serializable>(serializableSet71);
        boolean boolean74 = serializableSet72.remove((java.lang.Object) (-1.0f));
        java.util.Comparator<? super java.io.Serializable> wildcardComparator75 = serializableSet72.comparator();
        boolean boolean76 = strSet62.remove((java.lang.Object) serializableSet72);
        boolean boolean77 = strSet56.remove((java.lang.Object) serializableSet72);
        boolean boolean78 = serializableSet47.remove((java.lang.Object) boolean77);
        boolean boolean79 = serializableList38.retainAll((java.util.Collection<java.io.Serializable>) serializableSet47);
        java.util.HashSet<java.lang.String> strSet80 = new java.util.HashSet<java.lang.String>();
        java.util.SortedSet<java.io.Serializable> serializableSet81 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList82 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet81);
        java.util.SortedSet<java.io.Serializable> serializableSet83 = java.util.Collections.unmodifiableSortedSet(serializableSet81);
        java.util.TreeSet<java.io.Serializable> serializableSet84 = new java.util.TreeSet<java.io.Serializable>(serializableSet83);
        java.io.Serializable serializable85 = serializableSet84.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator86 = serializableSet84.comparator();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration87 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableSet84);
        java.util.NavigableSet<java.io.Serializable> serializableSet90 = serializableSet84.tailSet((java.io.Serializable) 100L, true);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator91 = serializableSet84.spliterator();
        boolean boolean92 = strSet80.remove((java.lang.Object) serializableSet84);
        // The following exception was thrown during execution in test generation
        try {
            java.util.SortedSet<java.io.Serializable> serializableSet93 = serializableSet47.tailSet((java.io.Serializable) serializableSet84);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class java.util.TreeSet cannot be cast to class java.lang.Comparable (java.util.TreeSet and java.lang.Comparable are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(serializableCollection40);
        org.junit.Assert.assertNotNull(serializableSpliterator41);
        org.junit.Assert.assertNotNull(serializableSpliterator42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertNotNull(serializableSet44);
        org.junit.Assert.assertNotNull(serializableIterableList45);
        org.junit.Assert.assertNotNull(serializableSet46);
        org.junit.Assert.assertNull(serializable48);
        org.junit.Assert.assertNull(wildcardComparator49);
        org.junit.Assert.assertNotNull(serializableSet50);
        org.junit.Assert.assertNotNull(serializableSet51);
        org.junit.Assert.assertNotNull(serializableIterableList52);
        org.junit.Assert.assertNotNull(serializableSet53);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "[]");
        org.junit.Assert.assertNull(serializable58);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(serializableSet69);
        org.junit.Assert.assertNotNull(serializableIterableList70);
        org.junit.Assert.assertNotNull(serializableSet71);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(wildcardComparator75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(serializableSet81);
        org.junit.Assert.assertNotNull(serializableIterableList82);
        org.junit.Assert.assertNotNull(serializableSet83);
        org.junit.Assert.assertNull(serializable85);
        org.junit.Assert.assertNull(wildcardComparator86);
        org.junit.Assert.assertNotNull(serializableEnumeration87);
        org.junit.Assert.assertNotNull(serializableSet90);
        org.junit.Assert.assertNotNull(serializableSpliterator91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test216");
        java.util.HashSet<java.util.SortedSet<java.io.Serializable>> serializableSetSet0 = new java.util.HashSet<java.util.SortedSet<java.io.Serializable>>();
    }

    @Test
    public void test217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test217");
        java.util.ArrayList<java.lang.Iterable<java.io.Serializable>> serializableIterableList0 = new java.util.ArrayList<java.lang.Iterable<java.io.Serializable>>();
    }

    @Test
    public void test218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test218");
        java.util.Iterator<java.io.Serializable> serializableItor0 = java.util.Collections.emptyIterator();
        org.junit.Assert.assertNotNull(serializableItor0);
    }

    @Test
    public void test219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test219");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        boolean boolean5 = serializableSet3.remove((java.lang.Object) (-1.0f));
        java.util.Comparator<? super java.io.Serializable> wildcardComparator6 = serializableSet3.comparator();
        java.util.SortedSet<java.io.Serializable> serializableSet7 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList8 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet7);
        java.util.SortedSet<java.io.Serializable> serializableSet9 = java.util.Collections.unmodifiableSortedSet(serializableSet7);
        java.util.TreeSet<java.io.Serializable> serializableSet10 = new java.util.TreeSet<java.io.Serializable>(serializableSet9);
        java.io.Serializable serializable11 = serializableSet10.pollFirst();
        java.io.Serializable serializable13 = serializableSet10.ceiling((java.io.Serializable) 0.0d);
        java.util.Comparator<? super java.io.Serializable> wildcardComparator14 = serializableSet10.comparator();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration15 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableSet10);
        // The following exception was thrown during execution in test generation
        try {
            java.util.SortedSet<java.io.Serializable> serializableSet16 = serializableSet3.tailSet((java.io.Serializable) serializableSet10);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class java.util.TreeSet cannot be cast to class java.lang.Comparable (java.util.TreeSet and java.lang.Comparable are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(serializableSet7);
        org.junit.Assert.assertNotNull(serializableIterableList8);
        org.junit.Assert.assertNotNull(serializableSet9);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNotNull(serializableEnumeration15);
    }

    @Test
    public void test220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test220");
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList1 = java.util.Collections.singletonList((java.lang.Comparable<java.lang.String>) "");
        org.junit.Assert.assertNotNull(strComparableList1);
    }

    @Test
    public void test221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test221");
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList41 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList41, serializableArray40);
        java.util.Collection<java.io.Serializable> serializableCollection43 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList41);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] { 'a', 10, 100, serializableList41, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList51 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList51, serializableArray50);
        boolean boolean55 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList51, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.Map<java.io.Serializable, java.lang.Object> serializableMap58 = java.util.Collections.singletonMap((java.io.Serializable) (short) 1, (java.lang.Object) (short) 1);
        int int59 = serializableList51.lastIndexOf((java.lang.Object) (short) 1);
        serializableList51.clear();
        java.util.Random random61 = null;
        java.util.Collections.shuffle((java.util.List<java.io.Serializable>) serializableList51, random61);
        java.util.ListIterator<java.io.Serializable> serializableItor63 = serializableList51.listIterator();
        java.util.function.UnaryOperator<java.io.Serializable> serializableUnaryOperator64 = null;
        // The following exception was thrown during execution in test generation
        try {
            serializableList51.replaceAll(serializableUnaryOperator64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(serializableCollection43);
        org.junit.Assert.assertNotNull(serializableArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(serializableMap58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(serializableItor63);
    }

    @Test
    public void test222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test222");
        java.util.ArrayList<java.io.Serializable> serializableList1 = new java.util.ArrayList<java.io.Serializable>(100);
        java.lang.String[] strArray5 = new java.lang.String[] { "", "", "hi!" };
        java.lang.Comparable<java.lang.String>[] strComparableArray6 = serializableList1.toArray((java.lang.Comparable<java.lang.String>[]) strArray5);
        java.util.SortedSet<java.io.Serializable> serializableSet7 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList8 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet7);
        java.util.SortedSet<java.io.Serializable> serializableSet9 = java.util.Collections.unmodifiableSortedSet(serializableSet7);
        java.util.TreeSet<java.io.Serializable> serializableSet10 = new java.util.TreeSet<java.io.Serializable>(serializableSet9);
        java.io.Serializable serializable11 = serializableSet10.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator12 = serializableSet10.comparator();
        java.util.NavigableSet<java.io.Serializable> serializableSet13 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet10);
        java.util.SortedSet<java.io.Serializable> serializableSet14 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList15 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet14);
        java.util.SortedSet<java.io.Serializable> serializableSet16 = java.util.Collections.unmodifiableSortedSet(serializableSet14);
        java.util.TreeSet<java.io.Serializable> serializableSet17 = new java.util.TreeSet<java.io.Serializable>(serializableSet16);
        java.util.HashSet<java.lang.String> strSet19 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.lang.Object obj20 = strSet19.clone();
        java.io.Serializable serializable21 = serializableSet17.lower((java.io.Serializable) strSet19);
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet25 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet25, strArray24);
        boolean boolean28 = strSet25.equals((java.lang.Object) false);
        boolean boolean29 = strSet25.isEmpty();
        boolean boolean31 = strSet25.equals((java.lang.Object) 10L);
        java.util.SortedSet<java.io.Serializable> serializableSet32 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList33 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet32);
        java.util.SortedSet<java.io.Serializable> serializableSet34 = java.util.Collections.unmodifiableSortedSet(serializableSet32);
        java.util.TreeSet<java.io.Serializable> serializableSet35 = new java.util.TreeSet<java.io.Serializable>(serializableSet34);
        boolean boolean37 = serializableSet35.remove((java.lang.Object) (-1.0f));
        java.util.Comparator<? super java.io.Serializable> wildcardComparator38 = serializableSet35.comparator();
        boolean boolean39 = strSet25.remove((java.lang.Object) serializableSet35);
        boolean boolean40 = strSet19.remove((java.lang.Object) serializableSet35);
        boolean boolean41 = serializableSet10.remove((java.lang.Object) boolean40);
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] {};
        java.lang.reflect.Type[] typeArray43 = serializableSet10.toArray(typeArray42);
        boolean boolean44 = serializableList1.retainAll((java.util.Collection<java.io.Serializable>) serializableSet10);
        java.lang.Class<java.io.Serializable> serializableClass45 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.io.Serializable> serializableSet46 = java.util.Collections.checkedSet((java.util.Set<java.io.Serializable>) serializableSet10, serializableClass45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: type");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strComparableArray6);
        org.junit.Assert.assertNotNull(serializableSet7);
        org.junit.Assert.assertNotNull(serializableIterableList8);
        org.junit.Assert.assertNotNull(serializableSet9);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(wildcardComparator12);
        org.junit.Assert.assertNotNull(serializableSet13);
        org.junit.Assert.assertNotNull(serializableSet14);
        org.junit.Assert.assertNotNull(serializableIterableList15);
        org.junit.Assert.assertNotNull(serializableSet16);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "[]");
        org.junit.Assert.assertNull(serializable21);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(serializableSet32);
        org.junit.Assert.assertNotNull(serializableIterableList33);
        org.junit.Assert.assertNotNull(serializableSet34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardComparator38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test223");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        serializableSet3.clear();
        java.util.Iterator<java.io.Serializable> serializableItor7 = serializableSet3.descendingIterator();
        java.io.Serializable[] serializableArray59 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList60 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList60, serializableArray59);
        java.util.Collection<java.io.Serializable> serializableCollection62 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList60);
        java.io.Serializable[] serializableArray87 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList60, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList88 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList88, serializableArray87);
        serializableList88.ensureCapacity(100);
        java.lang.Object[] objArray92 = serializableList88.toArray();
        boolean boolean94 = serializableList88.remove((java.lang.Object) (byte) 0);
        java.io.Serializable serializable95 = serializableSet3.higher((java.io.Serializable) (byte) 0);
        serializableSet3.clear();
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableItor7);
        org.junit.Assert.assertNotNull(serializableArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(serializableCollection62);
        org.junit.Assert.assertNotNull(serializableArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNull(serializable95);
    }

    @Test
    public void test224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test224");
        java.util.List<java.util.ListIterator<java.io.Serializable>> serializableItorList0 = java.util.Collections.emptyList();
        org.junit.Assert.assertNotNull(serializableItorList0);
    }

    @Test
    public void test225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test225");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean6 = strSet3.equals((java.lang.Object) false);
        boolean boolean7 = strSet3.isEmpty();
        java.util.Spliterator<java.lang.String> strSpliterator8 = strSet3.spliterator();
        java.util.Spliterator<java.lang.String> strSpliterator9 = strSet3.spliterator();
        int int10 = strSet3.size();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSpliterator8);
        org.junit.Assert.assertNotNull(strSpliterator9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test226");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.TreeSet<java.io.Serializable> serializableSet1 = new java.util.TreeSet<java.io.Serializable>(serializableSet0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test227");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        serializableSet3.clear();
        java.util.Iterator<java.io.Serializable> serializableItor7 = serializableSet3.descendingIterator();
        java.io.Serializable[] serializableArray59 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList60 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList60, serializableArray59);
        java.util.Collection<java.io.Serializable> serializableCollection62 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList60);
        java.io.Serializable[] serializableArray87 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList60, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList88 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList88, serializableArray87);
        serializableList88.ensureCapacity(100);
        java.lang.Object[] objArray92 = serializableList88.toArray();
        boolean boolean94 = serializableList88.remove((java.lang.Object) (byte) 0);
        java.io.Serializable serializable95 = serializableSet3.higher((java.io.Serializable) (byte) 0);
        java.util.NavigableSet<java.io.Serializable> serializableSet96 = serializableSet3.descendingSet();
        int int97 = serializableSet3.size();
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableItor7);
        org.junit.Assert.assertNotNull(serializableArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(serializableCollection62);
        org.junit.Assert.assertNotNull(serializableArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNull(serializable95);
        org.junit.Assert.assertNotNull(serializableSet96);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 0 + "'", int97 == 0);
    }

    @Test
    public void test228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test228");
        java.util.ArrayList<java.io.Serializable> serializableList0 = new java.util.ArrayList<java.io.Serializable>();
        java.util.function.UnaryOperator<java.io.Serializable> serializableUnaryOperator1 = null;
        // The following exception was thrown during execution in test generation
        try {
            serializableList0.replaceAll(serializableUnaryOperator1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test229");
        // The following exception was thrown during execution in test generation
        try {
            java.util.HashSet<java.lang.String> strSet2 = new java.util.HashSet<java.lang.String>(0, (float) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal load factor: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test230");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        java.util.NavigableSet<java.io.Serializable> serializableSet6 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet3);
        java.util.stream.Stream[][] streamArray7 = new java.util.stream.Stream[][] {};
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableSet3, streamArray7);
        java.lang.Class<java.io.Serializable> serializableClass9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.NavigableSet<java.io.Serializable> serializableSet10 = java.util.Collections.checkedNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet3, serializableClass9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: type");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableSet6);
        org.junit.Assert.assertNotNull(streamArray7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test231");
        java.util.SortedSet<java.util.Map<java.lang.Comparable<java.lang.String>, java.util.Comparator<java.lang.CharSequence>>> strComparableMapSet0 = java.util.Collections.emptySortedSet();
        org.junit.Assert.assertNotNull(strComparableMapSet0);
    }

    @Test
    public void test232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test232");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        int int6 = serializableSet3.size();
        java.io.Serializable serializable7 = serializableSet3.pollFirst();
        java.util.SortedSet<java.io.Serializable> serializableSet8 = java.util.Collections.synchronizedSortedSet((java.util.SortedSet<java.io.Serializable>) serializableSet3);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable9 = serializableSet3.first();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNotNull(serializableSet8);
    }

    @Test
    public void test233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test233");
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList41 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList41, serializableArray40);
        java.util.Collection<java.io.Serializable> serializableCollection43 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList41);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] { 'a', 10, 100, serializableList41, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList51 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList51, serializableArray50);
        boolean boolean55 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList51, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.Map<java.io.Serializable, java.lang.Object> serializableMap58 = java.util.Collections.singletonMap((java.io.Serializable) (short) 1, (java.lang.Object) (short) 1);
        int int59 = serializableList51.lastIndexOf((java.lang.Object) (short) 1);
        serializableList51.clear();
        java.util.Random random61 = null;
        java.util.Collections.shuffle((java.util.List<java.io.Serializable>) serializableList51, random61);
        java.util.ListIterator<java.io.Serializable> serializableItor63 = serializableList51.listIterator();
        java.lang.Class<?> wildcardClass64 = serializableList51.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet65 = java.util.Collections.singleton((java.lang.reflect.Type) wildcardClass64);
        org.junit.Assert.assertNotNull(serializableArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(serializableCollection43);
        org.junit.Assert.assertNotNull(serializableArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(serializableMap58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(serializableItor63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(typeSet65);
    }

    @Test
    public void test234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test234");
        java.io.Serializable[] serializableArray51 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList52 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList52, serializableArray51);
        java.util.Collection<java.io.Serializable> serializableCollection54 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList52);
        java.io.Serializable[] serializableArray79 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList52, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList80 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList80, serializableArray79);
        serializableList80.ensureCapacity(100);
        java.util.stream.Stream<java.io.Serializable> serializableStream84 = serializableList80.stream();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration85 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableList80);
        serializableList80.trimToSize();
        java.util.function.UnaryOperator<java.io.Serializable> serializableUnaryOperator87 = null;
        // The following exception was thrown during execution in test generation
        try {
            serializableList80.replaceAll(serializableUnaryOperator87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(serializableCollection54);
        org.junit.Assert.assertNotNull(serializableArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(serializableStream84);
        org.junit.Assert.assertNotNull(serializableEnumeration85);
    }

    @Test
    public void test235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test235");
        java.util.Iterator<java.lang.reflect.Type> typeItor0 = java.util.Collections.emptyIterator();
        org.junit.Assert.assertNotNull(typeItor0);
    }

    @Test
    public void test236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test236");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.util.Iterator<java.io.Serializable> serializableItor4 = serializableSet3.iterator();
        java.util.Spliterator<java.io.Serializable> serializableSpliterator5 = serializableSet3.spliterator();
        java.util.NavigableSet<java.io.Serializable> serializableSet6 = java.util.Collections.synchronizedNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet3);
        java.lang.Class<java.io.Serializable> serializableClass7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collection<java.io.Serializable> serializableCollection8 = java.util.Collections.checkedCollection((java.util.Collection<java.io.Serializable>) serializableSet3, serializableClass7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: type");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNotNull(serializableItor4);
        org.junit.Assert.assertNotNull(serializableSpliterator5);
        org.junit.Assert.assertNotNull(serializableSet6);
    }

    @Test
    public void test237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test237");
        java.util.List<java.lang.reflect.GenericDeclaration> genericDeclarationList0 = java.util.Collections.emptyList();
        org.junit.Assert.assertNotNull(genericDeclarationList0);
    }

    @Test
    public void test238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test238");
        java.util.SortedSet<java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.util.AbstractList<java.io.Serializable>>> strSetMapSet0 = java.util.Collections.emptySortedSet();
        org.junit.Assert.assertNotNull(strSetMapSet0);
    }

    @Test
    public void test239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test239");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        serializableSet3.clear();
        java.util.Iterator<java.io.Serializable> serializableItor7 = serializableSet3.descendingIterator();
        java.io.Serializable[] serializableArray59 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList60 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList60, serializableArray59);
        java.util.Collection<java.io.Serializable> serializableCollection62 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList60);
        java.io.Serializable[] serializableArray87 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList60, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList88 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList88, serializableArray87);
        serializableList88.ensureCapacity(100);
        java.lang.Object[] objArray92 = serializableList88.toArray();
        boolean boolean94 = serializableList88.remove((java.lang.Object) (byte) 0);
        java.io.Serializable serializable95 = serializableSet3.higher((java.io.Serializable) (byte) 0);
        java.util.Iterator<java.io.Serializable> serializableItor96 = serializableSet3.descendingIterator();
        java.util.NavigableSet<java.io.Serializable> serializableSet97 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet3);
        java.util.SortedSet<java.io.Serializable> serializableSet98 = java.util.Collections.unmodifiableSortedSet((java.util.SortedSet<java.io.Serializable>) serializableSet3);
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableItor7);
        org.junit.Assert.assertNotNull(serializableArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(serializableCollection62);
        org.junit.Assert.assertNotNull(serializableArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNull(serializable95);
        org.junit.Assert.assertNotNull(serializableItor96);
        org.junit.Assert.assertNotNull(serializableSet97);
        org.junit.Assert.assertNotNull(serializableSet98);
    }

    @Test
    public void test240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test240");
        java.io.Serializable[] serializableArray51 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList52 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList52, serializableArray51);
        java.util.Collection<java.io.Serializable> serializableCollection54 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList52);
        java.io.Serializable[] serializableArray79 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList52, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList80 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList80, serializableArray79);
        serializableList80.ensureCapacity(100);
        java.lang.Object[] objArray84 = serializableList80.toArray();
        java.lang.Object[] objArray85 = serializableList80.toArray();
        int int87 = serializableList80.lastIndexOf((java.lang.Object) 1.0f);
        serializableList80.trimToSize();
        org.junit.Assert.assertNotNull(serializableArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(serializableCollection54);
        org.junit.Assert.assertNotNull(serializableArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
    }

    @Test
    public void test241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test241");
        java.util.HashSet<java.lang.String> strSet1 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        boolean boolean3 = strSet1.add("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test242");
        java.util.HashSet<java.lang.String> strSet1 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        strSet1.clear();
        boolean boolean3 = strSet1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test243");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.util.HashSet<java.lang.String> strSet5 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.lang.Object obj6 = strSet5.clone();
        java.io.Serializable serializable7 = serializableSet3.lower((java.io.Serializable) strSet5);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet11 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet11, strArray10);
        boolean boolean14 = strSet11.equals((java.lang.Object) false);
        boolean boolean15 = strSet11.isEmpty();
        boolean boolean17 = strSet11.equals((java.lang.Object) 10L);
        java.util.SortedSet<java.io.Serializable> serializableSet18 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList19 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet18);
        java.util.SortedSet<java.io.Serializable> serializableSet20 = java.util.Collections.unmodifiableSortedSet(serializableSet18);
        java.util.TreeSet<java.io.Serializable> serializableSet21 = new java.util.TreeSet<java.io.Serializable>(serializableSet20);
        boolean boolean23 = serializableSet21.remove((java.lang.Object) (-1.0f));
        java.util.Comparator<? super java.io.Serializable> wildcardComparator24 = serializableSet21.comparator();
        boolean boolean25 = strSet11.remove((java.lang.Object) serializableSet21);
        boolean boolean26 = strSet5.remove((java.lang.Object) serializableSet21);
        java.util.Iterator<java.io.Serializable> serializableItor27 = serializableSet21.iterator();
        java.io.Serializable[] serializableArray68 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList69 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList69, serializableArray68);
        java.util.Collection<java.io.Serializable> serializableCollection71 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList69);
        java.io.Serializable[] serializableArray78 = new java.io.Serializable[] { 'a', 10, 100, serializableList69, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList79 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList79, serializableArray78);
        boolean boolean83 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList79, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        serializableList79.ensureCapacity((int) (short) -1);
        java.util.Collections.reverse((java.util.List<java.io.Serializable>) serializableList79);
        java.io.Serializable serializable87 = serializableSet21.floor((java.io.Serializable) serializableList79);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections.swap((java.util.List<java.io.Serializable>) serializableList79, (int) '#', (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 35 out of bounds for length 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "[]");
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(serializableSet18);
        org.junit.Assert.assertNotNull(serializableIterableList19);
        org.junit.Assert.assertNotNull(serializableSet20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardComparator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(serializableItor27);
        org.junit.Assert.assertNotNull(serializableArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(serializableCollection71);
        org.junit.Assert.assertNotNull(serializableArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(serializable87);
    }

    @Test
    public void test244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test244");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean6 = strSet3.equals((java.lang.Object) false);
        boolean boolean7 = strSet3.isEmpty();
        boolean boolean9 = strSet3.equals((java.lang.Object) 10L);
        java.util.SortedSet<java.io.Serializable> serializableSet10 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList11 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet10);
        java.util.SortedSet<java.io.Serializable> serializableSet12 = java.util.Collections.unmodifiableSortedSet(serializableSet10);
        java.util.TreeSet<java.io.Serializable> serializableSet13 = new java.util.TreeSet<java.io.Serializable>(serializableSet12);
        boolean boolean15 = serializableSet13.remove((java.lang.Object) (-1.0f));
        java.util.Comparator<? super java.io.Serializable> wildcardComparator16 = serializableSet13.comparator();
        boolean boolean17 = strSet3.remove((java.lang.Object) serializableSet13);
        java.util.Spliterator<java.lang.String> strSpliterator18 = strSet3.spliterator();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(serializableSet10);
        org.junit.Assert.assertNotNull(serializableIterableList11);
        org.junit.Assert.assertNotNull(serializableSet12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardComparator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strSpliterator18);
    }

    @Test
    public void test245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test245");
        java.util.SortedSet<java.lang.Iterable<java.io.Serializable>> serializableIterableSet0 = java.util.Collections.emptySortedSet();
        org.junit.Assert.assertNotNull(serializableIterableSet0);
    }

    @Test
    public void test246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test246");
        java.util.HashSet<java.lang.String> strSet1 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        strSet1.clear();
        java.util.Spliterator<java.lang.String> strSpliterator3 = strSet1.spliterator();
        boolean boolean5 = strSet1.add("hi!");
        java.lang.Object obj6 = strSet1.clone();
        org.junit.Assert.assertNotNull(strSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "[hi!]");
    }

    @Test
    public void test247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test247");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.util.ArrayList<java.io.Serializable> serializableList4 = new java.util.ArrayList<java.io.Serializable>((java.util.Collection<java.io.Serializable>) serializableSet2);
        java.util.TreeSet<java.lang.String> strSet5 = new java.util.TreeSet<java.lang.String>();
        java.util.SortedSet<java.io.Serializable> serializableSet6 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList7 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet6);
        java.util.SortedSet<java.io.Serializable> serializableSet8 = java.util.Collections.unmodifiableSortedSet(serializableSet6);
        boolean boolean9 = strSet5.removeAll((java.util.Collection<java.io.Serializable>) serializableSet8);
        java.util.ArrayList<java.io.Serializable> serializableList10 = new java.util.ArrayList<java.io.Serializable>((java.util.Collection<java.io.Serializable>) serializableSet8);
        java.util.Collections.copy((java.util.List<java.io.Serializable>) serializableList4, (java.util.List<java.io.Serializable>) serializableList10);
        java.lang.Class<java.io.Serializable> serializableClass12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collection<java.io.Serializable> serializableCollection13 = java.util.Collections.checkedCollection((java.util.Collection<java.io.Serializable>) serializableList4, serializableClass12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: type");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNotNull(serializableSet6);
        org.junit.Assert.assertNotNull(serializableIterableList7);
        org.junit.Assert.assertNotNull(serializableSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test248");
        java.util.HashSet<java.lang.String> strSet1 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        strSet1.clear();
        java.util.SortedSet<java.io.Serializable> serializableSet3 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList4 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet3);
        java.util.SortedSet<java.io.Serializable> serializableSet5 = java.util.Collections.unmodifiableSortedSet(serializableSet3);
        java.util.TreeSet<java.io.Serializable> serializableSet6 = new java.util.TreeSet<java.io.Serializable>(serializableSet5);
        java.io.Serializable serializable7 = serializableSet6.pollFirst();
        java.io.Serializable serializable9 = serializableSet6.ceiling((java.io.Serializable) 0.0d);
        java.io.Serializable serializable10 = serializableSet6.pollLast();
        boolean boolean11 = strSet1.remove((java.lang.Object) serializable10);
        strSet1.clear();
        java.util.SortedSet<java.io.Serializable> serializableSet13 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList14 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet13);
        java.util.SortedSet<java.io.Serializable> serializableSet15 = java.util.Collections.unmodifiableSortedSet(serializableSet13);
        java.util.TreeSet<java.io.Serializable> serializableSet16 = new java.util.TreeSet<java.io.Serializable>(serializableSet15);
        java.io.Serializable serializable17 = serializableSet16.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator18 = serializableSet16.comparator();
        java.util.NavigableSet<java.io.Serializable> serializableSet19 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet16);
        boolean boolean20 = strSet1.contains((java.lang.Object) serializableSet16);
        strSet1.clear();
        org.junit.Assert.assertNotNull(serializableSet3);
        org.junit.Assert.assertNotNull(serializableIterableList4);
        org.junit.Assert.assertNotNull(serializableSet5);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(serializableSet13);
        org.junit.Assert.assertNotNull(serializableIterableList14);
        org.junit.Assert.assertNotNull(serializableSet15);
        org.junit.Assert.assertNull(serializable17);
        org.junit.Assert.assertNull(wildcardComparator18);
        org.junit.Assert.assertNotNull(serializableSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test249");
        java.io.Serializable[] serializableArray38 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList39 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList39, serializableArray38);
        java.util.Collection<java.io.Serializable> serializableCollection41 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList39);
        java.lang.Object[] objArray42 = serializableList39.toArray();
        java.util.List<java.util.List<java.io.Serializable>> serializableListList43 = java.util.Collections.nCopies(0, (java.util.List<java.io.Serializable>) serializableList39);
        java.util.ArrayList<java.io.Serializable> serializableList44 = new java.util.ArrayList<java.io.Serializable>((java.util.Collection<java.io.Serializable>) serializableList39);
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet48 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet48, strArray47);
        boolean boolean51 = strSet48.equals((java.lang.Object) false);
        java.io.Serializable[] serializableArray87 = new java.io.Serializable[] { false, (-1), 'a', (-1.0f), "hi!", '#', '4', '4', '#', (byte) 10, 100, 1.0f, (byte) -1, (short) 0, '4', (-1.0d), (-1.0d), 'a', 'a', (short) 10, "hi!", (byte) -1, 0.0d, 1.0f, (-1.0d), 0.0d, 100L, 10.0f, '4', 1L, (-1), (-1L), 100, 0L, true };
        java.util.ArrayList<java.io.Serializable> serializableList88 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList88, serializableArray87);
        java.lang.Object obj90 = null;
        boolean boolean91 = serializableList88.equals(obj90);
        java.util.Collection<java.io.Serializable> serializableCollection92 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList88);
        boolean boolean93 = strSet48.contains((java.lang.Object) serializableList88);
        java.io.Serializable serializable95 = serializableList88.get((int) (byte) 10);
        java.util.Set<java.util.Collection<java.io.Serializable>> serializableCollectionSet96 = java.util.Collections.singleton((java.util.Collection<java.io.Serializable>) serializableList88);
        boolean boolean97 = serializableList39.removeAll((java.util.Collection<java.io.Serializable>) serializableList88);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable99 = serializableList39.remove(34);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 34 out of bounds for length 18");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(serializableCollection41);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertNotNull(serializableListList43);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(serializableArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(serializableCollection92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertEquals("'" + serializable95 + "' != '" + 100 + "'", serializable95, 100);
        org.junit.Assert.assertNotNull(serializableCollectionSet96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
    }

    @Test
    public void test250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test250");
        java.util.SortedMap<java.util.Enumeration<java.util.HashSet<java.lang.String>>, java.util.Iterator<java.io.Serializable>> strSetEnumerationMap0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.SortedMap<java.util.Enumeration<java.util.HashSet<java.lang.String>>, java.util.Iterator<java.io.Serializable>> strSetEnumerationMap1 = java.util.Collections.synchronizedSortedMap(strSetEnumerationMap0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test251");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean6 = strSet3.equals((java.lang.Object) false);
        boolean boolean7 = strSet3.isEmpty();
        boolean boolean9 = strSet3.equals((java.lang.Object) 10L);
        java.util.Iterator<java.lang.String> strItor10 = strSet3.iterator();
        java.util.SortedSet<java.io.Serializable> serializableSet11 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList12 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet11);
        java.util.SortedSet<java.io.Serializable> serializableSet13 = java.util.Collections.unmodifiableSortedSet(serializableSet11);
        java.util.TreeSet<java.io.Serializable> serializableSet14 = new java.util.TreeSet<java.io.Serializable>(serializableSet13);
        java.io.Serializable serializable15 = serializableSet14.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator16 = serializableSet14.comparator();
        java.util.NavigableSet<java.io.Serializable> serializableSet17 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet14);
        java.util.stream.Stream[][] streamArray18 = new java.util.stream.Stream[][] {};
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableSet14, streamArray18);
        java.util.Comparator<? super java.io.Serializable> wildcardComparator20 = serializableSet14.comparator();
        boolean boolean21 = strSet3.equals((java.lang.Object) serializableSet14);
        java.util.SortedMap<java.util.Enumeration<java.util.HashSet<java.lang.String>>, java.util.Iterator<java.io.Serializable>> strSetEnumerationMap22 = java.util.Collections.emptySortedMap();
        java.util.SortedMap<java.util.Enumeration<java.util.HashSet<java.lang.String>>, java.util.Iterator<java.io.Serializable>> strSetEnumerationMap23 = java.util.Collections.synchronizedSortedMap(strSetEnumerationMap22);
        boolean boolean24 = strSet3.remove((java.lang.Object) strSetEnumerationMap23);
        boolean boolean26 = strSet3.add("hi!");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strItor10);
        org.junit.Assert.assertNotNull(serializableSet11);
        org.junit.Assert.assertNotNull(serializableIterableList12);
        org.junit.Assert.assertNotNull(serializableSet13);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertNull(wildcardComparator16);
        org.junit.Assert.assertNotNull(serializableSet17);
        org.junit.Assert.assertNotNull(streamArray18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(wildcardComparator20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strSetEnumerationMap22);
        org.junit.Assert.assertNotNull(strSetEnumerationMap23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test252");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        boolean boolean6 = serializableSet3.isEmpty();
        serializableSet3.clear();
        java.util.Spliterator<java.io.Serializable> serializableSpliterator8 = serializableSet3.spliterator();
        java.io.Serializable serializable9 = serializableSet3.pollLast();
        java.util.SortedSet<java.io.Serializable> serializableSet10 = java.util.Collections.synchronizedSortedSet((java.util.SortedSet<java.io.Serializable>) serializableSet3);
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(serializableSpliterator8);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertNotNull(serializableSet10);
    }

    @Test
    public void test253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test253");
        java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.util.AbstractList<java.io.Serializable>> strSetMap0 = java.util.Collections.emptyNavigableMap();
        java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.util.AbstractList<java.io.Serializable>> strSetMap1 = java.util.Collections.synchronizedNavigableMap(strSetMap0);
        java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.util.AbstractList<java.io.Serializable>> strSetMap2 = java.util.Collections.synchronizedNavigableMap(strSetMap1);
        java.lang.Class<java.util.AbstractSet<java.lang.String>> strSetClass3 = null;
        java.lang.Class<java.util.AbstractList<java.io.Serializable>> serializableListClass4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.util.AbstractList<java.io.Serializable>> strSetMap5 = java.util.Collections.checkedNavigableMap(strSetMap2, strSetClass3, serializableListClass4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSetMap0);
        org.junit.Assert.assertNotNull(strSetMap1);
        org.junit.Assert.assertNotNull(strSetMap2);
    }

    @Test
    public void test254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test254");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        java.util.NavigableSet<java.io.Serializable> serializableSet6 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet3);
        java.util.ArrayList<java.io.Serializable> serializableList8 = new java.util.ArrayList<java.io.Serializable>(100);
        java.lang.String[] strArray12 = new java.lang.String[] { "", "", "hi!" };
        java.lang.Comparable<java.lang.String>[] strComparableArray13 = serializableList8.toArray((java.lang.Comparable<java.lang.String>[]) strArray12);
        java.util.Random random14 = null;
        java.util.Collections.shuffle((java.util.List<java.io.Serializable>) serializableList8, random14);
        java.io.Serializable serializable16 = serializableSet3.ceiling((java.io.Serializable) random14);
        java.util.Collection<java.io.Serializable> serializableCollection17 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableSet3);
        java.util.NavigableSet<java.io.Serializable> serializableSet18 = java.util.Collections.synchronizedNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet3);
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableSet6);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strComparableArray13);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertNotNull(serializableCollection17);
        org.junit.Assert.assertNotNull(serializableSet18);
    }

    @Test
    public void test255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test255");
        java.util.HashSet<java.lang.String> strSet1 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.lang.Object obj2 = null;
        boolean boolean3 = strSet1.contains(obj2);
        int int4 = strSet1.size();
        java.util.Spliterator<java.lang.String> strSpliterator5 = strSet1.spliterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(strSpliterator5);
    }

    @Test
    public void test256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test256");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.HashSet<java.util.ListIterator<java.io.Serializable>> serializableItorSet6 = new java.util.HashSet<java.util.ListIterator<java.io.Serializable>>((int) '4');
        java.util.NavigableSet<java.io.Serializable> serializableSet8 = serializableSet3.tailSet((java.io.Serializable) '4', true);
        java.util.Collection<java.io.Serializable> serializableCollection9 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableSet8);
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(serializableSet8);
        org.junit.Assert.assertNotNull(serializableCollection9);
    }

    @Test
    public void test257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test257");
        java.util.ListIterator<java.lang.Iterable<java.io.Serializable>> serializableIterableItor0 = java.util.Collections.emptyListIterator();
        org.junit.Assert.assertNotNull(serializableIterableItor0);
    }

    @Test
    public void test258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test258");
        java.util.Iterator<java.util.Map<java.lang.Comparable<java.lang.String>, java.util.Comparator<java.lang.CharSequence>>> strComparableMapItor0 = java.util.Collections.emptyIterator();
        org.junit.Assert.assertNotNull(strComparableMapItor0);
    }

    @Test
    public void test259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test259");
        java.util.Comparator<java.lang.CharSequence> charSequenceComparator0 = null;
        java.util.TreeSet<java.lang.CharSequence> charSequenceSet1 = new java.util.TreeSet<java.lang.CharSequence>(charSequenceComparator0);
    }

    @Test
    public void test260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test260");
        java.util.ArrayList<java.io.Serializable> serializableList1 = new java.util.ArrayList<java.io.Serializable>(100);
        serializableList1.clear();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration3 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableList1);
        java.util.SortedSet<java.io.Serializable> serializableSet5 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList6 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet5);
        java.util.SortedSet<java.io.Serializable> serializableSet7 = java.util.Collections.unmodifiableSortedSet(serializableSet5);
        java.util.TreeSet<java.io.Serializable> serializableSet8 = new java.util.TreeSet<java.io.Serializable>(serializableSet7);
        java.io.Serializable serializable9 = serializableSet8.pollFirst();
        java.io.Serializable serializable11 = serializableSet8.ceiling((java.io.Serializable) 0.0d);
        java.util.Comparator<? super java.io.Serializable> wildcardComparator12 = serializableSet8.comparator();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        boolean boolean19 = strSet16.equals((java.lang.Object) false);
        java.io.Serializable serializable20 = serializableSet8.lower((java.io.Serializable) strSet16);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable21 = serializableList1.set((int) 'a', (java.io.Serializable) strSet16);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 97 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableEnumeration3);
        org.junit.Assert.assertNotNull(serializableSet5);
        org.junit.Assert.assertNotNull(serializableIterableList6);
        org.junit.Assert.assertNotNull(serializableSet7);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(wildcardComparator12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(serializable20);
    }

    @Test
    public void test261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test261");
        java.util.Map<java.lang.reflect.Type, java.util.ArrayList<java.io.Serializable>> typeMap0 = java.util.Collections.emptyMap();
        org.junit.Assert.assertNotNull(typeMap0);
    }

    @Test
    public void test262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test262");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        java.util.NavigableSet<java.io.Serializable> serializableSet6 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet3);
        java.util.ArrayList<java.io.Serializable> serializableList8 = new java.util.ArrayList<java.io.Serializable>(100);
        java.lang.String[] strArray12 = new java.lang.String[] { "", "", "hi!" };
        java.lang.Comparable<java.lang.String>[] strComparableArray13 = serializableList8.toArray((java.lang.Comparable<java.lang.String>[]) strArray12);
        java.util.Random random14 = null;
        java.util.Collections.shuffle((java.util.List<java.io.Serializable>) serializableList8, random14);
        java.io.Serializable serializable16 = serializableSet3.ceiling((java.io.Serializable) random14);
        java.util.Collection<java.io.Serializable> serializableCollection17 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableSet3);
        java.util.ArrayList<java.io.Serializable> serializableList18 = new java.util.ArrayList<java.io.Serializable>((java.util.Collection<java.io.Serializable>) serializableSet3);
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableSet6);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strComparableArray13);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertNotNull(serializableCollection17);
    }

    @Test
    public void test263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test263");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        serializableSet3.clear();
        java.util.Iterator<java.io.Serializable> serializableItor7 = serializableSet3.descendingIterator();
        java.util.Iterator<java.io.Serializable> serializableItor8 = serializableSet3.iterator();
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableItor7);
        org.junit.Assert.assertNotNull(serializableItor8);
    }

    @Test
    public void test264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test264");
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList41 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList41, serializableArray40);
        java.util.Collection<java.io.Serializable> serializableCollection43 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList41);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] { 'a', 10, 100, serializableList41, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList51 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList51, serializableArray50);
        boolean boolean55 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList51, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.Map<java.io.Serializable, java.lang.Object> serializableMap58 = java.util.Collections.singletonMap((java.io.Serializable) (short) 1, (java.lang.Object) (short) 1);
        int int59 = serializableList51.lastIndexOf((java.lang.Object) (short) 1);
        serializableList51.clear();
        java.util.SortedSet<java.io.Serializable> serializableSet61 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList62 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet61);
        java.util.SortedSet<java.io.Serializable> serializableSet63 = java.util.Collections.unmodifiableSortedSet(serializableSet61);
        java.util.TreeSet<java.io.Serializable> serializableSet64 = new java.util.TreeSet<java.io.Serializable>(serializableSet63);
        java.io.Serializable serializable65 = serializableSet64.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator66 = serializableSet64.comparator();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration67 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableSet64);
        java.util.SortedSet<java.io.Serializable> serializableSet68 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList69 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet68);
        java.util.SortedSet<java.io.Serializable> serializableSet70 = java.util.Collections.unmodifiableSortedSet(serializableSet68);
        java.util.TreeSet<java.io.Serializable> serializableSet71 = new java.util.TreeSet<java.io.Serializable>(serializableSet70);
        java.io.Serializable serializable72 = serializableSet71.pollFirst();
        java.util.HashSet<java.util.ListIterator<java.io.Serializable>> serializableItorSet74 = new java.util.HashSet<java.util.ListIterator<java.io.Serializable>>((int) '4');
        java.util.NavigableSet<java.io.Serializable> serializableSet76 = serializableSet71.tailSet((java.io.Serializable) '4', true);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator77 = serializableSet71.spliterator();
        boolean boolean78 = serializableSet64.addAll((java.util.Collection<java.io.Serializable>) serializableSet71);
        java.util.SortedSet<java.io.Serializable> serializableSet79 = java.util.Collections.synchronizedSortedSet((java.util.SortedSet<java.io.Serializable>) serializableSet64);
        boolean boolean80 = serializableList51.retainAll((java.util.Collection<java.io.Serializable>) serializableSet64);
        java.lang.Class<java.io.Serializable> serializableClass81 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.NavigableSet<java.io.Serializable> serializableSet82 = java.util.Collections.checkedNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet64, serializableClass81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: type");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(serializableCollection43);
        org.junit.Assert.assertNotNull(serializableArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(serializableMap58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(serializableSet61);
        org.junit.Assert.assertNotNull(serializableIterableList62);
        org.junit.Assert.assertNotNull(serializableSet63);
        org.junit.Assert.assertNull(serializable65);
        org.junit.Assert.assertNull(wildcardComparator66);
        org.junit.Assert.assertNotNull(serializableEnumeration67);
        org.junit.Assert.assertNotNull(serializableSet68);
        org.junit.Assert.assertNotNull(serializableIterableList69);
        org.junit.Assert.assertNotNull(serializableSet70);
        org.junit.Assert.assertNull(serializable72);
        org.junit.Assert.assertNotNull(serializableSet76);
        org.junit.Assert.assertNotNull(serializableSpliterator77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(serializableSet79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test265");
        java.util.Enumeration<java.util.HashSet<java.lang.String>> strSetEnumeration0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.util.HashSet<java.lang.String>> strSetList1 = java.util.Collections.list(strSetEnumeration0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test266");
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList41 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList41, serializableArray40);
        java.util.Collection<java.io.Serializable> serializableCollection43 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList41);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] { 'a', 10, 100, serializableList41, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList51 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList51, serializableArray50);
        boolean boolean55 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList51, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        serializableList51.add(10, (java.io.Serializable) '#');
        java.io.Serializable serializable60 = serializableList51.remove(0);
        java.util.Set<java.util.List<java.io.Serializable>> serializableListSet61 = java.util.Collections.singleton((java.util.List<java.io.Serializable>) serializableList51);
        int int62 = serializableList51.size();
        org.junit.Assert.assertNotNull(serializableArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(serializableCollection43);
        org.junit.Assert.assertNotNull(serializableArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + serializable60 + "' != '" + 'a' + "'", serializable60, 'a');
        org.junit.Assert.assertNotNull(serializableListSet61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 10 + "'", int62 == 10);
    }

    @Test
    public void test267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test267");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        serializableSet3.clear();
        java.util.SortedSet<java.io.Serializable> serializableSet7 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList8 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet7);
        java.util.SortedSet<java.io.Serializable> serializableSet9 = java.util.Collections.unmodifiableSortedSet(serializableSet7);
        java.util.TreeSet<java.io.Serializable> serializableSet10 = new java.util.TreeSet<java.io.Serializable>(serializableSet9);
        java.io.Serializable serializable11 = serializableSet10.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator12 = serializableSet10.comparator();
        boolean boolean13 = serializableSet10.isEmpty();
        serializableSet10.clear();
        java.io.Serializable serializable15 = serializableSet10.pollFirst();
        java.util.SortedSet<java.io.Serializable> serializableSet16 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList17 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet16);
        java.util.SortedSet<java.io.Serializable> serializableSet18 = java.util.Collections.unmodifiableSortedSet(serializableSet16);
        java.util.TreeSet<java.io.Serializable> serializableSet19 = new java.util.TreeSet<java.io.Serializable>(serializableSet18);
        boolean boolean21 = serializableSet19.remove((java.lang.Object) (-1.0f));
        java.io.Serializable serializable22 = serializableSet19.pollLast();
        boolean boolean23 = serializableSet10.containsAll((java.util.Collection<java.io.Serializable>) serializableSet19);
        java.util.TreeSet<java.io.Serializable> serializableSet24 = new java.util.TreeSet<java.io.Serializable>((java.util.SortedSet<java.io.Serializable>) serializableSet10);
        // The following exception was thrown during execution in test generation
        try {
            java.util.SortedSet<java.io.Serializable> serializableSet25 = serializableSet3.headSet((java.io.Serializable) serializableSet24);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class java.util.TreeSet cannot be cast to class java.lang.Comparable (java.util.TreeSet and java.lang.Comparable are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableSet7);
        org.junit.Assert.assertNotNull(serializableIterableList8);
        org.junit.Assert.assertNotNull(serializableSet9);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(wildcardComparator12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertNotNull(serializableSet16);
        org.junit.Assert.assertNotNull(serializableIterableList17);
        org.junit.Assert.assertNotNull(serializableSet18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(serializable22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test268");
        java.util.Set<java.util.SortedSet<java.io.Serializable>[]> serializableSetArraySet0 = java.util.Collections.emptySet();
        org.junit.Assert.assertNotNull(serializableSetArraySet0);
    }

    @Test
    public void test269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test269");
        java.util.ArrayList<java.io.Serializable> serializableList1 = new java.util.ArrayList<java.io.Serializable>(100);
        serializableList1.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.io.Serializable> serializableItor4 = serializableList1.listIterator((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test270");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration6 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableSet3);
        java.util.NavigableSet<java.io.Serializable> serializableSet9 = serializableSet3.tailSet((java.io.Serializable) 100L, true);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator10 = serializableSet3.spliterator();
        java.util.SortedSet<java.io.Serializable> serializableSet11 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList12 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet11);
        java.util.SortedSet<java.io.Serializable> serializableSet13 = java.util.Collections.unmodifiableSortedSet(serializableSet11);
        java.util.TreeSet<java.io.Serializable> serializableSet14 = new java.util.TreeSet<java.io.Serializable>(serializableSet13);
        java.io.Serializable serializable15 = serializableSet14.pollFirst();
        java.util.HashSet<java.util.ListIterator<java.io.Serializable>> serializableItorSet17 = new java.util.HashSet<java.util.ListIterator<java.io.Serializable>>((int) '4');
        java.util.NavigableSet<java.io.Serializable> serializableSet19 = serializableSet14.tailSet((java.io.Serializable) '4', true);
        java.util.SortedSet<java.io.Serializable> serializableSet21 = serializableSet14.headSet((java.io.Serializable) (short) 0);
        java.util.SortedSet<java.io.Serializable> serializableSet22 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList23 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet22);
        java.util.SortedSet<java.io.Serializable> serializableSet24 = java.util.Collections.unmodifiableSortedSet(serializableSet22);
        java.util.TreeSet<java.io.Serializable> serializableSet25 = new java.util.TreeSet<java.io.Serializable>(serializableSet24);
        java.io.Serializable serializable26 = serializableSet25.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator27 = serializableSet25.comparator();
        serializableSet25.clear();
        java.util.NavigableSet<java.io.Serializable> serializableSet29 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet25);
        boolean boolean30 = serializableSet14.addAll((java.util.Collection<java.io.Serializable>) serializableSet29);
        java.util.NavigableSet<java.io.Serializable> serializableSet31 = java.util.Collections.synchronizedNavigableSet(serializableSet29);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean32 = serializableSet3.remove((java.lang.Object) serializableSet31);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class java.util.Collections$SynchronizedNavigableSet cannot be cast to class java.lang.Comparable (java.util.Collections$SynchronizedNavigableSet and java.lang.Comparable are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableEnumeration6);
        org.junit.Assert.assertNotNull(serializableSet9);
        org.junit.Assert.assertNotNull(serializableSpliterator10);
        org.junit.Assert.assertNotNull(serializableSet11);
        org.junit.Assert.assertNotNull(serializableIterableList12);
        org.junit.Assert.assertNotNull(serializableSet13);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertNotNull(serializableSet19);
        org.junit.Assert.assertNotNull(serializableSet21);
        org.junit.Assert.assertNotNull(serializableSet22);
        org.junit.Assert.assertNotNull(serializableIterableList23);
        org.junit.Assert.assertNotNull(serializableSet24);
        org.junit.Assert.assertNull(serializable26);
        org.junit.Assert.assertNull(wildcardComparator27);
        org.junit.Assert.assertNotNull(serializableSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(serializableSet31);
    }

    @Test
    public void test271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test271");
        java.util.ListIterator<java.util.RandomAccess> randomAccessItor0 = java.util.Collections.emptyListIterator();
        org.junit.Assert.assertNotNull(randomAccessItor0);
    }

    @Test
    public void test272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test272");
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList41 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList41, serializableArray40);
        java.util.Collection<java.io.Serializable> serializableCollection43 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList41);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] { 'a', 10, 100, serializableList41, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList51 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList51, serializableArray50);
        boolean boolean55 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList51, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.Map<java.io.Serializable, java.lang.Object> serializableMap58 = java.util.Collections.singletonMap((java.io.Serializable) (short) 1, (java.lang.Object) (short) 1);
        int int59 = serializableList51.lastIndexOf((java.lang.Object) (short) 1);
        serializableList51.clear();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration61 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableList51);
        java.util.Random random62 = null;
        java.util.Collections.shuffle((java.util.List<java.io.Serializable>) serializableList51, random62);
        serializableList51.trimToSize();
        java.util.Random random65 = null;
        java.util.Collections.shuffle((java.util.List<java.io.Serializable>) serializableList51, random65);
        java.util.ArrayList<java.io.Serializable> serializableList67 = new java.util.ArrayList<java.io.Serializable>((java.util.Collection<java.io.Serializable>) serializableList51);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable69 = serializableList51.get(35);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 35 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(serializableCollection43);
        org.junit.Assert.assertNotNull(serializableArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(serializableMap58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(serializableEnumeration61);
    }

    @Test
    public void test273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test273");
        java.util.Map<java.util.stream.BaseStream<java.io.Serializable, java.util.stream.Stream<java.io.Serializable>>, java.util.RandomAccess> serializableBaseStreamMap0 = java.util.Collections.emptyMap();
        org.junit.Assert.assertNotNull(serializableBaseStreamMap0);
    }

    @Test
    public void test274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test274");
        java.util.NavigableMap<java.util.ListIterator<java.io.Serializable>, java.util.RandomAccess> serializableItorMap0 = java.util.Collections.emptyNavigableMap();
        org.junit.Assert.assertNotNull(serializableItorMap0);
    }

    @Test
    public void test275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test275");
        java.util.ArrayList<java.io.Serializable> serializableList1 = new java.util.ArrayList<java.io.Serializable>((int) '4');
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet5 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet5, strArray4);
        boolean boolean8 = strSet5.equals((java.lang.Object) false);
        java.io.Serializable[] serializableArray44 = new java.io.Serializable[] { false, (-1), 'a', (-1.0f), "hi!", '#', '4', '4', '#', (byte) 10, 100, 1.0f, (byte) -1, (short) 0, '4', (-1.0d), (-1.0d), 'a', 'a', (short) 10, "hi!", (byte) -1, 0.0d, 1.0f, (-1.0d), 0.0d, 100L, 10.0f, '4', 1L, (-1), (-1L), 100, 0L, true };
        java.util.ArrayList<java.io.Serializable> serializableList45 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList45, serializableArray44);
        java.lang.Object obj47 = null;
        boolean boolean48 = serializableList45.equals(obj47);
        java.util.Collection<java.io.Serializable> serializableCollection49 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList45);
        boolean boolean50 = strSet5.contains((java.lang.Object) serializableList45);
        boolean boolean51 = serializableList45.isEmpty();
        boolean boolean52 = serializableList1.remove((java.lang.Object) boolean51);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(serializableArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(serializableCollection49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test276");
        java.util.HashSet<java.lang.String> strSet1 = new java.util.HashSet<java.lang.String>(1);
    }

    @Test
    public void test277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test277");
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.reflect.Type> typeList1 = new java.util.ArrayList<java.lang.reflect.Type>((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal Capacity: -1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test278");
        java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.util.AbstractList<java.io.Serializable>> strSetMap0 = java.util.Collections.emptyNavigableMap();
        java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.util.AbstractList<java.io.Serializable>> strSetMap1 = java.util.Collections.synchronizedNavigableMap(strSetMap0);
        java.lang.Class<java.util.AbstractSet<java.lang.String>> strSetClass2 = null;
        java.lang.Class<java.util.AbstractList<java.io.Serializable>> serializableListClass3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.util.AbstractList<java.io.Serializable>> strSetMap4 = java.util.Collections.checkedNavigableMap(strSetMap1, strSetClass2, serializableListClass3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSetMap0);
        org.junit.Assert.assertNotNull(strSetMap1);
    }

    @Test
    public void test279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test279");
        java.util.ArrayList<java.io.Serializable> serializableList1 = new java.util.ArrayList<java.io.Serializable>(100);
        java.util.Collection<java.io.Serializable> serializableCollection2 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList1);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable4 = serializableList1.get((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableCollection2);
    }

    @Test
    public void test280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test280");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.HashSet<java.lang.String> strSet2 = new java.util.HashSet<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet2, strArray1);
        strSet2.clear();
        java.util.Iterator<java.lang.String> strItor5 = strSet2.iterator();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strItor5);
    }

    @Test
    public void test281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test281");
        java.util.HashSet<java.lang.String> strSet1 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        strSet1.clear();
        java.util.SortedSet<java.io.Serializable> serializableSet3 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList4 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet3);
        java.util.SortedSet<java.io.Serializable> serializableSet5 = java.util.Collections.unmodifiableSortedSet(serializableSet3);
        java.util.TreeSet<java.io.Serializable> serializableSet6 = new java.util.TreeSet<java.io.Serializable>(serializableSet5);
        java.io.Serializable serializable7 = serializableSet6.pollFirst();
        java.io.Serializable serializable9 = serializableSet6.ceiling((java.io.Serializable) 0.0d);
        java.io.Serializable serializable10 = serializableSet6.pollLast();
        boolean boolean11 = strSet1.remove((java.lang.Object) serializable10);
        strSet1.clear();
        java.util.SortedSet<java.io.Serializable> serializableSet13 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList14 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet13);
        java.util.SortedSet<java.io.Serializable> serializableSet15 = java.util.Collections.unmodifiableSortedSet(serializableSet13);
        java.util.TreeSet<java.io.Serializable> serializableSet16 = new java.util.TreeSet<java.io.Serializable>(serializableSet15);
        java.io.Serializable serializable17 = serializableSet16.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator18 = serializableSet16.comparator();
        java.util.NavigableSet<java.io.Serializable> serializableSet19 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet16);
        boolean boolean20 = strSet1.contains((java.lang.Object) serializableSet16);
        serializableSet16.clear();
        org.junit.Assert.assertNotNull(serializableSet3);
        org.junit.Assert.assertNotNull(serializableIterableList4);
        org.junit.Assert.assertNotNull(serializableSet5);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(serializableSet13);
        org.junit.Assert.assertNotNull(serializableIterableList14);
        org.junit.Assert.assertNotNull(serializableSet15);
        org.junit.Assert.assertNull(serializable17);
        org.junit.Assert.assertNull(wildcardComparator18);
        org.junit.Assert.assertNotNull(serializableSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test282");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        java.util.Iterator<java.io.Serializable> serializableItor6 = serializableSet3.descendingIterator();
        java.lang.String[] strArray8 = new java.lang.String[] { "" };
        java.util.HashSet<java.lang.String> strSet9 = new java.util.HashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = strSet9.remove(obj11);
        java.util.SortedSet<java.io.Serializable> serializableSet13 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList14 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet13);
        java.util.SortedSet<java.io.Serializable> serializableSet15 = java.util.Collections.unmodifiableSortedSet(serializableSet13);
        java.util.TreeSet<java.io.Serializable> serializableSet16 = new java.util.TreeSet<java.io.Serializable>(serializableSet15);
        boolean boolean18 = serializableSet16.remove((java.lang.Object) (-1.0f));
        java.io.Serializable serializable19 = serializableSet16.pollLast();
        java.util.SortedSet<java.io.Serializable> serializableSet20 = java.util.Collections.unmodifiableSortedSet((java.util.SortedSet<java.io.Serializable>) serializableSet16);
        boolean boolean21 = strSet9.remove((java.lang.Object) serializableSet16);
        boolean boolean22 = serializableSet3.containsAll((java.util.Collection<java.io.Serializable>) serializableSet16);
        java.util.Iterator<java.io.Serializable> serializableItor23 = serializableSet3.descendingIterator();
        java.util.Spliterator<java.io.Serializable> serializableSpliterator24 = serializableSet3.spliterator();
        java.lang.Class<?> wildcardClass25 = serializableSet3.getClass();
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableItor6);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(serializableSet13);
        org.junit.Assert.assertNotNull(serializableIterableList14);
        org.junit.Assert.assertNotNull(serializableSet15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(serializable19);
        org.junit.Assert.assertNotNull(serializableSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(serializableItor23);
        org.junit.Assert.assertNotNull(serializableSpliterator24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test283");
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList41 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList41, serializableArray40);
        java.util.Collection<java.io.Serializable> serializableCollection43 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList41);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] { 'a', 10, 100, serializableList41, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList51 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList51, serializableArray50);
        boolean boolean55 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList51, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator56 = serializableList51.spliterator();
        serializableList51.clear();
        java.util.Collections.rotate((java.util.List<java.io.Serializable>) serializableList51, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable61 = serializableList51.remove(34);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 34 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(serializableCollection43);
        org.junit.Assert.assertNotNull(serializableArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(serializableSpliterator56);
    }

    @Test
    public void test284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test284");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.HashSet<java.util.ListIterator<java.io.Serializable>> serializableItorSet6 = new java.util.HashSet<java.util.ListIterator<java.io.Serializable>>((int) '4');
        java.util.NavigableSet<java.io.Serializable> serializableSet8 = serializableSet3.tailSet((java.io.Serializable) '4', true);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable9 = serializableSet3.first();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(serializableSet8);
    }

    @Test
    public void test285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test285");
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList41 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList41, serializableArray40);
        java.util.Collection<java.io.Serializable> serializableCollection43 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList41);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] { 'a', 10, 100, serializableList41, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList51 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList51, serializableArray50);
        boolean boolean55 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList51, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.ListIterator<java.io.Serializable> serializableItor56 = serializableList51.listIterator();
        java.util.List<java.util.Collection<java.io.Serializable>> serializableCollectionList57 = java.util.Collections.emptyList();
        int int58 = serializableList51.lastIndexOf((java.lang.Object) serializableCollectionList57);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections.swap((java.util.List<java.io.Serializable>) serializableList51, 10, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(serializableCollection43);
        org.junit.Assert.assertNotNull(serializableArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(serializableItor56);
        org.junit.Assert.assertNotNull(serializableCollectionList57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
    }

    @Test
    public void test286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test286");
        java.util.ArrayList<java.io.Serializable> serializableList1 = new java.util.ArrayList<java.io.Serializable>(100);
        java.util.Collection<java.io.Serializable> serializableCollection2 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList1);
        java.util.SortedSet<java.io.Serializable> serializableSet3 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList4 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet3);
        java.util.SortedSet<java.io.Serializable> serializableSet5 = java.util.Collections.unmodifiableSortedSet(serializableSet3);
        java.util.TreeSet<java.io.Serializable> serializableSet6 = new java.util.TreeSet<java.io.Serializable>(serializableSet5);
        boolean boolean8 = serializableSet6.remove((java.lang.Object) (-1.0f));
        java.util.Comparator<? super java.io.Serializable> wildcardComparator9 = serializableSet6.comparator();
        java.util.SortedSet<java.io.Serializable> serializableSet10 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList11 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet10);
        java.util.SortedSet<java.io.Serializable> serializableSet12 = java.util.Collections.unmodifiableSortedSet(serializableSet10);
        java.util.TreeSet<java.io.Serializable> serializableSet13 = new java.util.TreeSet<java.io.Serializable>(serializableSet12);
        java.io.Serializable serializable14 = serializableSet13.pollFirst();
        java.util.HashSet<java.util.ListIterator<java.io.Serializable>> serializableItorSet16 = new java.util.HashSet<java.util.ListIterator<java.io.Serializable>>((int) '4');
        java.util.NavigableSet<java.io.Serializable> serializableSet18 = serializableSet13.tailSet((java.io.Serializable) '4', true);
        java.util.SortedSet<java.io.Serializable> serializableSet20 = serializableSet13.headSet((java.io.Serializable) (short) 0);
        int int21 = java.util.Collections.frequency((java.util.Collection<java.io.Serializable>) serializableSet6, (java.lang.Object) serializableSet20);
        java.util.Set<java.io.Serializable> serializableSet22 = java.util.Collections.synchronizedSet((java.util.Set<java.io.Serializable>) serializableSet6);
        boolean boolean23 = java.util.Collections.disjoint((java.util.Collection<java.io.Serializable>) serializableList1, (java.util.Collection<java.io.Serializable>) serializableSet6);
        java.util.ArrayList<java.io.Serializable> serializableList25 = new java.util.ArrayList<java.io.Serializable>(100);
        java.util.Collection<java.io.Serializable> serializableCollection26 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList25);
        boolean boolean27 = serializableSet6.addAll(serializableCollection26);
        org.junit.Assert.assertNotNull(serializableCollection2);
        org.junit.Assert.assertNotNull(serializableSet3);
        org.junit.Assert.assertNotNull(serializableIterableList4);
        org.junit.Assert.assertNotNull(serializableSet5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardComparator9);
        org.junit.Assert.assertNotNull(serializableSet10);
        org.junit.Assert.assertNotNull(serializableIterableList11);
        org.junit.Assert.assertNotNull(serializableSet12);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNotNull(serializableSet18);
        org.junit.Assert.assertNotNull(serializableSet20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(serializableSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(serializableCollection26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test287");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean6 = strSet3.equals((java.lang.Object) false);
        boolean boolean7 = strSet3.isEmpty();
        boolean boolean9 = strSet3.equals((java.lang.Object) 10L);
        int int10 = strSet3.size();
        java.util.Iterator<java.lang.String> strItor11 = strSet3.iterator();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(strItor11);
    }

    @Test
    public void test288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test288");
        java.util.HashSet<java.lang.String> strSet1 = new java.util.HashSet<java.lang.String>(10);
        java.util.Spliterator<java.lang.String> strSpliterator2 = strSet1.spliterator();
        org.junit.Assert.assertNotNull(strSpliterator2);
    }

    @Test
    public void test289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test289");
        java.io.Serializable[] serializableArray38 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList39 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList39, serializableArray38);
        java.util.Collection<java.io.Serializable> serializableCollection41 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList39);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator42 = serializableList39.spliterator();
        java.util.List<java.util.Spliterator<java.io.Serializable>> serializableSpliteratorList43 = java.util.Collections.nCopies((int) ' ', serializableSpliterator42);
        org.junit.Assert.assertNotNull(serializableArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(serializableCollection41);
        org.junit.Assert.assertNotNull(serializableSpliterator42);
        org.junit.Assert.assertNotNull(serializableSpliteratorList43);
    }

    @Test
    public void test290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test290");
        java.io.Serializable[] serializableArray35 = new java.io.Serializable[] { false, (-1), 'a', (-1.0f), "hi!", '#', '4', '4', '#', (byte) 10, 100, 1.0f, (byte) -1, (short) 0, '4', (-1.0d), (-1.0d), 'a', 'a', (short) 10, "hi!", (byte) -1, 0.0d, 1.0f, (-1.0d), 0.0d, 100L, 10.0f, '4', 1L, (-1), (-1L), 100, 0L, true };
        java.util.ArrayList<java.io.Serializable> serializableList36 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList36, serializableArray35);
        java.lang.Object obj38 = null;
        boolean boolean39 = serializableList36.equals(obj38);
        java.util.ListIterator<java.io.Serializable> serializableItor40 = serializableList36.listIterator();
        java.lang.Object[] objArray41 = serializableList36.toArray();
        org.junit.Assert.assertNotNull(serializableArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(serializableItor40);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[false, -1, a, -1.0, hi!, #, 4, 4, #, 10, 100, 1.0, -1, 0, 4, -1.0, -1.0, a, a, 10, hi!, -1, 0.0, 1.0, -1.0, 0.0, 100, 10.0, 4, 1, -1, -1, 100, 0, true]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[false, -1, a, -1.0, hi!, #, 4, 4, #, 10, 100, 1.0, -1, 0, 4, -1.0, -1.0, a, a, 10, hi!, -1, 0.0, 1.0, -1.0, 0.0, 100, 10.0, 4, 1, -1, -1, 100, 0, true]");
    }

    @Test
    public void test291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test291");
        java.util.ArrayList<java.io.Serializable> serializableList1 = new java.util.ArrayList<java.io.Serializable>(100);
        java.lang.String[] strArray5 = new java.lang.String[] { "", "", "hi!" };
        java.lang.Comparable<java.lang.String>[] strComparableArray6 = serializableList1.toArray((java.lang.Comparable<java.lang.String>[]) strArray5);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.Serializable> serializableList9 = serializableList1.subList((int) (byte) 100, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strComparableArray6);
    }

    @Test
    public void test292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test292");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        boolean boolean6 = serializableSet3.isEmpty();
        serializableSet3.clear();
        java.io.Serializable serializable8 = serializableSet3.pollFirst();
        java.util.SortedSet<java.io.Serializable> serializableSet9 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList10 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet9);
        java.util.SortedSet<java.io.Serializable> serializableSet11 = java.util.Collections.unmodifiableSortedSet(serializableSet9);
        java.util.TreeSet<java.io.Serializable> serializableSet12 = new java.util.TreeSet<java.io.Serializable>(serializableSet11);
        boolean boolean14 = serializableSet12.remove((java.lang.Object) (-1.0f));
        java.io.Serializable serializable15 = serializableSet12.pollLast();
        boolean boolean16 = serializableSet3.containsAll((java.util.Collection<java.io.Serializable>) serializableSet12);
        java.io.Serializable[] serializableArray54 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList55 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList55, serializableArray54);
        java.util.Collection<java.io.Serializable> serializableCollection57 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList55);
        java.lang.Object[] objArray58 = serializableList55.toArray();
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet63 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet63, strArray62);
        boolean boolean66 = strSet63.equals((java.lang.Object) false);
        int int67 = strSet63.size();
        java.io.Serializable serializable68 = serializableList55.set((int) '#', (java.io.Serializable) strSet63);
        java.util.SortedSet<java.io.Serializable> serializableSet69 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList70 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet69);
        java.util.SortedSet<java.io.Serializable> serializableSet71 = java.util.Collections.unmodifiableSortedSet(serializableSet69);
        java.util.TreeSet<java.io.Serializable> serializableSet72 = new java.util.TreeSet<java.io.Serializable>(serializableSet71);
        boolean boolean74 = serializableSet72.remove((java.lang.Object) (-1.0f));
        java.io.Serializable serializable75 = serializableSet72.pollLast();
        java.util.SortedSet<java.io.Serializable> serializableSet76 = java.util.Collections.unmodifiableSortedSet((java.util.SortedSet<java.io.Serializable>) serializableSet72);
        boolean boolean77 = serializableList55.addAll((java.util.Collection<java.io.Serializable>) serializableSet72);
        java.io.Serializable serializable78 = serializableSet12.higher((java.io.Serializable) serializableList55);
        java.util.SortedSet<java.io.Serializable> serializableSet79 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList80 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet79);
        java.util.SortedSet<java.io.Serializable> serializableSet81 = java.util.Collections.unmodifiableSortedSet(serializableSet79);
        java.util.TreeSet<java.io.Serializable> serializableSet82 = new java.util.TreeSet<java.io.Serializable>(serializableSet81);
        java.io.Serializable serializable83 = serializableSet82.pollFirst();
        java.util.HashSet<java.util.ListIterator<java.io.Serializable>> serializableItorSet85 = new java.util.HashSet<java.util.ListIterator<java.io.Serializable>>((int) '4');
        java.util.NavigableSet<java.io.Serializable> serializableSet87 = serializableSet82.tailSet((java.io.Serializable) '4', true);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator88 = serializableSet82.spliterator();
        int int89 = java.util.Collections.frequency((java.util.Collection<java.io.Serializable>) serializableSet12, (java.lang.Object) serializableSpliterator88);
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(serializableSet9);
        org.junit.Assert.assertNotNull(serializableIterableList10);
        org.junit.Assert.assertNotNull(serializableSet11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(serializableArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(serializableCollection57);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertEquals("'" + serializable68 + "' != '" + (byte) -1 + "'", serializable68, (byte) -1);
        org.junit.Assert.assertNotNull(serializableSet69);
        org.junit.Assert.assertNotNull(serializableIterableList70);
        org.junit.Assert.assertNotNull(serializableSet71);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(serializable75);
        org.junit.Assert.assertNotNull(serializableSet76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(serializable78);
        org.junit.Assert.assertNotNull(serializableSet79);
        org.junit.Assert.assertNotNull(serializableIterableList80);
        org.junit.Assert.assertNotNull(serializableSet81);
        org.junit.Assert.assertNull(serializable83);
        org.junit.Assert.assertNotNull(serializableSet87);
        org.junit.Assert.assertNotNull(serializableSpliterator88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
    }

    @Test
    public void test293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test293");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        serializableSet3.clear();
        java.lang.Class<java.io.Serializable> serializableClass7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.NavigableSet<java.io.Serializable> serializableSet8 = java.util.Collections.checkedNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet3, serializableClass7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: type");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
    }

    @Test
    public void test294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test294");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration6 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableSet3);
        java.util.NavigableSet<java.io.Serializable> serializableSet9 = serializableSet3.tailSet((java.io.Serializable) 100L, true);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator10 = serializableSet3.spliterator();
        java.lang.Class<java.io.Serializable> serializableClass11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.io.Serializable> serializableSet12 = java.util.Collections.checkedSet((java.util.Set<java.io.Serializable>) serializableSet3, serializableClass11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: type");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableEnumeration6);
        org.junit.Assert.assertNotNull(serializableSet9);
        org.junit.Assert.assertNotNull(serializableSpliterator10);
    }

    @Test
    public void test295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test295");
        java.util.SortedMap<java.lang.Object[], java.util.TreeSet<java.io.Serializable>> objArrayMap0 = java.util.Collections.emptySortedMap();
        org.junit.Assert.assertNotNull(objArrayMap0);
    }

    @Test
    public void test296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test296");
        java.util.ArrayList<java.io.Serializable> serializableList1 = new java.util.ArrayList<java.io.Serializable>(100);
        java.lang.String[] strArray5 = new java.lang.String[] { "", "", "hi!" };
        java.lang.Comparable<java.lang.String>[] strComparableArray6 = serializableList1.toArray((java.lang.Comparable<java.lang.String>[]) strArray5);
        java.util.SortedSet<java.io.Serializable> serializableSet7 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList8 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet7);
        java.util.SortedSet<java.io.Serializable> serializableSet9 = java.util.Collections.unmodifiableSortedSet(serializableSet7);
        java.util.TreeSet<java.io.Serializable> serializableSet10 = new java.util.TreeSet<java.io.Serializable>(serializableSet9);
        java.io.Serializable serializable11 = serializableSet10.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator12 = serializableSet10.comparator();
        java.util.NavigableSet<java.io.Serializable> serializableSet13 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet10);
        java.util.SortedSet<java.io.Serializable> serializableSet14 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList15 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet14);
        java.util.SortedSet<java.io.Serializable> serializableSet16 = java.util.Collections.unmodifiableSortedSet(serializableSet14);
        java.util.TreeSet<java.io.Serializable> serializableSet17 = new java.util.TreeSet<java.io.Serializable>(serializableSet16);
        java.util.HashSet<java.lang.String> strSet19 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.lang.Object obj20 = strSet19.clone();
        java.io.Serializable serializable21 = serializableSet17.lower((java.io.Serializable) strSet19);
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet25 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet25, strArray24);
        boolean boolean28 = strSet25.equals((java.lang.Object) false);
        boolean boolean29 = strSet25.isEmpty();
        boolean boolean31 = strSet25.equals((java.lang.Object) 10L);
        java.util.SortedSet<java.io.Serializable> serializableSet32 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList33 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet32);
        java.util.SortedSet<java.io.Serializable> serializableSet34 = java.util.Collections.unmodifiableSortedSet(serializableSet32);
        java.util.TreeSet<java.io.Serializable> serializableSet35 = new java.util.TreeSet<java.io.Serializable>(serializableSet34);
        boolean boolean37 = serializableSet35.remove((java.lang.Object) (-1.0f));
        java.util.Comparator<? super java.io.Serializable> wildcardComparator38 = serializableSet35.comparator();
        boolean boolean39 = strSet25.remove((java.lang.Object) serializableSet35);
        boolean boolean40 = strSet19.remove((java.lang.Object) serializableSet35);
        boolean boolean41 = serializableSet10.remove((java.lang.Object) boolean40);
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] {};
        java.lang.reflect.Type[] typeArray43 = serializableSet10.toArray(typeArray42);
        boolean boolean44 = serializableList1.retainAll((java.util.Collection<java.io.Serializable>) serializableSet10);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator45 = serializableSet10.spliterator();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strComparableArray6);
        org.junit.Assert.assertNotNull(serializableSet7);
        org.junit.Assert.assertNotNull(serializableIterableList8);
        org.junit.Assert.assertNotNull(serializableSet9);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(wildcardComparator12);
        org.junit.Assert.assertNotNull(serializableSet13);
        org.junit.Assert.assertNotNull(serializableSet14);
        org.junit.Assert.assertNotNull(serializableIterableList15);
        org.junit.Assert.assertNotNull(serializableSet16);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "[]");
        org.junit.Assert.assertNull(serializable21);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(serializableSet32);
        org.junit.Assert.assertNotNull(serializableIterableList33);
        org.junit.Assert.assertNotNull(serializableSet34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardComparator38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(serializableSpliterator45);
    }

    @Test
    public void test297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test297");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        serializableSet3.clear();
        java.util.Iterator<java.io.Serializable> serializableItor7 = serializableSet3.descendingIterator();
        java.io.Serializable[] serializableArray59 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList60 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList60, serializableArray59);
        java.util.Collection<java.io.Serializable> serializableCollection62 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList60);
        java.io.Serializable[] serializableArray87 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList60, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList88 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList88, serializableArray87);
        serializableList88.ensureCapacity(100);
        java.lang.Object[] objArray92 = serializableList88.toArray();
        boolean boolean94 = serializableList88.remove((java.lang.Object) (byte) 0);
        java.io.Serializable serializable95 = serializableSet3.higher((java.io.Serializable) (byte) 0);
        boolean boolean96 = serializableSet3.isEmpty();
        java.util.NavigableSet<java.io.Serializable> serializableSet97 = serializableSet3.descendingSet();
        java.util.NavigableSet<java.io.Serializable> serializableSet98 = java.util.Collections.unmodifiableNavigableSet(serializableSet97);
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableItor7);
        org.junit.Assert.assertNotNull(serializableArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(serializableCollection62);
        org.junit.Assert.assertNotNull(serializableArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNull(serializable95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(serializableSet97);
        org.junit.Assert.assertNotNull(serializableSet98);
    }

    @Test
    public void test298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test298");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean6 = strSet3.equals((java.lang.Object) false);
        java.util.SortedSet<java.io.Serializable> serializableSet7 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList8 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet7);
        java.util.SortedSet<java.io.Serializable> serializableSet9 = java.util.Collections.unmodifiableSortedSet(serializableSet7);
        java.util.TreeSet<java.io.Serializable> serializableSet10 = new java.util.TreeSet<java.io.Serializable>(serializableSet9);
        java.io.Serializable serializable11 = serializableSet10.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator12 = serializableSet10.comparator();
        java.util.NavigableSet<java.io.Serializable> serializableSet13 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet10);
        java.util.stream.Stream[][] streamArray14 = new java.util.stream.Stream[][] {};
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableSet10, streamArray14);
        java.util.Comparator<? super java.io.Serializable> wildcardComparator16 = serializableSet10.comparator();
        java.lang.Object obj17 = serializableSet10.clone();
        boolean boolean18 = strSet3.removeAll((java.util.Collection<java.io.Serializable>) serializableSet10);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(serializableSet7);
        org.junit.Assert.assertNotNull(serializableIterableList8);
        org.junit.Assert.assertNotNull(serializableSet9);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(wildcardComparator12);
        org.junit.Assert.assertNotNull(serializableSet13);
        org.junit.Assert.assertNotNull(streamArray14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardComparator16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test299");
        java.io.Serializable[] serializableArray37 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList38 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList38, serializableArray37);
        java.util.Collection<java.io.Serializable> serializableCollection40 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList38);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator41 = serializableList38.spliterator();
        java.util.Spliterator<java.io.Serializable> serializableSpliterator42 = serializableList38.spliterator();
        java.util.Collections.rotate((java.util.List<java.io.Serializable>) serializableList38, (int) (byte) -1);
        org.junit.Assert.assertNotNull(serializableArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(serializableCollection40);
        org.junit.Assert.assertNotNull(serializableSpliterator41);
        org.junit.Assert.assertNotNull(serializableSpliterator42);
    }

    @Test
    public void test300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test300");
        java.io.Serializable[] serializableArray35 = new java.io.Serializable[] { false, (-1), 'a', (-1.0f), "hi!", '#', '4', '4', '#', (byte) 10, 100, 1.0f, (byte) -1, (short) 0, '4', (-1.0d), (-1.0d), 'a', 'a', (short) 10, "hi!", (byte) -1, 0.0d, 1.0f, (-1.0d), 0.0d, 100L, 10.0f, '4', 1L, (-1), (-1L), 100, 0L, true };
        java.util.ArrayList<java.io.Serializable> serializableList36 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList36, serializableArray35);
        java.lang.Object obj38 = null;
        boolean boolean39 = serializableList36.equals(obj38);
        java.util.stream.Stream<java.io.Serializable> serializableStream40 = serializableList36.stream();
        java.util.SortedSet<java.io.Serializable> serializableSet41 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList42 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet41);
        java.util.SortedSet<java.io.Serializable> serializableSet43 = java.util.Collections.unmodifiableSortedSet(serializableSet41);
        java.util.TreeSet<java.io.Serializable> serializableSet44 = new java.util.TreeSet<java.io.Serializable>(serializableSet43);
        java.io.Serializable serializable45 = serializableSet44.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator46 = serializableSet44.comparator();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration47 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableSet44);
        java.util.NavigableSet<java.io.Serializable> serializableSet50 = serializableSet44.tailSet((java.io.Serializable) 100L, true);
        boolean boolean51 = serializableList36.remove((java.lang.Object) 100L);
        org.junit.Assert.assertNotNull(serializableArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(serializableStream40);
        org.junit.Assert.assertNotNull(serializableSet41);
        org.junit.Assert.assertNotNull(serializableIterableList42);
        org.junit.Assert.assertNotNull(serializableSet43);
        org.junit.Assert.assertNull(serializable45);
        org.junit.Assert.assertNull(wildcardComparator46);
        org.junit.Assert.assertNotNull(serializableEnumeration47);
        org.junit.Assert.assertNotNull(serializableSet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test301");
        java.util.Map<java.util.Set<java.io.Serializable>, java.lang.reflect.AnnotatedElement> serializableSetMap0 = java.util.Collections.emptyMap();
        org.junit.Assert.assertNotNull(serializableSetMap0);
    }

    @Test
    public void test302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test302");
        java.util.Comparator<java.util.stream.Stream[][]> streamArrayComparator0 = java.util.Collections.reverseOrder();
        org.junit.Assert.assertNotNull(streamArrayComparator0);
    }

    @Test
    public void test303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test303");
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList41 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList41, serializableArray40);
        java.util.Collection<java.io.Serializable> serializableCollection43 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList41);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] { 'a', 10, 100, serializableList41, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList51 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList51, serializableArray50);
        boolean boolean55 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList51, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.ListIterator<java.io.Serializable> serializableItor56 = serializableList51.listIterator();
        java.util.Iterator<java.io.Serializable> serializableItor57 = serializableList51.iterator();
        java.util.Collections.reverse((java.util.List<java.io.Serializable>) serializableList51);
        org.junit.Assert.assertNotNull(serializableArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(serializableCollection43);
        org.junit.Assert.assertNotNull(serializableArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(serializableItor56);
        org.junit.Assert.assertNotNull(serializableItor57);
    }

    @Test
    public void test304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test304");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.util.HashSet<java.lang.String> strSet5 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.lang.Object obj6 = strSet5.clone();
        java.io.Serializable serializable7 = serializableSet3.lower((java.io.Serializable) strSet5);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet11 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet11, strArray10);
        boolean boolean14 = strSet11.equals((java.lang.Object) false);
        boolean boolean15 = strSet11.isEmpty();
        boolean boolean17 = strSet11.equals((java.lang.Object) 10L);
        java.util.SortedSet<java.io.Serializable> serializableSet18 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList19 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet18);
        java.util.SortedSet<java.io.Serializable> serializableSet20 = java.util.Collections.unmodifiableSortedSet(serializableSet18);
        java.util.TreeSet<java.io.Serializable> serializableSet21 = new java.util.TreeSet<java.io.Serializable>(serializableSet20);
        boolean boolean23 = serializableSet21.remove((java.lang.Object) (-1.0f));
        java.util.Comparator<? super java.io.Serializable> wildcardComparator24 = serializableSet21.comparator();
        boolean boolean25 = strSet11.remove((java.lang.Object) serializableSet21);
        boolean boolean26 = strSet5.remove((java.lang.Object) serializableSet21);
        java.util.Enumeration<java.util.HashSet<java.lang.String>> strSetEnumeration27 = java.util.Collections.emptyEnumeration();
        java.util.ArrayList<java.util.HashSet<java.lang.String>> strSetList28 = java.util.Collections.list(strSetEnumeration27);
        java.util.Enumeration<java.util.HashSet<java.lang.String>> strSetEnumeration29 = java.util.Collections.emptyEnumeration();
        java.util.ArrayList<java.util.HashSet<java.lang.String>> strSetList30 = java.util.Collections.list(strSetEnumeration29);
        java.util.Enumeration<java.util.HashSet<java.lang.String>> strSetEnumeration32 = java.util.Collections.emptyEnumeration();
        java.util.List<java.util.Enumeration<java.util.HashSet<java.lang.String>>> strSetEnumerationList33 = java.util.Collections.nCopies((int) (byte) 100, strSetEnumeration32);
        java.util.Enumeration<java.util.HashSet<java.lang.String>> strSetEnumeration34 = java.util.Collections.emptyEnumeration();
        java.util.ArrayList<java.util.HashSet<java.lang.String>> strSetList35 = java.util.Collections.list(strSetEnumeration34);
        java.util.Enumeration[] enumerationArray37 = new java.util.Enumeration[4];
        @SuppressWarnings("unchecked")
        java.util.Enumeration<java.util.HashSet<java.lang.String>>[] strSetEnumerationArray38 = (java.util.Enumeration<java.util.HashSet<java.lang.String>>[]) enumerationArray37;
        strSetEnumerationArray38[0] = strSetEnumeration27;
        strSetEnumerationArray38[1] = strSetEnumeration29;
        strSetEnumerationArray38[2] = strSetEnumeration32;
        strSetEnumerationArray38[3] = strSetEnumeration34;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableSet21, strSetEnumerationArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "[]");
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(serializableSet18);
        org.junit.Assert.assertNotNull(serializableIterableList19);
        org.junit.Assert.assertNotNull(serializableSet20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardComparator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strSetEnumeration27);
        org.junit.Assert.assertNotNull(strSetList28);
        org.junit.Assert.assertNotNull(strSetEnumeration29);
        org.junit.Assert.assertNotNull(strSetList30);
        org.junit.Assert.assertNotNull(strSetEnumeration32);
        org.junit.Assert.assertNotNull(strSetEnumerationList33);
        org.junit.Assert.assertNotNull(strSetEnumeration34);
        org.junit.Assert.assertNotNull(strSetList35);
        org.junit.Assert.assertNotNull(enumerationArray37);
        org.junit.Assert.assertNotNull(strSetEnumerationArray38);
    }

    @Test
    public void test305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test305");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.io.Serializable serializable6 = serializableSet3.ceiling((java.io.Serializable) 0.0d);
        java.lang.Object obj7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = serializableSet3.remove(obj7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable6);
    }

    @Test
    public void test306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test306");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean6 = strSet3.equals((java.lang.Object) false);
        java.io.Serializable[] serializableArray42 = new java.io.Serializable[] { false, (-1), 'a', (-1.0f), "hi!", '#', '4', '4', '#', (byte) 10, 100, 1.0f, (byte) -1, (short) 0, '4', (-1.0d), (-1.0d), 'a', 'a', (short) 10, "hi!", (byte) -1, 0.0d, 1.0f, (-1.0d), 0.0d, 100L, 10.0f, '4', 1L, (-1), (-1L), 100, 0L, true };
        java.util.ArrayList<java.io.Serializable> serializableList43 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList43, serializableArray42);
        java.lang.Object obj45 = null;
        boolean boolean46 = serializableList43.equals(obj45);
        java.util.Collection<java.io.Serializable> serializableCollection47 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList43);
        boolean boolean48 = strSet3.contains((java.lang.Object) serializableList43);
        java.lang.Object obj49 = strSet3.clone();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(serializableArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(serializableCollection47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "[hi!]");
    }

    @Test
    public void test307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test307");
        java.util.SortedSet<java.util.LinkedHashSet<java.lang.String>> strSetSet0 = java.util.Collections.emptySortedSet();
        org.junit.Assert.assertNotNull(strSetSet0);
    }

    @Test
    public void test308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test308");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        int int6 = serializableSet3.size();
        java.util.SortedSet<java.io.Serializable> serializableSet7 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList8 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet7);
        java.util.SortedSet<java.io.Serializable> serializableSet9 = java.util.Collections.unmodifiableSortedSet(serializableSet7);
        java.util.TreeSet<java.io.Serializable> serializableSet10 = new java.util.TreeSet<java.io.Serializable>(serializableSet9);
        java.io.Serializable serializable11 = serializableSet10.pollFirst();
        java.util.HashSet<java.util.ListIterator<java.io.Serializable>> serializableItorSet13 = new java.util.HashSet<java.util.ListIterator<java.io.Serializable>>((int) '4');
        java.util.NavigableSet<java.io.Serializable> serializableSet15 = serializableSet10.tailSet((java.io.Serializable) '4', true);
        boolean boolean16 = java.util.Collections.disjoint((java.util.Collection<java.io.Serializable>) serializableSet3, (java.util.Collection<java.io.Serializable>) serializableSet10);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator17 = serializableSet10.spliterator();
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(serializableSet7);
        org.junit.Assert.assertNotNull(serializableIterableList8);
        org.junit.Assert.assertNotNull(serializableSet9);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNotNull(serializableSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(serializableSpliterator17);
    }

    @Test
    public void test309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test309");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet3 = java.util.Collections.synchronizedSortedSet(serializableSet2);
        java.lang.Class<java.io.Serializable> serializableClass4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collection<java.io.Serializable> serializableCollection5 = java.util.Collections.checkedCollection((java.util.Collection<java.io.Serializable>) serializableSet3, serializableClass4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: type");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNotNull(serializableSet3);
    }

    @Test
    public void test310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test310");
        java.util.ArrayList<java.io.Serializable> serializableList1 = new java.util.ArrayList<java.io.Serializable>(100);
        serializableList1.clear();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration3 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableList1);
        int int4 = serializableList1.size();
        org.junit.Assert.assertNotNull(serializableEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test311");
        java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.util.AbstractList<java.io.Serializable>> strSetMap0 = java.util.Collections.emptyNavigableMap();
        java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.util.AbstractList<java.io.Serializable>> strSetMap1 = java.util.Collections.synchronizedNavigableMap(strSetMap0);
        java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.util.AbstractList<java.io.Serializable>> strSetMap2 = java.util.Collections.synchronizedNavigableMap(strSetMap1);
        java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.util.AbstractList<java.io.Serializable>> strSetMap3 = java.util.Collections.synchronizedNavigableMap(strSetMap2);
        java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.lang.Iterable<java.io.Serializable>> strSetMap4 = java.util.Collections.unmodifiableNavigableMap(strSetMap3);
        org.junit.Assert.assertNotNull(strSetMap0);
        org.junit.Assert.assertNotNull(strSetMap1);
        org.junit.Assert.assertNotNull(strSetMap2);
        org.junit.Assert.assertNotNull(strSetMap3);
        org.junit.Assert.assertNotNull(strSetMap4);
    }

    @Test
    public void test312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test312");
        java.util.HashSet<java.lang.String> strSet1 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList3 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet2);
        java.util.SortedSet<java.io.Serializable> serializableSet4 = java.util.Collections.unmodifiableSortedSet(serializableSet2);
        java.util.TreeSet<java.io.Serializable> serializableSet5 = new java.util.TreeSet<java.io.Serializable>(serializableSet4);
        java.io.Serializable serializable6 = serializableSet5.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator7 = serializableSet5.comparator();
        int int8 = serializableSet5.size();
        boolean boolean9 = strSet1.remove((java.lang.Object) serializableSet5);
        java.util.Enumeration<java.io.Serializable> serializableEnumeration10 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableSet5);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable11 = serializableSet5.last();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNotNull(serializableIterableList3);
        org.junit.Assert.assertNotNull(serializableSet4);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertNull(wildcardComparator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(serializableEnumeration10);
    }

    @Test
    public void test313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test313");
        java.io.Serializable[] serializableArray37 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList38 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList38, serializableArray37);
        java.util.Collection<java.io.Serializable> serializableCollection40 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList38);
        java.lang.Object obj41 = serializableList38.clone();
        java.util.List<java.io.Serializable> serializableList42 = java.util.Collections.synchronizedList((java.util.List<java.io.Serializable>) serializableList38);
        org.junit.Assert.assertNotNull(serializableArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(serializableCollection40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertNotNull(serializableList42);
    }

    @Test
    public void test314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test314");
        java.util.SortedMap<java.util.stream.Stream[], java.lang.Iterable<java.io.Serializable>> streamArrayMap0 = java.util.Collections.emptySortedMap();
        org.junit.Assert.assertNotNull(streamArrayMap0);
    }

    @Test
    public void test315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test315");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        serializableSet3.clear();
        java.util.Iterator<java.io.Serializable> serializableItor7 = serializableSet3.descendingIterator();
        java.io.Serializable[] serializableArray59 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList60 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList60, serializableArray59);
        java.util.Collection<java.io.Serializable> serializableCollection62 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList60);
        java.io.Serializable[] serializableArray87 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList60, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList88 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList88, serializableArray87);
        serializableList88.ensureCapacity(100);
        java.lang.Object[] objArray92 = serializableList88.toArray();
        boolean boolean94 = serializableList88.remove((java.lang.Object) (byte) 0);
        java.io.Serializable serializable95 = serializableSet3.higher((java.io.Serializable) (byte) 0);
        java.util.Iterator<java.io.Serializable> serializableItor96 = serializableSet3.descendingIterator();
        java.util.NavigableSet<java.io.Serializable> serializableSet97 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet3);
        java.lang.Class<java.io.Serializable> serializableClass98 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.io.Serializable> serializableSet99 = java.util.Collections.checkedSet((java.util.Set<java.io.Serializable>) serializableSet97, serializableClass98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: type");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableItor7);
        org.junit.Assert.assertNotNull(serializableArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(serializableCollection62);
        org.junit.Assert.assertNotNull(serializableArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNull(serializable95);
        org.junit.Assert.assertNotNull(serializableItor96);
        org.junit.Assert.assertNotNull(serializableSet97);
    }

    @Test
    public void test316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test316");
        java.util.HashSet<java.lang.String> strSet1 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        boolean boolean2 = strSet1.isEmpty();
        java.util.Spliterator<java.lang.String> strSpliterator3 = strSet1.spliterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(strSpliterator3);
    }

    @Test
    public void test317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test317");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean6 = strSet3.equals((java.lang.Object) false);
        boolean boolean7 = strSet3.isEmpty();
        boolean boolean9 = strSet3.equals((java.lang.Object) 10L);
        java.lang.Object obj10 = strSet3.clone();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "[hi!]");
    }

    @Test
    public void test318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test318");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        java.util.NavigableSet<java.io.Serializable> serializableSet6 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet3);
        java.util.SortedSet<java.io.Serializable> serializableSet7 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList8 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet7);
        java.util.SortedSet<java.io.Serializable> serializableSet9 = java.util.Collections.unmodifiableSortedSet(serializableSet7);
        java.util.TreeSet<java.io.Serializable> serializableSet10 = new java.util.TreeSet<java.io.Serializable>(serializableSet9);
        java.util.HashSet<java.lang.String> strSet12 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.lang.Object obj13 = strSet12.clone();
        java.io.Serializable serializable14 = serializableSet10.lower((java.io.Serializable) strSet12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        boolean boolean21 = strSet18.equals((java.lang.Object) false);
        boolean boolean22 = strSet18.isEmpty();
        boolean boolean24 = strSet18.equals((java.lang.Object) 10L);
        java.util.SortedSet<java.io.Serializable> serializableSet25 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList26 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet25);
        java.util.SortedSet<java.io.Serializable> serializableSet27 = java.util.Collections.unmodifiableSortedSet(serializableSet25);
        java.util.TreeSet<java.io.Serializable> serializableSet28 = new java.util.TreeSet<java.io.Serializable>(serializableSet27);
        boolean boolean30 = serializableSet28.remove((java.lang.Object) (-1.0f));
        java.util.Comparator<? super java.io.Serializable> wildcardComparator31 = serializableSet28.comparator();
        boolean boolean32 = strSet18.remove((java.lang.Object) serializableSet28);
        boolean boolean33 = strSet12.remove((java.lang.Object) serializableSet28);
        java.util.NavigableSet<java.io.Serializable> serializableSet34 = java.util.Collections.synchronizedNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet28);
        java.lang.Object obj35 = serializableSet28.clone();
        boolean boolean36 = serializableSet3.addAll((java.util.Collection<java.io.Serializable>) serializableSet28);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet40 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet40, strArray39);
        boolean boolean43 = strSet40.equals((java.lang.Object) false);
        boolean boolean44 = serializableSet3.add((java.io.Serializable) boolean43);
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableSet6);
        org.junit.Assert.assertNotNull(serializableSet7);
        org.junit.Assert.assertNotNull(serializableIterableList8);
        org.junit.Assert.assertNotNull(serializableSet9);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "[]");
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(serializableSet25);
        org.junit.Assert.assertNotNull(serializableIterableList26);
        org.junit.Assert.assertNotNull(serializableSet27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardComparator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(serializableSet34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "[]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test319");
        java.util.Enumeration<java.util.AbstractCollection<java.io.Serializable>> serializableCollectionEnumeration0 = java.util.Collections.emptyEnumeration();
        org.junit.Assert.assertNotNull(serializableCollectionEnumeration0);
    }

    @Test
    public void test320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test320");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        java.util.NavigableSet<java.io.Serializable> serializableSet6 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet3);
        java.util.TreeSet<java.io.Serializable> serializableSet7 = new java.util.TreeSet<java.io.Serializable>((java.util.SortedSet<java.io.Serializable>) serializableSet3);
        java.lang.Class<java.io.Serializable> serializableClass8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.io.Serializable> serializableSet9 = java.util.Collections.checkedSet((java.util.Set<java.io.Serializable>) serializableSet7, serializableClass8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: type");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableSet6);
    }

    @Test
    public void test321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test321");
        java.util.SortedMap<java.util.Enumeration<java.util.HashSet<java.lang.String>>, java.util.Iterator<java.io.Serializable>> strSetEnumerationMap0 = java.util.Collections.emptySortedMap();
        java.util.SortedMap<java.util.Enumeration<java.util.HashSet<java.lang.String>>, java.util.Iterator<java.io.Serializable>> strSetEnumerationMap1 = java.util.Collections.synchronizedSortedMap(strSetEnumerationMap0);
        java.util.SortedMap<java.util.Enumeration<java.util.HashSet<java.lang.String>>, java.util.Iterator<java.io.Serializable>> strSetEnumerationMap2 = java.util.Collections.synchronizedSortedMap(strSetEnumerationMap0);
        java.lang.Class<java.util.Enumeration<java.util.HashSet<java.lang.String>>> strSetEnumerationClass3 = null;
        java.lang.Class<java.util.Iterator<java.io.Serializable>> serializableItorClass4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.SortedMap<java.util.Enumeration<java.util.HashSet<java.lang.String>>, java.util.Iterator<java.io.Serializable>> strSetEnumerationMap5 = java.util.Collections.checkedSortedMap(strSetEnumerationMap2, strSetEnumerationClass3, serializableItorClass4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSetEnumerationMap0);
        org.junit.Assert.assertNotNull(strSetEnumerationMap1);
        org.junit.Assert.assertNotNull(strSetEnumerationMap2);
    }

    @Test
    public void test322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test322");
        // The following exception was thrown during execution in test generation
        try {
            java.util.HashSet<java.lang.String> strSet1 = new java.util.HashSet<java.lang.String>((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal initial capacity: -1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test323");
        java.util.SortedSet<java.io.Serializable> serializableSet1 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList2 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet1);
        java.util.SortedSet<java.io.Serializable> serializableSet3 = java.util.Collections.unmodifiableSortedSet(serializableSet1);
        java.util.TreeSet<java.io.Serializable> serializableSet4 = new java.util.TreeSet<java.io.Serializable>(serializableSet3);
        java.io.Serializable serializable5 = serializableSet4.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator6 = serializableSet4.comparator();
        serializableSet4.clear();
        java.util.Iterator<java.io.Serializable> serializableItor8 = serializableSet4.descendingIterator();
        java.io.Serializable[] serializableArray60 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList61 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList61, serializableArray60);
        java.util.Collection<java.io.Serializable> serializableCollection63 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList61);
        java.io.Serializable[] serializableArray88 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList61, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList89 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList89, serializableArray88);
        serializableList89.ensureCapacity(100);
        java.lang.Object[] objArray93 = serializableList89.toArray();
        boolean boolean95 = serializableList89.remove((java.lang.Object) (byte) 0);
        java.io.Serializable serializable96 = serializableSet4.higher((java.io.Serializable) (byte) 0);
        java.util.List<java.util.AbstractCollection<java.io.Serializable>> serializableCollectionList97 = java.util.Collections.nCopies((int) '4', (java.util.AbstractCollection<java.io.Serializable>) serializableSet4);
        java.util.stream.Stream<java.io.Serializable> serializableStream98 = serializableSet4.stream();
        java.lang.Class<?> wildcardClass99 = serializableSet4.getClass();
        org.junit.Assert.assertNotNull(serializableSet1);
        org.junit.Assert.assertNotNull(serializableIterableList2);
        org.junit.Assert.assertNotNull(serializableSet3);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(serializableItor8);
        org.junit.Assert.assertNotNull(serializableArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(serializableCollection63);
        org.junit.Assert.assertNotNull(serializableArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNull(serializable96);
        org.junit.Assert.assertNotNull(serializableCollectionList97);
        org.junit.Assert.assertNotNull(serializableStream98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test324");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration6 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableSet3);
        java.util.NavigableSet<java.io.Serializable> serializableSet9 = serializableSet3.tailSet((java.io.Serializable) 100L, true);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator10 = serializableSet3.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable11 = serializableSet3.first();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableEnumeration6);
        org.junit.Assert.assertNotNull(serializableSet9);
        org.junit.Assert.assertNotNull(serializableSpliterator10);
    }

    @Test
    public void test325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test325");
        java.util.HashSet<java.lang.String> strSet2 = new java.util.HashSet<java.lang.String>(37, (float) 37);
    }

    @Test
    public void test326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test326");
        java.util.ListIterator<java.util.AbstractSet<java.lang.String>> strSetItor0 = java.util.Collections.emptyListIterator();
        org.junit.Assert.assertNotNull(strSetItor0);
    }

    @Test
    public void test327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test327");
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList41 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList41, serializableArray40);
        java.util.Collection<java.io.Serializable> serializableCollection43 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList41);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] { 'a', 10, 100, serializableList41, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList51 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList51, serializableArray50);
        boolean boolean55 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList51, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.Map<java.io.Serializable, java.lang.Object> serializableMap58 = java.util.Collections.singletonMap((java.io.Serializable) (short) 1, (java.lang.Object) (short) 1);
        int int59 = serializableList51.lastIndexOf((java.lang.Object) (short) 1);
        serializableList51.clear();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration61 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableList51);
        java.util.ListIterator<java.io.Serializable> serializableItor62 = serializableList51.listIterator();
        java.util.SortedSet<java.io.Serializable> serializableSet63 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList64 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet63);
        java.util.SortedSet<java.io.Serializable> serializableSet65 = java.util.Collections.unmodifiableSortedSet(serializableSet63);
        java.util.TreeSet<java.io.Serializable> serializableSet66 = new java.util.TreeSet<java.io.Serializable>(serializableSet65);
        java.io.Serializable serializable67 = serializableSet66.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator68 = serializableSet66.comparator();
        boolean boolean69 = serializableSet66.isEmpty();
        serializableSet66.clear();
        java.util.TreeSet<java.io.Serializable> serializableSet71 = new java.util.TreeSet<java.io.Serializable>((java.util.SortedSet<java.io.Serializable>) serializableSet66);
        java.util.stream.Stream<java.io.Serializable> serializableStream72 = serializableSet66.parallelStream();
        java.util.Map<java.util.ListIterator<java.io.Serializable>, java.lang.AutoCloseable> serializableItorMap73 = java.util.Collections.singletonMap(serializableItor62, (java.lang.AutoCloseable) serializableStream72);
        org.junit.Assert.assertNotNull(serializableArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(serializableCollection43);
        org.junit.Assert.assertNotNull(serializableArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(serializableMap58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(serializableEnumeration61);
        org.junit.Assert.assertNotNull(serializableItor62);
        org.junit.Assert.assertNotNull(serializableSet63);
        org.junit.Assert.assertNotNull(serializableIterableList64);
        org.junit.Assert.assertNotNull(serializableSet65);
        org.junit.Assert.assertNull(serializable67);
        org.junit.Assert.assertNull(wildcardComparator68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(serializableStream72);
        org.junit.Assert.assertNotNull(serializableItorMap73);
    }

    @Test
    public void test328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test328");
        java.util.ArrayList<java.util.RandomAccess> randomAccessList1 = new java.util.ArrayList<java.util.RandomAccess>(10);
    }

    @Test
    public void test329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test329");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean6 = strSet3.equals((java.lang.Object) false);
        boolean boolean7 = strSet3.isEmpty();
        boolean boolean9 = strSet3.equals((java.lang.Object) 10L);
        java.util.Iterator<java.lang.String> strItor10 = strSet3.iterator();
        java.util.SortedSet<java.io.Serializable> serializableSet11 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList12 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet11);
        java.util.SortedSet<java.io.Serializable> serializableSet13 = java.util.Collections.unmodifiableSortedSet(serializableSet11);
        java.util.TreeSet<java.io.Serializable> serializableSet14 = new java.util.TreeSet<java.io.Serializable>(serializableSet13);
        java.io.Serializable serializable15 = serializableSet14.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator16 = serializableSet14.comparator();
        java.util.NavigableSet<java.io.Serializable> serializableSet17 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet14);
        java.util.stream.Stream[][] streamArray18 = new java.util.stream.Stream[][] {};
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableSet14, streamArray18);
        java.util.Comparator<? super java.io.Serializable> wildcardComparator20 = serializableSet14.comparator();
        boolean boolean21 = strSet3.equals((java.lang.Object) serializableSet14);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable22 = serializableSet14.first();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strItor10);
        org.junit.Assert.assertNotNull(serializableSet11);
        org.junit.Assert.assertNotNull(serializableIterableList12);
        org.junit.Assert.assertNotNull(serializableSet13);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertNull(wildcardComparator16);
        org.junit.Assert.assertNotNull(serializableSet17);
        org.junit.Assert.assertNotNull(streamArray18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(wildcardComparator20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test330");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        boolean boolean6 = serializableSet3.isEmpty();
        serializableSet3.clear();
        java.io.Serializable serializable8 = serializableSet3.pollFirst();
        java.util.SortedSet<java.io.Serializable> serializableSet9 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList10 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet9);
        java.util.SortedSet<java.io.Serializable> serializableSet11 = java.util.Collections.unmodifiableSortedSet(serializableSet9);
        java.util.TreeSet<java.io.Serializable> serializableSet12 = new java.util.TreeSet<java.io.Serializable>(serializableSet11);
        boolean boolean14 = serializableSet12.remove((java.lang.Object) (-1.0f));
        java.io.Serializable serializable15 = serializableSet12.pollLast();
        boolean boolean16 = serializableSet3.containsAll((java.util.Collection<java.io.Serializable>) serializableSet12);
        java.util.TreeSet<java.io.Serializable> serializableSet17 = new java.util.TreeSet<java.io.Serializable>((java.util.SortedSet<java.io.Serializable>) serializableSet3);
        java.util.SortedSet<java.io.Serializable> serializableSet18 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList19 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet18);
        java.util.SortedSet<java.io.Serializable> serializableSet20 = java.util.Collections.unmodifiableSortedSet(serializableSet18);
        java.util.TreeSet<java.io.Serializable> serializableSet21 = new java.util.TreeSet<java.io.Serializable>(serializableSet20);
        java.io.Serializable serializable22 = serializableSet21.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator23 = serializableSet21.comparator();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration24 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableSet21);
        java.util.SortedSet<java.io.Serializable> serializableSet25 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList26 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet25);
        java.util.SortedSet<java.io.Serializable> serializableSet27 = java.util.Collections.unmodifiableSortedSet(serializableSet25);
        java.util.TreeSet<java.io.Serializable> serializableSet28 = new java.util.TreeSet<java.io.Serializable>(serializableSet27);
        java.io.Serializable serializable29 = serializableSet28.pollFirst();
        java.util.HashSet<java.util.ListIterator<java.io.Serializable>> serializableItorSet31 = new java.util.HashSet<java.util.ListIterator<java.io.Serializable>>((int) '4');
        java.util.NavigableSet<java.io.Serializable> serializableSet33 = serializableSet28.tailSet((java.io.Serializable) '4', true);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator34 = serializableSet28.spliterator();
        boolean boolean35 = serializableSet21.addAll((java.util.Collection<java.io.Serializable>) serializableSet28);
        // The following exception was thrown during execution in test generation
        try {
            java.util.SortedSet<java.io.Serializable> serializableSet36 = serializableSet17.headSet((java.io.Serializable) serializableSet21);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class java.util.TreeSet cannot be cast to class java.lang.Comparable (java.util.TreeSet and java.lang.Comparable are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(serializableSet9);
        org.junit.Assert.assertNotNull(serializableIterableList10);
        org.junit.Assert.assertNotNull(serializableSet11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(serializableSet18);
        org.junit.Assert.assertNotNull(serializableIterableList19);
        org.junit.Assert.assertNotNull(serializableSet20);
        org.junit.Assert.assertNull(serializable22);
        org.junit.Assert.assertNull(wildcardComparator23);
        org.junit.Assert.assertNotNull(serializableEnumeration24);
        org.junit.Assert.assertNotNull(serializableSet25);
        org.junit.Assert.assertNotNull(serializableIterableList26);
        org.junit.Assert.assertNotNull(serializableSet27);
        org.junit.Assert.assertNull(serializable29);
        org.junit.Assert.assertNotNull(serializableSet33);
        org.junit.Assert.assertNotNull(serializableSpliterator34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test331");
        java.util.Comparator<java.lang.CharSequence> charSequenceComparator0 = java.util.Collections.reverseOrder();
        java.util.Comparator<java.lang.CharSequence> charSequenceComparator1 = java.util.Collections.reverseOrder(charSequenceComparator0);
        java.util.Comparator<java.lang.CharSequence> charSequenceComparator2 = java.util.Collections.reverseOrder(charSequenceComparator0);
        java.util.Comparator<java.lang.CharSequence> charSequenceComparator3 = java.util.Collections.reverseOrder(charSequenceComparator2);
        java.util.Comparator<java.lang.CharSequence> charSequenceComparator4 = java.util.Collections.reverseOrder(charSequenceComparator3);
        java.util.TreeSet<java.lang.CharSequence> charSequenceSet5 = new java.util.TreeSet<java.lang.CharSequence>(charSequenceComparator4);
        java.util.Comparator<java.lang.CharSequence> charSequenceComparator6 = java.util.Collections.reverseOrder(charSequenceComparator4);
        java.util.TreeSet<java.lang.CharSequence> charSequenceSet7 = new java.util.TreeSet<java.lang.CharSequence>(charSequenceComparator4);
        org.junit.Assert.assertNotNull(charSequenceComparator0);
        org.junit.Assert.assertNotNull(charSequenceComparator1);
        org.junit.Assert.assertNotNull(charSequenceComparator2);
        org.junit.Assert.assertNotNull(charSequenceComparator3);
        org.junit.Assert.assertNotNull(charSequenceComparator4);
        org.junit.Assert.assertNotNull(charSequenceComparator6);
    }

    @Test
    public void test332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test332");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        java.util.NavigableSet<java.io.Serializable> serializableSet6 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet3);
        java.util.SortedSet<java.io.Serializable> serializableSet7 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList8 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet7);
        java.util.SortedSet<java.io.Serializable> serializableSet9 = java.util.Collections.unmodifiableSortedSet(serializableSet7);
        java.util.TreeSet<java.io.Serializable> serializableSet10 = new java.util.TreeSet<java.io.Serializable>(serializableSet9);
        java.util.HashSet<java.lang.String> strSet12 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.lang.Object obj13 = strSet12.clone();
        java.io.Serializable serializable14 = serializableSet10.lower((java.io.Serializable) strSet12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        boolean boolean21 = strSet18.equals((java.lang.Object) false);
        boolean boolean22 = strSet18.isEmpty();
        boolean boolean24 = strSet18.equals((java.lang.Object) 10L);
        java.util.SortedSet<java.io.Serializable> serializableSet25 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList26 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet25);
        java.util.SortedSet<java.io.Serializable> serializableSet27 = java.util.Collections.unmodifiableSortedSet(serializableSet25);
        java.util.TreeSet<java.io.Serializable> serializableSet28 = new java.util.TreeSet<java.io.Serializable>(serializableSet27);
        boolean boolean30 = serializableSet28.remove((java.lang.Object) (-1.0f));
        java.util.Comparator<? super java.io.Serializable> wildcardComparator31 = serializableSet28.comparator();
        boolean boolean32 = strSet18.remove((java.lang.Object) serializableSet28);
        boolean boolean33 = strSet12.remove((java.lang.Object) serializableSet28);
        java.util.NavigableSet<java.io.Serializable> serializableSet34 = java.util.Collections.synchronizedNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet28);
        java.lang.Object obj35 = serializableSet28.clone();
        boolean boolean36 = serializableSet3.addAll((java.util.Collection<java.io.Serializable>) serializableSet28);
        serializableSet3.clear();
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableSet6);
        org.junit.Assert.assertNotNull(serializableSet7);
        org.junit.Assert.assertNotNull(serializableIterableList8);
        org.junit.Assert.assertNotNull(serializableSet9);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "[]");
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(serializableSet25);
        org.junit.Assert.assertNotNull(serializableIterableList26);
        org.junit.Assert.assertNotNull(serializableSet27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardComparator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(serializableSet34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "[]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test333");
        java.util.HashSet<java.lang.String> strSet1 = new java.util.HashSet<java.lang.String>(100);
    }

    @Test
    public void test334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test334");
        java.io.Serializable[] serializableArray51 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList52 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList52, serializableArray51);
        java.util.Collection<java.io.Serializable> serializableCollection54 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList52);
        java.io.Serializable[] serializableArray79 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList52, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList80 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList80, serializableArray79);
        serializableList80.ensureCapacity(100);
        java.util.stream.Stream<java.io.Serializable> serializableStream84 = serializableList80.stream();
        boolean boolean85 = serializableList80.isEmpty();
        java.util.Collection<java.io.Serializable> serializableCollection86 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList80);
        java.util.Map map87 = java.util.Collections.EMPTY_MAP;
        int int88 = serializableList80.lastIndexOf((java.lang.Object) map87);
        java.util.Map<java.lang.Comparable<java.lang.String>, java.util.Comparator<java.lang.CharSequence>> strComparableMap89 = java.util.Collections.synchronizedMap((java.util.Map<java.lang.Comparable<java.lang.String>, java.util.Comparator<java.lang.CharSequence>>) map87);
        java.lang.Class<java.lang.Comparable<java.lang.String>> strComparableClass90 = null;
        java.lang.Class<java.util.Comparator<java.lang.CharSequence>> charSequenceComparatorClass91 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.Comparable<java.lang.String>, java.util.Comparator<java.lang.CharSequence>> strComparableMap92 = java.util.Collections.checkedMap((java.util.Map<java.lang.Comparable<java.lang.String>, java.util.Comparator<java.lang.CharSequence>>) map87, strComparableClass90, charSequenceComparatorClass91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(serializableCollection54);
        org.junit.Assert.assertNotNull(serializableArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(serializableStream84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(serializableCollection86);
        org.junit.Assert.assertNotNull(map87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(strComparableMap89);
    }

    @Test
    public void test335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test335");
        java.io.Serializable[] serializableArray38 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList39 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList39, serializableArray38);
        java.util.Collection<java.io.Serializable> serializableCollection41 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList39);
        java.lang.Object[] objArray42 = serializableList39.toArray();
        java.util.List<java.util.List<java.io.Serializable>> serializableListList43 = java.util.Collections.nCopies(0, (java.util.List<java.io.Serializable>) serializableList39);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator44 = serializableList39.spliterator();
        org.junit.Assert.assertNotNull(serializableArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(serializableCollection41);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertNotNull(serializableListList43);
        org.junit.Assert.assertNotNull(serializableSpliterator44);
    }

    @Test
    public void test336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test336");
        java.io.Serializable[] serializableArray51 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList52 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList52, serializableArray51);
        java.util.Collection<java.io.Serializable> serializableCollection54 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList52);
        java.io.Serializable[] serializableArray79 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList52, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList80 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList80, serializableArray79);
        serializableList80.ensureCapacity(100);
        java.util.ListIterator<java.io.Serializable> serializableItor85 = serializableList80.listIterator(0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.Serializable> serializableList88 = serializableList80.subList((int) '4', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(52) > toIndex(0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(serializableCollection54);
        org.junit.Assert.assertNotNull(serializableArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(serializableItor85);
    }

    @Test
    public void test337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test337");
        java.io.Serializable[] serializableArray51 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList52 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList52, serializableArray51);
        java.util.Collection<java.io.Serializable> serializableCollection54 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList52);
        java.io.Serializable[] serializableArray79 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList52, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList80 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList80, serializableArray79);
        serializableList80.ensureCapacity(100);
        java.lang.Object[] objArray84 = serializableList80.toArray();
        boolean boolean86 = serializableList80.remove((java.lang.Object) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable88 = serializableList80.get((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 52 out of bounds for length 38");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(serializableCollection54);
        org.junit.Assert.assertNotNull(serializableArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test338");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean6 = strSet3.equals((java.lang.Object) false);
        java.io.Serializable[] serializableArray42 = new java.io.Serializable[] { false, (-1), 'a', (-1.0f), "hi!", '#', '4', '4', '#', (byte) 10, 100, 1.0f, (byte) -1, (short) 0, '4', (-1.0d), (-1.0d), 'a', 'a', (short) 10, "hi!", (byte) -1, 0.0d, 1.0f, (-1.0d), 0.0d, 100L, 10.0f, '4', 1L, (-1), (-1L), 100, 0L, true };
        java.util.ArrayList<java.io.Serializable> serializableList43 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList43, serializableArray42);
        java.lang.Object obj45 = null;
        boolean boolean46 = serializableList43.equals(obj45);
        java.util.Collection<java.io.Serializable> serializableCollection47 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList43);
        boolean boolean48 = strSet3.contains((java.lang.Object) serializableList43);
        int int49 = strSet3.size();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(serializableArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(serializableCollection47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
    }

    @Test
    public void test339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test339");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        boolean boolean5 = serializableSet3.remove((java.lang.Object) (-1.0f));
        java.io.Serializable serializable6 = serializableSet3.pollLast();
        java.io.Serializable[] serializableArray42 = new java.io.Serializable[] { false, (-1), 'a', (-1.0f), "hi!", '#', '4', '4', '#', (byte) 10, 100, 1.0f, (byte) -1, (short) 0, '4', (-1.0d), (-1.0d), 'a', 'a', (short) 10, "hi!", (byte) -1, 0.0d, 1.0f, (-1.0d), 0.0d, 100L, 10.0f, '4', 1L, (-1), (-1L), 100, 0L, true };
        java.util.ArrayList<java.io.Serializable> serializableList43 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList43, serializableArray42);
        java.lang.Object obj45 = null;
        boolean boolean46 = serializableList43.equals(obj45);
        java.util.stream.Stream<java.io.Serializable> serializableStream47 = serializableList43.stream();
        java.util.List<java.io.Serializable> serializableList48 = java.util.Collections.synchronizedList((java.util.List<java.io.Serializable>) serializableList43);
        // The following exception was thrown during execution in test generation
        try {
            java.util.SortedSet<java.io.Serializable> serializableSet49 = serializableSet3.headSet((java.io.Serializable) serializableList43);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class java.util.ArrayList cannot be cast to class java.lang.Comparable (java.util.ArrayList and java.lang.Comparable are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertNotNull(serializableArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(serializableStream47);
        org.junit.Assert.assertNotNull(serializableList48);
    }

    @Test
    public void test340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test340");
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList41 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList41, serializableArray40);
        java.util.Collection<java.io.Serializable> serializableCollection43 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList41);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] { 'a', 10, 100, serializableList41, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList51 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList51, serializableArray50);
        boolean boolean55 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList51, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.Map<java.io.Serializable, java.lang.Object> serializableMap58 = java.util.Collections.singletonMap((java.io.Serializable) (short) 1, (java.lang.Object) (short) 1);
        int int59 = serializableList51.lastIndexOf((java.lang.Object) (short) 1);
        serializableList51.clear();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration61 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableList51);
        java.util.Random random62 = null;
        java.util.Collections.shuffle((java.util.List<java.io.Serializable>) serializableList51, random62);
        java.util.ArrayList<java.io.Serializable> serializableList65 = new java.util.ArrayList<java.io.Serializable>((int) '4');
        java.util.Collections.copy((java.util.List<java.io.Serializable>) serializableList51, (java.util.List<java.io.Serializable>) serializableList65);
        java.util.SortedSet<java.io.Serializable> serializableSet68 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList69 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet68);
        java.util.SortedSet<java.io.Serializable> serializableSet70 = java.util.Collections.unmodifiableSortedSet(serializableSet68);
        java.util.TreeSet<java.io.Serializable> serializableSet71 = new java.util.TreeSet<java.io.Serializable>(serializableSet70);
        java.io.Serializable serializable72 = serializableSet71.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator73 = serializableSet71.comparator();
        int int74 = serializableSet71.size();
        serializableSet71.clear();
        java.lang.Object obj76 = serializableSet71.clone();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean77 = serializableList65.addAll(37, (java.util.Collection<java.io.Serializable>) serializableSet71);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 37, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(serializableCollection43);
        org.junit.Assert.assertNotNull(serializableArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(serializableMap58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(serializableEnumeration61);
        org.junit.Assert.assertNotNull(serializableSet68);
        org.junit.Assert.assertNotNull(serializableIterableList69);
        org.junit.Assert.assertNotNull(serializableSet70);
        org.junit.Assert.assertNull(serializable72);
        org.junit.Assert.assertNull(wildcardComparator73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "[]");
    }

    @Test
    public void test341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test341");
        java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.util.AbstractList<java.io.Serializable>> strSetMap0 = java.util.Collections.emptyNavigableMap();
        java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.util.AbstractList<java.io.Serializable>> strSetMap1 = java.util.Collections.synchronizedNavigableMap(strSetMap0);
        java.lang.Class<java.util.AbstractSet<java.lang.String>> strSetClass2 = null;
        java.lang.Class<java.util.AbstractList<java.io.Serializable>> serializableListClass3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.util.AbstractList<java.io.Serializable>> strSetMap4 = java.util.Collections.checkedNavigableMap(strSetMap0, strSetClass2, serializableListClass3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSetMap0);
        org.junit.Assert.assertNotNull(strSetMap1);
    }

    @Test
    public void test342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test342");
        java.util.Enumeration<java.util.HashSet<java.lang.String>> strSetEnumeration1 = java.util.Collections.emptyEnumeration();
        java.util.List<java.util.Enumeration<java.util.HashSet<java.lang.String>>> strSetEnumerationList2 = java.util.Collections.nCopies((int) (byte) 100, strSetEnumeration1);
        java.util.ArrayList<java.util.HashSet<java.lang.String>> strSetList3 = java.util.Collections.list(strSetEnumeration1);
        org.junit.Assert.assertNotNull(strSetEnumeration1);
        org.junit.Assert.assertNotNull(strSetEnumerationList2);
        org.junit.Assert.assertNotNull(strSetList3);
    }

    @Test
    public void test343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test343");
        java.util.Enumeration<java.lang.Comparable<java.lang.String>[]> strComparableArrayEnumeration0 = java.util.Collections.emptyEnumeration();
        org.junit.Assert.assertNotNull(strComparableArrayEnumeration0);
    }

    @Test
    public void test344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test344");
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList41 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList41, serializableArray40);
        java.util.Collection<java.io.Serializable> serializableCollection43 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList41);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] { 'a', 10, 100, serializableList41, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList51 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList51, serializableArray50);
        boolean boolean55 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList51, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.ListIterator<java.io.Serializable> serializableItor56 = serializableList51.listIterator();
        java.util.SortedSet<java.io.Serializable> serializableSet57 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList58 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet57);
        java.util.SortedSet<java.io.Serializable> serializableSet59 = java.util.Collections.unmodifiableSortedSet(serializableSet57);
        java.util.TreeSet<java.io.Serializable> serializableSet60 = new java.util.TreeSet<java.io.Serializable>(serializableSet59);
        java.io.Serializable serializable61 = serializableSet60.pollFirst();
        java.io.Serializable serializable63 = serializableSet60.ceiling((java.io.Serializable) 0.0d);
        java.util.SortedSet<java.io.Serializable> serializableSet65 = serializableSet60.tailSet((java.io.Serializable) (short) 10);
        boolean boolean66 = serializableList51.remove((java.lang.Object) (short) 10);
        java.util.List<java.io.Serializable> serializableList69 = serializableList51.subList((int) (short) 0, 9);
        org.junit.Assert.assertNotNull(serializableArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(serializableCollection43);
        org.junit.Assert.assertNotNull(serializableArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(serializableItor56);
        org.junit.Assert.assertNotNull(serializableSet57);
        org.junit.Assert.assertNotNull(serializableIterableList58);
        org.junit.Assert.assertNotNull(serializableSet59);
        org.junit.Assert.assertNull(serializable61);
        org.junit.Assert.assertNull(serializable63);
        org.junit.Assert.assertNotNull(serializableSet65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(serializableList69);
    }

    @Test
    public void test345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test345");
        java.util.HashSet<java.lang.String> strSet1 = new java.util.HashSet<java.lang.String>((int) (byte) 10);
    }

    @Test
    public void test346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test346");
        java.util.HashSet<java.lang.String> strSet1 = new java.util.HashSet<java.lang.String>(10);
        boolean boolean3 = strSet1.add("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test347");
        java.util.HashSet<java.util.List<java.io.Serializable>> serializableListSet2 = new java.util.HashSet<java.util.List<java.io.Serializable>>(0, (float) 'a');
    }

    @Test
    public void test348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test348");
        java.util.Set<java.io.Serializable> serializableSet0 = null;
        java.lang.Class<java.io.Serializable> serializableClass1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.io.Serializable> serializableSet2 = java.util.Collections.checkedSet(serializableSet0, serializableClass1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: c");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test349");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean6 = strSet3.equals((java.lang.Object) false);
        boolean boolean7 = strSet3.isEmpty();
        boolean boolean9 = strSet3.equals((java.lang.Object) 10L);
        java.util.SortedSet<java.io.Serializable> serializableSet10 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList11 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet10);
        java.util.SortedSet<java.io.Serializable> serializableSet12 = java.util.Collections.unmodifiableSortedSet(serializableSet10);
        java.util.TreeSet<java.io.Serializable> serializableSet13 = new java.util.TreeSet<java.io.Serializable>(serializableSet12);
        boolean boolean15 = serializableSet13.remove((java.lang.Object) (-1.0f));
        java.util.Comparator<? super java.io.Serializable> wildcardComparator16 = serializableSet13.comparator();
        boolean boolean17 = strSet3.remove((java.lang.Object) serializableSet13);
        java.util.NavigableSet<java.io.Serializable> serializableSet18 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet13);
        java.util.SortedSet<java.io.Serializable> serializableSet19 = java.util.Collections.synchronizedSortedSet((java.util.SortedSet<java.io.Serializable>) serializableSet13);
        java.util.Enumeration<java.io.Serializable> serializableEnumeration20 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableSet13);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(serializableSet10);
        org.junit.Assert.assertNotNull(serializableIterableList11);
        org.junit.Assert.assertNotNull(serializableSet12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardComparator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(serializableSet18);
        org.junit.Assert.assertNotNull(serializableSet19);
        org.junit.Assert.assertNotNull(serializableEnumeration20);
    }

    @Test
    public void test350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test350");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        serializableSet3.clear();
        java.util.Iterator<java.io.Serializable> serializableItor7 = serializableSet3.descendingIterator();
        java.util.NavigableSet<java.io.Serializable> serializableSet8 = serializableSet3.descendingSet();
        java.util.NavigableSet<java.io.Serializable> serializableSet9 = java.util.Collections.synchronizedNavigableSet(serializableSet8);
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableItor7);
        org.junit.Assert.assertNotNull(serializableSet8);
        org.junit.Assert.assertNotNull(serializableSet9);
    }

    @Test
    public void test351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test351");
        java.util.HashSet<java.lang.String> strSet1 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList3 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet2);
        java.util.SortedSet<java.io.Serializable> serializableSet4 = java.util.Collections.unmodifiableSortedSet(serializableSet2);
        java.util.TreeSet<java.io.Serializable> serializableSet5 = new java.util.TreeSet<java.io.Serializable>(serializableSet4);
        java.io.Serializable serializable6 = serializableSet5.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator7 = serializableSet5.comparator();
        int int8 = serializableSet5.size();
        boolean boolean9 = strSet1.remove((java.lang.Object) serializableSet5);
        java.util.Enumeration<java.io.Serializable> serializableEnumeration10 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableSet5);
        java.util.SortedSet<java.io.Serializable> serializableSet11 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList12 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet11);
        java.util.SortedSet<java.io.Serializable> serializableSet13 = java.util.Collections.unmodifiableSortedSet(serializableSet11);
        java.util.TreeSet<java.io.Serializable> serializableSet14 = new java.util.TreeSet<java.io.Serializable>(serializableSet13);
        java.io.Serializable serializable15 = serializableSet14.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator16 = serializableSet14.comparator();
        java.util.NavigableSet<java.io.Serializable> serializableSet17 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet14);
        java.util.stream.Stream[][] streamArray18 = new java.util.stream.Stream[][] {};
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableSet14, streamArray18);
        java.util.Comparator<? super java.io.Serializable> wildcardComparator20 = serializableSet14.comparator();
        // The following exception was thrown during execution in test generation
        try {
            java.util.NavigableSet<java.io.Serializable> serializableSet22 = serializableSet5.tailSet((java.io.Serializable) serializableSet14, true);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class java.util.TreeSet cannot be cast to class java.lang.Comparable (java.util.TreeSet and java.lang.Comparable are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNotNull(serializableIterableList3);
        org.junit.Assert.assertNotNull(serializableSet4);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertNull(wildcardComparator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(serializableEnumeration10);
        org.junit.Assert.assertNotNull(serializableSet11);
        org.junit.Assert.assertNotNull(serializableIterableList12);
        org.junit.Assert.assertNotNull(serializableSet13);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertNull(wildcardComparator16);
        org.junit.Assert.assertNotNull(serializableSet17);
        org.junit.Assert.assertNotNull(streamArray18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(wildcardComparator20);
    }

    @Test
    public void test352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test352");
        java.util.List<java.lang.reflect.Type[]> typeArrayList0 = java.util.Collections.emptyList();
        org.junit.Assert.assertNotNull(typeArrayList0);
    }

    @Test
    public void test353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test353");
        java.util.HashSet<java.lang.String> strSet1 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList3 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet2);
        java.util.SortedSet<java.io.Serializable> serializableSet4 = java.util.Collections.unmodifiableSortedSet(serializableSet2);
        java.util.TreeSet<java.io.Serializable> serializableSet5 = new java.util.TreeSet<java.io.Serializable>(serializableSet4);
        java.io.Serializable serializable6 = serializableSet5.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator7 = serializableSet5.comparator();
        int int8 = serializableSet5.size();
        boolean boolean9 = strSet1.remove((java.lang.Object) serializableSet5);
        int int10 = serializableSet5.size();
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNotNull(serializableIterableList3);
        org.junit.Assert.assertNotNull(serializableSet4);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertNull(wildcardComparator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test354");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        serializableSet3.clear();
        java.util.NavigableSet<java.io.Serializable> serializableSet7 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet3);
        java.util.Enumeration<java.io.Serializable> serializableEnumeration8 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableSet3);
        java.io.Serializable serializable9 = serializableSet3.pollLast();
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableSet7);
        org.junit.Assert.assertNotNull(serializableEnumeration8);
        org.junit.Assert.assertNull(serializable9);
    }

    @Test
    public void test355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test355");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        boolean boolean5 = serializableSet3.remove((java.lang.Object) (-1.0f));
        java.io.Serializable serializable6 = serializableSet3.pollLast();
        java.io.Serializable serializable7 = null;
        java.io.Serializable serializable8 = serializableSet3.lower(serializable7);
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertNull(serializable8);
    }

    @Test
    public void test356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test356");
        java.io.Serializable[] serializableArray35 = new java.io.Serializable[] { false, (-1), 'a', (-1.0f), "hi!", '#', '4', '4', '#', (byte) 10, 100, 1.0f, (byte) -1, (short) 0, '4', (-1.0d), (-1.0d), 'a', 'a', (short) 10, "hi!", (byte) -1, 0.0d, 1.0f, (-1.0d), 0.0d, 100L, 10.0f, '4', 1L, (-1), (-1L), 100, 0L, true };
        java.util.ArrayList<java.io.Serializable> serializableList36 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList36, serializableArray35);
        java.lang.Object obj38 = null;
        boolean boolean39 = serializableList36.equals(obj38);
        java.util.stream.Stream<java.io.Serializable> serializableStream40 = serializableList36.stream();
        java.util.ListIterator<java.io.Serializable> serializableItor41 = serializableList36.listIterator();
        java.util.Collections.reverse((java.util.List<java.io.Serializable>) serializableList36);
        org.junit.Assert.assertNotNull(serializableArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(serializableStream40);
        org.junit.Assert.assertNotNull(serializableItor41);
    }

    @Test
    public void test357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test357");
        java.io.Serializable[] serializableArray35 = new java.io.Serializable[] { false, (-1), 'a', (-1.0f), "hi!", '#', '4', '4', '#', (byte) 10, 100, 1.0f, (byte) -1, (short) 0, '4', (-1.0d), (-1.0d), 'a', 'a', (short) 10, "hi!", (byte) -1, 0.0d, 1.0f, (-1.0d), 0.0d, 100L, 10.0f, '4', 1L, (-1), (-1L), 100, 0L, true };
        java.util.ArrayList<java.io.Serializable> serializableList36 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList36, serializableArray35);
        java.lang.Object obj38 = null;
        boolean boolean39 = serializableList36.equals(obj38);
        java.util.stream.Stream<java.io.Serializable> serializableStream40 = serializableList36.stream();
        java.util.ArrayList<java.io.Serializable> serializableList41 = new java.util.ArrayList<java.io.Serializable>((java.util.Collection<java.io.Serializable>) serializableList36);
        java.util.Collections.rotate((java.util.List<java.io.Serializable>) serializableList41, (int) (short) 10);
        java.util.List<java.io.Serializable> serializableList44 = java.util.Collections.synchronizedList((java.util.List<java.io.Serializable>) serializableList41);
        org.junit.Assert.assertNotNull(serializableArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(serializableStream40);
        org.junit.Assert.assertNotNull(serializableList44);
    }

    @Test
    public void test358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test358");
        java.util.NavigableMap<java.util.List<java.io.Serializable>, java.lang.AutoCloseable> serializableListMap0 = java.util.Collections.emptyNavigableMap();
        org.junit.Assert.assertNotNull(serializableListMap0);
    }

    @Test
    public void test359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test359");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration6 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableSet3);
        java.util.Comparator<? super java.io.Serializable> wildcardComparator7 = serializableSet3.comparator();
        serializableSet3.clear();
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableEnumeration6);
        org.junit.Assert.assertNull(wildcardComparator7);
    }

    @Test
    public void test360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test360");
        java.util.ListIterator<java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.util.AbstractList<java.io.Serializable>>> strSetMapItor0 = java.util.Collections.emptyListIterator();
        org.junit.Assert.assertNotNull(strSetMapItor0);
    }

    @Test
    public void test361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test361");
        java.io.Serializable[] serializableArray37 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList38 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList38, serializableArray37);
        java.util.Collection<java.io.Serializable> serializableCollection40 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList38);
        java.lang.Object obj41 = serializableList38.clone();
        java.util.Iterator<java.io.Serializable> serializableItor42 = serializableList38.iterator();
        java.util.ArrayList<java.util.Enumeration<java.util.HashSet<java.lang.String>>> strSetEnumerationList44 = new java.util.ArrayList<java.util.Enumeration<java.util.HashSet<java.lang.String>>>((int) (short) 100);
        boolean boolean45 = serializableList38.equals((java.lang.Object) strSetEnumerationList44);
        java.util.SortedSet<java.io.Serializable> serializableSet46 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList47 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet46);
        java.util.SortedSet<java.io.Serializable> serializableSet48 = java.util.Collections.unmodifiableSortedSet(serializableSet46);
        java.util.TreeSet<java.io.Serializable> serializableSet49 = new java.util.TreeSet<java.io.Serializable>(serializableSet48);
        java.io.Serializable serializable50 = serializableSet49.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator51 = serializableSet49.comparator();
        boolean boolean52 = serializableList38.retainAll((java.util.Collection<java.io.Serializable>) serializableSet49);
        java.lang.Class<java.io.Serializable> serializableClass53 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.io.Serializable> serializableSet54 = java.util.Collections.checkedSet((java.util.Set<java.io.Serializable>) serializableSet49, serializableClass53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: type");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(serializableCollection40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertNotNull(serializableItor42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(serializableSet46);
        org.junit.Assert.assertNotNull(serializableIterableList47);
        org.junit.Assert.assertNotNull(serializableSet48);
        org.junit.Assert.assertNull(serializable50);
        org.junit.Assert.assertNull(wildcardComparator51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test362");
        java.util.HashSet<java.util.List<java.io.Serializable>> serializableListSet0 = new java.util.HashSet<java.util.List<java.io.Serializable>>();
    }

    @Test
    public void test363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test363");
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList41 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList41, serializableArray40);
        java.util.Collection<java.io.Serializable> serializableCollection43 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList41);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] { 'a', 10, 100, serializableList41, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList51 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList51, serializableArray50);
        boolean boolean55 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList51, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.Map<java.io.Serializable, java.lang.Object> serializableMap58 = java.util.Collections.singletonMap((java.io.Serializable) (short) 1, (java.lang.Object) (short) 1);
        int int59 = serializableList51.lastIndexOf((java.lang.Object) (short) 1);
        serializableList51.clear();
        java.util.SortedSet<java.io.Serializable> serializableSet61 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList62 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet61);
        java.util.SortedSet<java.io.Serializable> serializableSet63 = java.util.Collections.unmodifiableSortedSet(serializableSet61);
        java.util.TreeSet<java.io.Serializable> serializableSet64 = new java.util.TreeSet<java.io.Serializable>(serializableSet63);
        java.io.Serializable serializable65 = serializableSet64.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator66 = serializableSet64.comparator();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration67 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableSet64);
        java.util.SortedSet<java.io.Serializable> serializableSet68 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList69 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet68);
        java.util.SortedSet<java.io.Serializable> serializableSet70 = java.util.Collections.unmodifiableSortedSet(serializableSet68);
        java.util.TreeSet<java.io.Serializable> serializableSet71 = new java.util.TreeSet<java.io.Serializable>(serializableSet70);
        java.io.Serializable serializable72 = serializableSet71.pollFirst();
        java.util.HashSet<java.util.ListIterator<java.io.Serializable>> serializableItorSet74 = new java.util.HashSet<java.util.ListIterator<java.io.Serializable>>((int) '4');
        java.util.NavigableSet<java.io.Serializable> serializableSet76 = serializableSet71.tailSet((java.io.Serializable) '4', true);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator77 = serializableSet71.spliterator();
        boolean boolean78 = serializableSet64.addAll((java.util.Collection<java.io.Serializable>) serializableSet71);
        java.util.SortedSet<java.io.Serializable> serializableSet79 = java.util.Collections.synchronizedSortedSet((java.util.SortedSet<java.io.Serializable>) serializableSet64);
        boolean boolean80 = serializableList51.retainAll((java.util.Collection<java.io.Serializable>) serializableSet64);
        java.util.Set<java.io.Serializable> serializableSet81 = java.util.Collections.synchronizedSet((java.util.Set<java.io.Serializable>) serializableSet64);
        org.junit.Assert.assertNotNull(serializableArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(serializableCollection43);
        org.junit.Assert.assertNotNull(serializableArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(serializableMap58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(serializableSet61);
        org.junit.Assert.assertNotNull(serializableIterableList62);
        org.junit.Assert.assertNotNull(serializableSet63);
        org.junit.Assert.assertNull(serializable65);
        org.junit.Assert.assertNull(wildcardComparator66);
        org.junit.Assert.assertNotNull(serializableEnumeration67);
        org.junit.Assert.assertNotNull(serializableSet68);
        org.junit.Assert.assertNotNull(serializableIterableList69);
        org.junit.Assert.assertNotNull(serializableSet70);
        org.junit.Assert.assertNull(serializable72);
        org.junit.Assert.assertNotNull(serializableSet76);
        org.junit.Assert.assertNotNull(serializableSpliterator77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(serializableSet79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(serializableSet81);
    }

    @Test
    public void test364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test364");
        java.util.ArrayList<java.io.Serializable> serializableList1 = new java.util.ArrayList<java.io.Serializable>(100);
        java.lang.String[] strArray5 = new java.lang.String[] { "", "", "hi!" };
        java.lang.Comparable<java.lang.String>[] strComparableArray6 = serializableList1.toArray((java.lang.Comparable<java.lang.String>[]) strArray5);
        java.util.Iterator<java.io.Serializable> serializableItor7 = serializableList1.iterator();
        java.util.SortedSet<java.io.Serializable> serializableSet8 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList9 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet8);
        java.util.SortedSet<java.io.Serializable> serializableSet10 = java.util.Collections.unmodifiableSortedSet(serializableSet8);
        java.util.TreeSet<java.io.Serializable> serializableSet11 = new java.util.TreeSet<java.io.Serializable>(serializableSet10);
        java.util.HashSet<java.lang.String> strSet13 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.lang.Object obj14 = strSet13.clone();
        java.io.Serializable serializable15 = serializableSet11.lower((java.io.Serializable) strSet13);
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        boolean boolean22 = strSet19.equals((java.lang.Object) false);
        boolean boolean23 = strSet19.isEmpty();
        boolean boolean25 = strSet19.equals((java.lang.Object) 10L);
        java.util.SortedSet<java.io.Serializable> serializableSet26 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList27 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet26);
        java.util.SortedSet<java.io.Serializable> serializableSet28 = java.util.Collections.unmodifiableSortedSet(serializableSet26);
        java.util.TreeSet<java.io.Serializable> serializableSet29 = new java.util.TreeSet<java.io.Serializable>(serializableSet28);
        boolean boolean31 = serializableSet29.remove((java.lang.Object) (-1.0f));
        java.util.Comparator<? super java.io.Serializable> wildcardComparator32 = serializableSet29.comparator();
        boolean boolean33 = strSet19.remove((java.lang.Object) serializableSet29);
        boolean boolean34 = strSet13.remove((java.lang.Object) serializableSet29);
        java.util.NavigableSet<java.io.Serializable> serializableSet35 = java.util.Collections.synchronizedNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet29);
        boolean boolean36 = java.util.Collections.disjoint((java.util.Collection<java.io.Serializable>) serializableList1, (java.util.Collection<java.io.Serializable>) serializableSet29);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable37 = serializableSet29.last();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strComparableArray6);
        org.junit.Assert.assertNotNull(serializableItor7);
        org.junit.Assert.assertNotNull(serializableSet8);
        org.junit.Assert.assertNotNull(serializableIterableList9);
        org.junit.Assert.assertNotNull(serializableSet10);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "[]");
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(serializableSet26);
        org.junit.Assert.assertNotNull(serializableIterableList27);
        org.junit.Assert.assertNotNull(serializableSet28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(wildcardComparator32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(serializableSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test365");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.util.HashSet<java.lang.String> strSet5 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.lang.Object obj6 = strSet5.clone();
        java.io.Serializable serializable7 = serializableSet3.lower((java.io.Serializable) strSet5);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet11 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet11, strArray10);
        boolean boolean14 = strSet11.equals((java.lang.Object) false);
        boolean boolean15 = strSet11.isEmpty();
        boolean boolean17 = strSet11.equals((java.lang.Object) 10L);
        java.util.SortedSet<java.io.Serializable> serializableSet18 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList19 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet18);
        java.util.SortedSet<java.io.Serializable> serializableSet20 = java.util.Collections.unmodifiableSortedSet(serializableSet18);
        java.util.TreeSet<java.io.Serializable> serializableSet21 = new java.util.TreeSet<java.io.Serializable>(serializableSet20);
        boolean boolean23 = serializableSet21.remove((java.lang.Object) (-1.0f));
        java.util.Comparator<? super java.io.Serializable> wildcardComparator24 = serializableSet21.comparator();
        boolean boolean25 = strSet11.remove((java.lang.Object) serializableSet21);
        boolean boolean26 = strSet5.remove((java.lang.Object) serializableSet21);
        boolean boolean28 = strSet5.add("hi!");
        java.lang.Object obj29 = strSet5.clone();
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "[]");
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(serializableSet18);
        org.junit.Assert.assertNotNull(serializableIterableList19);
        org.junit.Assert.assertNotNull(serializableSet20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardComparator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "[hi!]");
    }

    @Test
    public void test366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test366");
        java.util.SortedSet<java.lang.String> strSet0 = java.util.Collections.emptySortedSet();
        org.junit.Assert.assertNotNull(strSet0);
    }

    @Test
    public void test367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test367");
        java.util.List<java.io.Serializable> serializableList0 = null;
        java.util.SortedSet<java.io.Serializable> serializableSet1 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList2 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet1);
        java.util.SortedSet<java.io.Serializable> serializableSet3 = java.util.Collections.unmodifiableSortedSet(serializableSet1);
        java.util.TreeSet<java.io.Serializable> serializableSet4 = new java.util.TreeSet<java.io.Serializable>(serializableSet3);
        java.io.Serializable serializable5 = serializableSet4.pollFirst();
        java.io.Serializable serializable7 = serializableSet4.ceiling((java.io.Serializable) 0.0d);
        java.io.Serializable serializable8 = serializableSet4.pollLast();
        java.io.Serializable[] serializableArray47 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList48 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList48, serializableArray47);
        java.util.Collection<java.io.Serializable> serializableCollection50 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList48);
        java.lang.Object[] objArray51 = serializableList48.toArray();
        java.util.List<java.util.List<java.io.Serializable>> serializableListList52 = java.util.Collections.nCopies(0, (java.util.List<java.io.Serializable>) serializableList48);
        java.io.Serializable serializable53 = serializableSet4.ceiling((java.io.Serializable) 0);
        java.io.Serializable[] serializableArray91 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList92 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList92, serializableArray91);
        java.util.Collection<java.io.Serializable> serializableCollection94 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList92);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean95 = java.util.Collections.replaceAll(serializableList0, serializable53, (java.io.Serializable) serializableList92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet1);
        org.junit.Assert.assertNotNull(serializableIterableList2);
        org.junit.Assert.assertNotNull(serializableSet3);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(serializableArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(serializableCollection50);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertNotNull(serializableListList52);
        org.junit.Assert.assertNull(serializable53);
        org.junit.Assert.assertNotNull(serializableArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(serializableCollection94);
    }

    @Test
    public void test368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test368");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        java.util.NavigableSet<java.io.Serializable> serializableSet6 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet3);
        java.util.SortedSet<java.io.Serializable> serializableSet7 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList8 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet7);
        java.util.SortedSet<java.io.Serializable> serializableSet9 = java.util.Collections.unmodifiableSortedSet(serializableSet7);
        java.util.TreeSet<java.io.Serializable> serializableSet10 = new java.util.TreeSet<java.io.Serializable>(serializableSet9);
        java.util.HashSet<java.lang.String> strSet12 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.lang.Object obj13 = strSet12.clone();
        java.io.Serializable serializable14 = serializableSet10.lower((java.io.Serializable) strSet12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        boolean boolean21 = strSet18.equals((java.lang.Object) false);
        boolean boolean22 = strSet18.isEmpty();
        boolean boolean24 = strSet18.equals((java.lang.Object) 10L);
        java.util.SortedSet<java.io.Serializable> serializableSet25 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList26 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet25);
        java.util.SortedSet<java.io.Serializable> serializableSet27 = java.util.Collections.unmodifiableSortedSet(serializableSet25);
        java.util.TreeSet<java.io.Serializable> serializableSet28 = new java.util.TreeSet<java.io.Serializable>(serializableSet27);
        boolean boolean30 = serializableSet28.remove((java.lang.Object) (-1.0f));
        java.util.Comparator<? super java.io.Serializable> wildcardComparator31 = serializableSet28.comparator();
        boolean boolean32 = strSet18.remove((java.lang.Object) serializableSet28);
        boolean boolean33 = strSet12.remove((java.lang.Object) serializableSet28);
        boolean boolean34 = serializableSet3.remove((java.lang.Object) boolean33);
        java.util.NavigableSet<java.io.Serializable> serializableSet35 = java.util.Collections.synchronizedNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet3);
        java.lang.Class<java.io.Serializable> serializableClass36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collection<java.io.Serializable> serializableCollection37 = java.util.Collections.checkedCollection((java.util.Collection<java.io.Serializable>) serializableSet3, serializableClass36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: type");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableSet6);
        org.junit.Assert.assertNotNull(serializableSet7);
        org.junit.Assert.assertNotNull(serializableIterableList8);
        org.junit.Assert.assertNotNull(serializableSet9);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "[]");
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(serializableSet25);
        org.junit.Assert.assertNotNull(serializableIterableList26);
        org.junit.Assert.assertNotNull(serializableSet27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardComparator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(serializableSet35);
    }

    @Test
    public void test369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test369");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.util.ArrayList<java.io.Serializable> serializableList4 = new java.util.ArrayList<java.io.Serializable>((java.util.Collection<java.io.Serializable>) serializableSet2);
        java.util.TreeSet<java.lang.String> strSet5 = new java.util.TreeSet<java.lang.String>();
        java.util.SortedSet<java.io.Serializable> serializableSet6 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList7 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet6);
        java.util.SortedSet<java.io.Serializable> serializableSet8 = java.util.Collections.unmodifiableSortedSet(serializableSet6);
        boolean boolean9 = strSet5.removeAll((java.util.Collection<java.io.Serializable>) serializableSet8);
        java.util.ArrayList<java.io.Serializable> serializableList10 = new java.util.ArrayList<java.io.Serializable>((java.util.Collection<java.io.Serializable>) serializableSet8);
        java.util.Collections.copy((java.util.List<java.io.Serializable>) serializableList4, (java.util.List<java.io.Serializable>) serializableList10);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collections.swap((java.util.List<java.io.Serializable>) serializableList4, (int) (short) 100, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNotNull(serializableSet6);
        org.junit.Assert.assertNotNull(serializableIterableList7);
        org.junit.Assert.assertNotNull(serializableSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test370");
        java.util.HashSet<java.lang.String> strSet1 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.lang.Object obj2 = strSet1.clone();
        java.lang.Object obj3 = null;
        boolean boolean4 = strSet1.equals(obj3);
        java.io.Serializable[] serializableArray45 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList46 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList46, serializableArray45);
        java.util.Collection<java.io.Serializable> serializableCollection48 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList46);
        java.io.Serializable[] serializableArray55 = new java.io.Serializable[] { 'a', 10, 100, serializableList46, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList56 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList56, serializableArray55);
        boolean boolean60 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList56, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        serializableList56.add(10, (java.io.Serializable) '#');
        java.io.Serializable serializable65 = serializableList56.remove(0);
        java.util.Set<java.util.List<java.io.Serializable>> serializableListSet66 = java.util.Collections.singleton((java.util.List<java.io.Serializable>) serializableList56);
        boolean boolean67 = strSet1.removeAll((java.util.Collection<java.io.Serializable>) serializableList56);
        boolean boolean69 = strSet1.add("");
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(serializableArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(serializableCollection48);
        org.junit.Assert.assertNotNull(serializableArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + serializable65 + "' != '" + 'a' + "'", serializable65, 'a');
        org.junit.Assert.assertNotNull(serializableListSet66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test371");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = null;
        java.lang.Class<java.io.Serializable> serializableClass1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.checkedSortedSet(serializableSet0, serializableClass1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: c");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test372");
        java.util.Enumeration<java.util.Comparator<java.lang.CharSequence>> charSequenceComparatorEnumeration0 = java.util.Collections.emptyEnumeration();
        org.junit.Assert.assertNotNull(charSequenceComparatorEnumeration0);
    }

    @Test
    public void test373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test373");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        serializableSet3.clear();
        java.util.Iterator<java.io.Serializable> serializableItor7 = serializableSet3.descendingIterator();
        java.util.NavigableSet<java.io.Serializable> serializableSet8 = serializableSet3.descendingSet();
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable9 = serializableSet3.last();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableItor7);
        org.junit.Assert.assertNotNull(serializableSet8);
    }

    @Test
    public void test374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test374");
        java.io.Serializable[] serializableArray37 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList38 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList38, serializableArray37);
        java.util.Collection<java.io.Serializable> serializableCollection40 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList38);
        java.lang.Object[] objArray41 = serializableList38.toArray();
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet46 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet46, strArray45);
        boolean boolean49 = strSet46.equals((java.lang.Object) false);
        int int50 = strSet46.size();
        java.io.Serializable serializable51 = serializableList38.set((int) '#', (java.io.Serializable) strSet46);
        java.util.SortedSet<java.io.Serializable> serializableSet52 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList53 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet52);
        java.util.SortedSet<java.io.Serializable> serializableSet54 = java.util.Collections.unmodifiableSortedSet(serializableSet52);
        java.util.TreeSet<java.io.Serializable> serializableSet55 = new java.util.TreeSet<java.io.Serializable>(serializableSet54);
        boolean boolean57 = serializableSet55.remove((java.lang.Object) (-1.0f));
        java.io.Serializable serializable58 = serializableSet55.pollLast();
        java.util.SortedSet<java.io.Serializable> serializableSet59 = java.util.Collections.unmodifiableSortedSet((java.util.SortedSet<java.io.Serializable>) serializableSet55);
        boolean boolean60 = serializableList38.addAll((java.util.Collection<java.io.Serializable>) serializableSet55);
        java.lang.Object obj61 = serializableSet55.clone();
        org.junit.Assert.assertNotNull(serializableArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(serializableCollection40);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + (byte) -1 + "'", serializable51, (byte) -1);
        org.junit.Assert.assertNotNull(serializableSet52);
        org.junit.Assert.assertNotNull(serializableIterableList53);
        org.junit.Assert.assertNotNull(serializableSet54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(serializable58);
        org.junit.Assert.assertNotNull(serializableSet59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "[]");
    }

    @Test
    public void test375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test375");
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList41 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList41, serializableArray40);
        java.util.Collection<java.io.Serializable> serializableCollection43 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList41);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] { 'a', 10, 100, serializableList41, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList51 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList51, serializableArray50);
        boolean boolean55 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList51, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.Map<java.io.Serializable, java.lang.Object> serializableMap58 = java.util.Collections.singletonMap((java.io.Serializable) (short) 1, (java.lang.Object) (short) 1);
        int int59 = serializableList51.lastIndexOf((java.lang.Object) (short) 1);
        serializableList51.clear();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration61 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableList51);
        java.util.Random random62 = null;
        java.util.Collections.shuffle((java.util.List<java.io.Serializable>) serializableList51, random62);
        serializableList51.trimToSize();
        java.util.Random random65 = null;
        java.util.Collections.shuffle((java.util.List<java.io.Serializable>) serializableList51, random65);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator67 = serializableList51.spliterator();
        org.junit.Assert.assertNotNull(serializableArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(serializableCollection43);
        org.junit.Assert.assertNotNull(serializableArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(serializableMap58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(serializableEnumeration61);
        org.junit.Assert.assertNotNull(serializableSpliterator67);
    }

    @Test
    public void test376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test376");
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet0 = java.util.Collections.emptySet();
        org.junit.Assert.assertNotNull(strComparableSet0);
    }

    @Test
    public void test377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test377");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        int int6 = serializableSet3.size();
        java.io.Serializable serializable7 = serializableSet3.pollFirst();
        java.util.SortedSet<java.io.Serializable> serializableSet8 = java.util.Collections.synchronizedSortedSet((java.util.SortedSet<java.io.Serializable>) serializableSet3);
        java.util.TreeSet<java.io.Serializable> serializableSet9 = new java.util.TreeSet<java.io.Serializable>((java.util.SortedSet<java.io.Serializable>) serializableSet3);
        boolean boolean10 = serializableSet9.isEmpty();
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNotNull(serializableSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test378");
        java.io.Serializable[] serializableArray37 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList38 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList38, serializableArray37);
        java.util.Collection<java.io.Serializable> serializableCollection40 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList38);
        java.lang.Object obj41 = serializableList38.clone();
        java.util.Iterator<java.io.Serializable> serializableItor42 = serializableList38.iterator();
        java.util.ArrayList<java.util.Enumeration<java.util.HashSet<java.lang.String>>> strSetEnumerationList44 = new java.util.ArrayList<java.util.Enumeration<java.util.HashSet<java.lang.String>>>((int) (short) 100);
        boolean boolean45 = serializableList38.equals((java.lang.Object) strSetEnumerationList44);
        java.lang.Object[] objArray46 = serializableList38.toArray();
        java.util.Collections.reverse((java.util.List<java.io.Serializable>) serializableList38);
        org.junit.Assert.assertNotNull(serializableArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(serializableCollection40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertNotNull(serializableItor42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
    }

    @Test
    public void test379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test379");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        boolean boolean6 = serializableSet3.isEmpty();
        serializableSet3.clear();
        java.util.TreeSet<java.io.Serializable> serializableSet8 = new java.util.TreeSet<java.io.Serializable>((java.util.SortedSet<java.io.Serializable>) serializableSet3);
        java.util.stream.Stream<java.io.Serializable> serializableStream9 = serializableSet3.parallelStream();
        java.util.Iterator<java.io.Serializable> serializableItor10 = serializableSet3.iterator();
        java.io.Serializable[] serializableArray51 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList52 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList52, serializableArray51);
        java.util.Collection<java.io.Serializable> serializableCollection54 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList52);
        java.io.Serializable[] serializableArray61 = new java.io.Serializable[] { 'a', 10, 100, serializableList52, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList62 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList62, serializableArray61);
        boolean boolean66 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList62, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator67 = serializableList62.spliterator();
        java.util.List<java.util.Set<java.io.Serializable>> serializableSetList68 = java.util.Collections.emptyList();
        int int69 = serializableList62.indexOf((java.lang.Object) serializableSetList68);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean70 = java.util.Collections.disjoint((java.util.Collection<java.io.Serializable>) serializableSet3, (java.util.Collection<java.io.Serializable>) serializableList62);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class java.util.ArrayList cannot be cast to class java.lang.Comparable (java.util.ArrayList and java.lang.Comparable are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(serializableStream9);
        org.junit.Assert.assertNotNull(serializableItor10);
        org.junit.Assert.assertNotNull(serializableArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(serializableCollection54);
        org.junit.Assert.assertNotNull(serializableArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(serializableSpliterator67);
        org.junit.Assert.assertNotNull(serializableSetList68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
    }

    @Test
    public void test380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test380");
        java.io.Serializable[] serializableArray35 = new java.io.Serializable[] { false, (-1), 'a', (-1.0f), "hi!", '#', '4', '4', '#', (byte) 10, 100, 1.0f, (byte) -1, (short) 0, '4', (-1.0d), (-1.0d), 'a', 'a', (short) 10, "hi!", (byte) -1, 0.0d, 1.0f, (-1.0d), 0.0d, 100L, 10.0f, '4', 1L, (-1), (-1L), 100, 0L, true };
        java.util.ArrayList<java.io.Serializable> serializableList36 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList36, serializableArray35);
        java.lang.Object obj38 = null;
        boolean boolean39 = serializableList36.equals(obj38);
        java.util.ListIterator<java.io.Serializable> serializableItor40 = serializableList36.listIterator();
        java.lang.String str41 = serializableList36.toString();
        java.lang.Class<?> wildcardClass42 = serializableList36.getClass();
        org.junit.Assert.assertNotNull(serializableArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(serializableItor40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[false, -1, a, -1.0, hi!, #, 4, 4, #, 10, 100, 1.0, -1, 0, 4, -1.0, -1.0, a, a, 10, hi!, -1, 0.0, 1.0, -1.0, 0.0, 100, 10.0, 4, 1, -1, -1, 100, 0, true]" + "'", str41, "[false, -1, a, -1.0, hi!, #, 4, 4, #, 10, 100, 1.0, -1, 0, 4, -1.0, -1.0, a, a, 10, hi!, -1, 0.0, 1.0, -1.0, 0.0, 100, 10.0, 4, 1, -1, -1, 100, 0, true]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test381");
        java.util.Collection<java.io.Serializable> serializableCollection0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.io.Serializable> serializableList1 = new java.util.ArrayList<java.io.Serializable>(serializableCollection0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test382");
        java.util.ArrayList<java.io.Serializable> serializableList1 = new java.util.ArrayList<java.io.Serializable>(100);
        serializableList1.clear();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration3 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableList1);
        java.util.ListIterator<java.io.Serializable> serializableItor4 = serializableList1.listIterator();
        org.junit.Assert.assertNotNull(serializableEnumeration3);
        org.junit.Assert.assertNotNull(serializableItor4);
    }

    @Test
    public void test383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test383");
        java.util.Comparator<java.lang.Comparable<java.lang.String>[]> strComparableArrayComparator0 = java.util.Collections.reverseOrder();
        org.junit.Assert.assertNotNull(strComparableArrayComparator0);
    }

    @Test
    public void test384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test384");
        java.util.SortedMap<java.util.Enumeration<java.util.HashSet<java.lang.String>>, java.util.Iterator<java.io.Serializable>> strSetEnumerationMap0 = java.util.Collections.emptySortedMap();
        java.util.SortedMap<java.util.Enumeration<java.util.HashSet<java.lang.String>>, java.util.Iterator<java.io.Serializable>> strSetEnumerationMap1 = java.util.Collections.synchronizedSortedMap(strSetEnumerationMap0);
        java.lang.Class<java.util.Enumeration<java.util.HashSet<java.lang.String>>> strSetEnumerationClass2 = null;
        java.lang.Class<java.util.Iterator<java.io.Serializable>> serializableItorClass3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.SortedMap<java.util.Enumeration<java.util.HashSet<java.lang.String>>, java.util.Iterator<java.io.Serializable>> strSetEnumerationMap4 = java.util.Collections.checkedSortedMap(strSetEnumerationMap0, strSetEnumerationClass2, serializableItorClass3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSetEnumerationMap0);
        org.junit.Assert.assertNotNull(strSetEnumerationMap1);
    }

    @Test
    public void test385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test385");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean6 = strSet3.equals((java.lang.Object) false);
        boolean boolean7 = strSet3.isEmpty();
        boolean boolean9 = strSet3.equals((java.lang.Object) 10L);
        java.util.SortedSet<java.io.Serializable> serializableSet10 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList11 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet10);
        java.util.SortedSet<java.io.Serializable> serializableSet12 = java.util.Collections.unmodifiableSortedSet(serializableSet10);
        java.util.TreeSet<java.io.Serializable> serializableSet13 = new java.util.TreeSet<java.io.Serializable>(serializableSet12);
        boolean boolean15 = serializableSet13.remove((java.lang.Object) (-1.0f));
        java.util.Comparator<? super java.io.Serializable> wildcardComparator16 = serializableSet13.comparator();
        boolean boolean17 = strSet3.remove((java.lang.Object) serializableSet13);
        java.util.NavigableSet<java.io.Serializable> serializableSet18 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet13);
        java.util.Set<java.io.Serializable> serializableSet19 = java.util.Collections.synchronizedSet((java.util.Set<java.io.Serializable>) serializableSet13);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(serializableSet10);
        org.junit.Assert.assertNotNull(serializableIterableList11);
        org.junit.Assert.assertNotNull(serializableSet12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardComparator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(serializableSet18);
        org.junit.Assert.assertNotNull(serializableSet19);
    }

    @Test
    public void test386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test386");
        // The following exception was thrown during execution in test generation
        try {
            java.util.HashSet<java.lang.String> strSet2 = new java.util.HashSet<java.lang.String>((int) (byte) 100, (float) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal load factor: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test387");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        boolean boolean6 = serializableSet3.isEmpty();
        serializableSet3.clear();
        java.io.Serializable serializable8 = serializableSet3.pollFirst();
        java.util.Collection<java.io.Serializable> serializableCollection9 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableSet3);
        java.util.ArrayList<java.io.Serializable> serializableList11 = new java.util.ArrayList<java.io.Serializable>(100);
        boolean boolean12 = serializableSet3.retainAll((java.util.Collection<java.io.Serializable>) serializableList11);
        java.lang.Object obj13 = serializableList11.clone();
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(serializableCollection9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "[]");
    }

    @Test
    public void test388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test388");
        java.io.Serializable[] serializableArray37 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList38 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList38, serializableArray37);
        java.util.Collection<java.io.Serializable> serializableCollection40 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList38);
        java.lang.Object[] objArray41 = serializableList38.toArray();
        java.util.ListIterator<java.io.Serializable> serializableItor42 = serializableList38.listIterator();
        java.io.Serializable serializable44 = serializableList38.get((int) ' ');
        java.util.Map<java.io.Serializable, java.lang.Object> serializableMap47 = java.util.Collections.singletonMap((java.io.Serializable) (short) 1, (java.lang.Object) (short) 1);
        boolean boolean48 = serializableList38.contains((java.lang.Object) serializableMap47);
        java.lang.Object obj49 = serializableList38.clone();
        org.junit.Assert.assertNotNull(serializableArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(serializableCollection40);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertNotNull(serializableItor42);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 1.0d + "'", serializable44, 1.0d);
        org.junit.Assert.assertNotNull(serializableMap47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
    }

    @Test
    public void test389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test389");
        java.util.NavigableSet<java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.util.AbstractList<java.io.Serializable>>> strSetMapSet0 = java.util.Collections.emptyNavigableSet();
        org.junit.Assert.assertNotNull(strSetMapSet0);
    }

    @Test
    public void test390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test390");
        java.util.ArrayList<java.util.Set<java.io.Serializable>> serializableSetList0 = new java.util.ArrayList<java.util.Set<java.io.Serializable>>();
    }

    @Test
    public void test391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test391");
        java.util.SortedSet<java.lang.Object> objSet0 = java.util.Collections.emptySortedSet();
        org.junit.Assert.assertNotNull(objSet0);
    }

    @Test
    public void test392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test392");
        // The following exception was thrown during execution in test generation
        try {
            java.util.HashSet<java.lang.String> strSet2 = new java.util.HashSet<java.lang.String>((-1), 1.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal initial capacity: -1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test393");
        java.util.HashSet<java.util.SortedMap<java.util.Enumeration<java.util.HashSet<java.lang.String>>, java.util.Iterator<java.io.Serializable>>> setEnumerationMapSet1 = new java.util.HashSet<java.util.SortedMap<java.util.Enumeration<java.util.HashSet<java.lang.String>>, java.util.Iterator<java.io.Serializable>>>((int) (byte) 0);
    }

    @Test
    public void test394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test394");
        java.util.NavigableMap<java.util.stream.Stream[], java.util.Set<java.io.Serializable>> streamArrayMap0 = java.util.Collections.emptyNavigableMap();
        org.junit.Assert.assertNotNull(streamArrayMap0);
    }

    @Test
    public void test395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test395");
        java.util.ListIterator<java.util.Iterator<java.io.Serializable>> serializableItorItor0 = java.util.Collections.emptyListIterator();
        org.junit.Assert.assertNotNull(serializableItorItor0);
    }

    @Test
    public void test396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test396");
        java.lang.String[] strArray1 = new java.lang.String[] { "" };
        java.util.HashSet<java.lang.String> strSet2 = new java.util.HashSet<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet2, strArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = strSet2.remove(obj4);
        java.util.SortedSet<java.io.Serializable> serializableSet6 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList7 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet6);
        java.util.SortedSet<java.io.Serializable> serializableSet8 = java.util.Collections.unmodifiableSortedSet(serializableSet6);
        java.util.TreeSet<java.io.Serializable> serializableSet9 = new java.util.TreeSet<java.io.Serializable>(serializableSet8);
        boolean boolean11 = serializableSet9.remove((java.lang.Object) (-1.0f));
        java.io.Serializable serializable12 = serializableSet9.pollLast();
        java.util.SortedSet<java.io.Serializable> serializableSet13 = java.util.Collections.unmodifiableSortedSet((java.util.SortedSet<java.io.Serializable>) serializableSet9);
        boolean boolean14 = strSet2.remove((java.lang.Object) serializableSet9);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator15 = serializableSet9.spliterator();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(serializableSet6);
        org.junit.Assert.assertNotNull(serializableIterableList7);
        org.junit.Assert.assertNotNull(serializableSet8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertNotNull(serializableSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(serializableSpliterator15);
    }

    @Test
    public void test397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test397");
        java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.util.AbstractList<java.io.Serializable>> strSetMap0 = java.util.Collections.emptyNavigableMap();
        java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.util.AbstractList<java.io.Serializable>> strSetMap1 = java.util.Collections.synchronizedNavigableMap(strSetMap0);
        java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.util.AbstractList<java.io.Serializable>> strSetMap2 = java.util.Collections.synchronizedNavigableMap(strSetMap1);
        java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.util.AbstractList<java.io.Serializable>> strSetMap3 = java.util.Collections.synchronizedNavigableMap(strSetMap2);
        java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.util.AbstractList<java.io.Serializable>> strSetMap4 = java.util.Collections.synchronizedNavigableMap(strSetMap2);
        java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.util.AbstractList<java.io.Serializable>> strSetMap5 = java.util.Collections.synchronizedNavigableMap(strSetMap2);
        java.lang.Class<java.util.AbstractSet<java.lang.String>> strSetClass6 = null;
        java.lang.Class<java.util.AbstractList<java.io.Serializable>> serializableListClass7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.NavigableMap<java.util.AbstractSet<java.lang.String>, java.util.AbstractList<java.io.Serializable>> strSetMap8 = java.util.Collections.checkedNavigableMap(strSetMap2, strSetClass6, serializableListClass7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSetMap0);
        org.junit.Assert.assertNotNull(strSetMap1);
        org.junit.Assert.assertNotNull(strSetMap2);
        org.junit.Assert.assertNotNull(strSetMap3);
        org.junit.Assert.assertNotNull(strSetMap4);
        org.junit.Assert.assertNotNull(strSetMap5);
    }

    @Test
    public void test398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test398");
        java.util.Enumeration<java.util.Iterator<java.io.Serializable>> serializableItorEnumeration0 = java.util.Collections.emptyEnumeration();
        org.junit.Assert.assertNotNull(serializableItorEnumeration0);
    }

    @Test
    public void test399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test399");
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList41 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList41, serializableArray40);
        java.util.Collection<java.io.Serializable> serializableCollection43 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList41);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] { 'a', 10, 100, serializableList41, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList51 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList51, serializableArray50);
        boolean boolean55 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList51, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator56 = serializableList51.spliterator();
        serializableList51.clear();
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet61 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet61, strArray60);
        boolean boolean64 = strSet61.equals((java.lang.Object) false);
        int int65 = strSet61.size();
        java.util.SortedSet<java.io.Serializable> serializableSet66 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList67 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet66);
        java.util.SortedSet<java.io.Serializable> serializableSet68 = java.util.Collections.unmodifiableSortedSet(serializableSet66);
        boolean boolean69 = strSet61.removeAll((java.util.Collection<java.io.Serializable>) serializableSet66);
        int int70 = serializableList51.lastIndexOf((java.lang.Object) strSet61);
        boolean boolean72 = strSet61.equals((java.lang.Object) (byte) 1);
        int int73 = strSet61.size();
        org.junit.Assert.assertNotNull(serializableArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(serializableCollection43);
        org.junit.Assert.assertNotNull(serializableArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(serializableSpliterator56);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(serializableSet66);
        org.junit.Assert.assertNotNull(serializableIterableList67);
        org.junit.Assert.assertNotNull(serializableSet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
    }

    @Test
    public void test400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test400");
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList41 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList41, serializableArray40);
        java.util.Collection<java.io.Serializable> serializableCollection43 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList41);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] { 'a', 10, 100, serializableList41, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList51 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList51, serializableArray50);
        boolean boolean55 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList51, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.SortedSet<java.io.Serializable> serializableSet57 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList58 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet57);
        java.util.SortedSet<java.io.Serializable> serializableSet59 = java.util.Collections.unmodifiableSortedSet(serializableSet57);
        java.util.TreeSet<java.io.Serializable> serializableSet60 = new java.util.TreeSet<java.io.Serializable>(serializableSet59);
        java.io.Serializable serializable61 = serializableSet60.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator62 = serializableSet60.comparator();
        java.util.NavigableSet<java.io.Serializable> serializableSet63 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet60);
        java.util.SortedSet<java.io.Serializable> serializableSet64 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList65 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet64);
        java.util.SortedSet<java.io.Serializable> serializableSet66 = java.util.Collections.unmodifiableSortedSet(serializableSet64);
        java.util.TreeSet<java.io.Serializable> serializableSet67 = new java.util.TreeSet<java.io.Serializable>(serializableSet66);
        java.util.HashSet<java.lang.String> strSet69 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.lang.Object obj70 = strSet69.clone();
        java.io.Serializable serializable71 = serializableSet67.lower((java.io.Serializable) strSet69);
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet75 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet75, strArray74);
        boolean boolean78 = strSet75.equals((java.lang.Object) false);
        boolean boolean79 = strSet75.isEmpty();
        boolean boolean81 = strSet75.equals((java.lang.Object) 10L);
        java.util.SortedSet<java.io.Serializable> serializableSet82 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList83 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet82);
        java.util.SortedSet<java.io.Serializable> serializableSet84 = java.util.Collections.unmodifiableSortedSet(serializableSet82);
        java.util.TreeSet<java.io.Serializable> serializableSet85 = new java.util.TreeSet<java.io.Serializable>(serializableSet84);
        boolean boolean87 = serializableSet85.remove((java.lang.Object) (-1.0f));
        java.util.Comparator<? super java.io.Serializable> wildcardComparator88 = serializableSet85.comparator();
        boolean boolean89 = strSet75.remove((java.lang.Object) serializableSet85);
        boolean boolean90 = strSet69.remove((java.lang.Object) serializableSet85);
        boolean boolean91 = serializableSet60.remove((java.lang.Object) boolean90);
        boolean boolean92 = serializableList51.addAll((int) (short) 0, (java.util.Collection<java.io.Serializable>) serializableSet60);
        java.lang.Object obj93 = serializableSet60.clone();
        org.junit.Assert.assertNotNull(serializableArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(serializableCollection43);
        org.junit.Assert.assertNotNull(serializableArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(serializableSet57);
        org.junit.Assert.assertNotNull(serializableIterableList58);
        org.junit.Assert.assertNotNull(serializableSet59);
        org.junit.Assert.assertNull(serializable61);
        org.junit.Assert.assertNull(wildcardComparator62);
        org.junit.Assert.assertNotNull(serializableSet63);
        org.junit.Assert.assertNotNull(serializableSet64);
        org.junit.Assert.assertNotNull(serializableIterableList65);
        org.junit.Assert.assertNotNull(serializableSet66);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "[]");
        org.junit.Assert.assertNull(serializable71);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(serializableSet82);
        org.junit.Assert.assertNotNull(serializableIterableList83);
        org.junit.Assert.assertNotNull(serializableSet84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(wildcardComparator88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "[]");
    }

    @Test
    public void test401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test401");
        java.util.ArrayList<java.io.Serializable> serializableList1 = new java.util.ArrayList<java.io.Serializable>((int) (byte) 0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList3 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet2);
        java.util.SortedSet<java.io.Serializable> serializableSet4 = java.util.Collections.unmodifiableSortedSet(serializableSet2);
        java.util.TreeSet<java.io.Serializable> serializableSet5 = new java.util.TreeSet<java.io.Serializable>(serializableSet4);
        java.io.Serializable serializable6 = serializableSet5.pollFirst();
        java.util.HashSet<java.util.ListIterator<java.io.Serializable>> serializableItorSet8 = new java.util.HashSet<java.util.ListIterator<java.io.Serializable>>((int) '4');
        java.util.NavigableSet<java.io.Serializable> serializableSet10 = serializableSet5.tailSet((java.io.Serializable) '4', true);
        java.util.SortedSet<java.io.Serializable> serializableSet12 = serializableSet5.headSet((java.io.Serializable) (short) 0);
        boolean boolean13 = serializableList1.retainAll((java.util.Collection<java.io.Serializable>) serializableSet5);
        java.util.HashSet<java.lang.String> strSet15 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        strSet15.clear();
        java.util.Spliterator<java.lang.String> strSpliterator17 = strSet15.spliterator();
        java.util.SortedSet<java.io.Serializable> serializableSet18 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList19 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet18);
        java.util.SortedSet<java.io.Serializable> serializableSet20 = java.util.Collections.unmodifiableSortedSet(serializableSet18);
        java.util.TreeSet<java.io.Serializable> serializableSet21 = new java.util.TreeSet<java.io.Serializable>(serializableSet20);
        java.io.Serializable serializable22 = serializableSet21.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator23 = serializableSet21.comparator();
        boolean boolean24 = strSet15.equals((java.lang.Object) serializableSet21);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean25 = serializableSet5.contains((java.lang.Object) strSet15);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class java.util.HashSet cannot be cast to class java.lang.Comparable (java.util.HashSet and java.lang.Comparable are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNotNull(serializableIterableList3);
        org.junit.Assert.assertNotNull(serializableSet4);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertNotNull(serializableSet10);
        org.junit.Assert.assertNotNull(serializableSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertNotNull(serializableSet18);
        org.junit.Assert.assertNotNull(serializableIterableList19);
        org.junit.Assert.assertNotNull(serializableSet20);
        org.junit.Assert.assertNull(serializable22);
        org.junit.Assert.assertNull(wildcardComparator23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test402");
        java.util.ArrayList<java.io.Serializable> serializableList1 = new java.util.ArrayList<java.io.Serializable>(100);
        java.lang.String[] strArray5 = new java.lang.String[] { "", "", "hi!" };
        java.lang.Comparable<java.lang.String>[] strComparableArray6 = serializableList1.toArray((java.lang.Comparable<java.lang.String>[]) strArray5);
        java.util.SortedMap<java.lang.Iterable<java.io.Serializable>, java.util.SortedMap<java.util.Enumeration<java.util.HashSet<java.lang.String>>, java.util.Iterator<java.io.Serializable>>> serializableIterableMap7 = java.util.Collections.emptySortedMap();
        int int8 = serializableList1.lastIndexOf((java.lang.Object) serializableIterableMap7);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strComparableArray6);
        org.junit.Assert.assertNotNull(serializableIterableMap7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test403");
        java.io.Serializable[] serializableArray51 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList52 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList52, serializableArray51);
        java.util.Collection<java.io.Serializable> serializableCollection54 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList52);
        java.io.Serializable[] serializableArray79 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList52, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList80 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList80, serializableArray79);
        serializableList80.ensureCapacity(100);
        boolean boolean85 = serializableList80.contains((java.lang.Object) (-1));
        java.util.List<java.io.Serializable> serializableList86 = java.util.Collections.synchronizedList((java.util.List<java.io.Serializable>) serializableList80);
        java.util.function.UnaryOperator<java.io.Serializable> serializableUnaryOperator87 = null;
        // The following exception was thrown during execution in test generation
        try {
            serializableList80.replaceAll(serializableUnaryOperator87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(serializableCollection54);
        org.junit.Assert.assertNotNull(serializableArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(serializableList86);
    }

    @Test
    public void test404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test404");
        java.util.HashSet<java.lang.String> strSet1 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        strSet1.clear();
        java.util.SortedSet<java.io.Serializable> serializableSet3 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList4 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet3);
        java.util.SortedSet<java.io.Serializable> serializableSet5 = java.util.Collections.unmodifiableSortedSet(serializableSet3);
        java.util.TreeSet<java.io.Serializable> serializableSet6 = new java.util.TreeSet<java.io.Serializable>(serializableSet5);
        java.io.Serializable serializable7 = serializableSet6.pollFirst();
        java.io.Serializable serializable9 = serializableSet6.ceiling((java.io.Serializable) 0.0d);
        java.io.Serializable serializable10 = serializableSet6.pollLast();
        boolean boolean11 = strSet1.remove((java.lang.Object) serializable10);
        strSet1.clear();
        java.util.SortedSet<java.io.Serializable> serializableSet13 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList14 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet13);
        java.util.SortedSet<java.io.Serializable> serializableSet15 = java.util.Collections.unmodifiableSortedSet(serializableSet13);
        java.util.TreeSet<java.io.Serializable> serializableSet16 = new java.util.TreeSet<java.io.Serializable>(serializableSet15);
        java.io.Serializable serializable17 = serializableSet16.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator18 = serializableSet16.comparator();
        java.util.NavigableSet<java.io.Serializable> serializableSet19 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet16);
        boolean boolean20 = strSet1.contains((java.lang.Object) serializableSet16);
        java.lang.Class<?> wildcardClass21 = serializableSet16.getClass();
        org.junit.Assert.assertNotNull(serializableSet3);
        org.junit.Assert.assertNotNull(serializableIterableList4);
        org.junit.Assert.assertNotNull(serializableSet5);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(serializableSet13);
        org.junit.Assert.assertNotNull(serializableIterableList14);
        org.junit.Assert.assertNotNull(serializableSet15);
        org.junit.Assert.assertNull(serializable17);
        org.junit.Assert.assertNull(wildcardComparator18);
        org.junit.Assert.assertNotNull(serializableSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test405");
        java.io.Serializable[] serializableArray35 = new java.io.Serializable[] { false, (-1), 'a', (-1.0f), "hi!", '#', '4', '4', '#', (byte) 10, 100, 1.0f, (byte) -1, (short) 0, '4', (-1.0d), (-1.0d), 'a', 'a', (short) 10, "hi!", (byte) -1, 0.0d, 1.0f, (-1.0d), 0.0d, 100L, 10.0f, '4', 1L, (-1), (-1L), 100, 0L, true };
        java.util.ArrayList<java.io.Serializable> serializableList36 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList36, serializableArray35);
        java.lang.Object obj38 = null;
        boolean boolean39 = serializableList36.equals(obj38);
        java.lang.Object obj40 = serializableList36.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.Serializable> serializableList43 = serializableList36.subList((int) (short) 1, 37);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 37");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[false, -1, a, -1.0, hi!, #, 4, 4, #, 10, 100, 1.0, -1, 0, 4, -1.0, -1.0, a, a, 10, hi!, -1, 0.0, 1.0, -1.0, 0.0, 100, 10.0, 4, 1, -1, -1, 100, 0, true]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "[false, -1, a, -1.0, hi!, #, 4, 4, #, 10, 100, 1.0, -1, 0, 4, -1.0, -1.0, a, a, 10, hi!, -1, 0.0, 1.0, -1.0, 0.0, 100, 10.0, 4, 1, -1, -1, 100, 0, true]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[false, -1, a, -1.0, hi!, #, 4, 4, #, 10, 100, 1.0, -1, 0, 4, -1.0, -1.0, a, a, 10, hi!, -1, 0.0, 1.0, -1.0, 0.0, 100, 10.0, 4, 1, -1, -1, 100, 0, true]");
    }

    @Test
    public void test406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test406");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        serializableSet3.clear();
        java.util.Iterator<java.io.Serializable> serializableItor7 = serializableSet3.descendingIterator();
        java.io.Serializable[] serializableArray59 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList60 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList60, serializableArray59);
        java.util.Collection<java.io.Serializable> serializableCollection62 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList60);
        java.io.Serializable[] serializableArray87 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList60, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList88 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList88, serializableArray87);
        serializableList88.ensureCapacity(100);
        java.lang.Object[] objArray92 = serializableList88.toArray();
        boolean boolean94 = serializableList88.remove((java.lang.Object) (byte) 0);
        java.io.Serializable serializable95 = serializableSet3.higher((java.io.Serializable) (byte) 0);
        java.util.Iterator<java.io.Serializable> serializableItor96 = serializableSet3.descendingIterator();
        java.util.SortedSet<java.io.Serializable> serializableSet97 = java.util.Collections.unmodifiableSortedSet((java.util.SortedSet<java.io.Serializable>) serializableSet3);
        java.util.Set<java.io.Serializable> serializableSet98 = java.util.Collections.synchronizedSet((java.util.Set<java.io.Serializable>) serializableSet3);
        java.io.Serializable serializable99 = serializableSet3.pollLast();
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableItor7);
        org.junit.Assert.assertNotNull(serializableArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(serializableCollection62);
        org.junit.Assert.assertNotNull(serializableArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNull(serializable95);
        org.junit.Assert.assertNotNull(serializableItor96);
        org.junit.Assert.assertNotNull(serializableSet97);
        org.junit.Assert.assertNotNull(serializableSet98);
        org.junit.Assert.assertNull(serializable99);
    }

    @Test
    public void test407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test407");
        java.util.HashSet<java.lang.String> strSet0 = new java.util.HashSet<java.lang.String>();
        java.util.SortedSet<java.io.Serializable> serializableSet1 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList2 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet1);
        java.util.SortedSet<java.io.Serializable> serializableSet3 = java.util.Collections.unmodifiableSortedSet(serializableSet1);
        java.util.TreeSet<java.io.Serializable> serializableSet4 = new java.util.TreeSet<java.io.Serializable>(serializableSet3);
        java.io.Serializable serializable5 = serializableSet4.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator6 = serializableSet4.comparator();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration7 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableSet4);
        java.util.NavigableSet<java.io.Serializable> serializableSet10 = serializableSet4.tailSet((java.io.Serializable) 100L, true);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator11 = serializableSet4.spliterator();
        boolean boolean12 = strSet0.remove((java.lang.Object) serializableSet4);
        java.util.SortedSet<java.io.Serializable> serializableSet13 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList14 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet13);
        java.util.SortedSet<java.io.Serializable> serializableSet15 = java.util.Collections.unmodifiableSortedSet(serializableSet13);
        boolean boolean16 = strSet0.remove((java.lang.Object) serializableSet15);
        java.lang.Class<java.io.Serializable> serializableClass17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.SortedSet<java.io.Serializable> serializableSet18 = java.util.Collections.checkedSortedSet(serializableSet15, serializableClass17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: type");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet1);
        org.junit.Assert.assertNotNull(serializableIterableList2);
        org.junit.Assert.assertNotNull(serializableSet3);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(serializableEnumeration7);
        org.junit.Assert.assertNotNull(serializableSet10);
        org.junit.Assert.assertNotNull(serializableSpliterator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(serializableSet13);
        org.junit.Assert.assertNotNull(serializableIterableList14);
        org.junit.Assert.assertNotNull(serializableSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test408");
        java.util.Map<java.lang.Comparable<java.lang.String>, java.util.NavigableSet<java.io.Serializable>> strComparableMap0 = java.util.Collections.emptyMap();
        org.junit.Assert.assertNotNull(strComparableMap0);
    }

    @Test
    public void test409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test409");
        java.util.HashSet<java.lang.String> strSet0 = new java.util.HashSet<java.lang.String>();
        java.util.SortedSet<java.io.Serializable> serializableSet1 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList2 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet1);
        java.util.SortedSet<java.io.Serializable> serializableSet3 = java.util.Collections.unmodifiableSortedSet(serializableSet1);
        java.util.TreeSet<java.io.Serializable> serializableSet4 = new java.util.TreeSet<java.io.Serializable>(serializableSet3);
        java.io.Serializable serializable5 = serializableSet4.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator6 = serializableSet4.comparator();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration7 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableSet4);
        java.util.NavigableSet<java.io.Serializable> serializableSet10 = serializableSet4.tailSet((java.io.Serializable) 100L, true);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator11 = serializableSet4.spliterator();
        boolean boolean12 = strSet0.remove((java.lang.Object) serializableSet4);
        java.util.SortedSet<java.io.Serializable> serializableSet13 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList14 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet13);
        java.util.SortedSet<java.io.Serializable> serializableSet15 = java.util.Collections.unmodifiableSortedSet(serializableSet13);
        boolean boolean16 = strSet0.remove((java.lang.Object) serializableSet15);
        java.util.SortedSet<java.io.Serializable> serializableSet17 = java.util.Collections.unmodifiableSortedSet(serializableSet15);
        org.junit.Assert.assertNotNull(serializableSet1);
        org.junit.Assert.assertNotNull(serializableIterableList2);
        org.junit.Assert.assertNotNull(serializableSet3);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertNull(wildcardComparator6);
        org.junit.Assert.assertNotNull(serializableEnumeration7);
        org.junit.Assert.assertNotNull(serializableSet10);
        org.junit.Assert.assertNotNull(serializableSpliterator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(serializableSet13);
        org.junit.Assert.assertNotNull(serializableIterableList14);
        org.junit.Assert.assertNotNull(serializableSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(serializableSet17);
    }

    @Test
    public void test410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test410");
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList41 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList41, serializableArray40);
        java.util.Collection<java.io.Serializable> serializableCollection43 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList41);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] { 'a', 10, 100, serializableList41, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList51 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList51, serializableArray50);
        boolean boolean55 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList51, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        serializableList51.add(10, (java.io.Serializable) '#');
        java.io.Serializable serializable60 = serializableList51.remove(0);
        java.util.HashSet<java.lang.String> strSet62 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        int int63 = strSet62.size();
        strSet62.clear();
        boolean boolean65 = serializableList51.add((java.io.Serializable) strSet62);
        boolean boolean67 = strSet62.add("[false, -1, a, -1.0, hi!, #, 4, 4, #, 10, 100, 1.0, -1, 0, 4, -1.0, -1.0, a, a, 10, hi!, -1, 0.0, 1.0, -1.0, 0.0, 100, 10.0, 4, 1, -1, -1, 100, 0, true]");
        org.junit.Assert.assertNotNull(serializableArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(serializableCollection43);
        org.junit.Assert.assertNotNull(serializableArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + serializable60 + "' != '" + 'a' + "'", serializable60, 'a');
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test411");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        java.util.NavigableSet<java.io.Serializable> serializableSet6 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet3);
        java.util.ArrayList<java.io.Serializable> serializableList8 = new java.util.ArrayList<java.io.Serializable>(100);
        java.lang.String[] strArray12 = new java.lang.String[] { "", "", "hi!" };
        java.lang.Comparable<java.lang.String>[] strComparableArray13 = serializableList8.toArray((java.lang.Comparable<java.lang.String>[]) strArray12);
        java.util.Random random14 = null;
        java.util.Collections.shuffle((java.util.List<java.io.Serializable>) serializableList8, random14);
        java.io.Serializable serializable16 = serializableSet3.ceiling((java.io.Serializable) random14);
        java.util.Iterator<java.io.Serializable> serializableItor17 = serializableSet3.iterator();
        java.util.NavigableSet<java.io.Serializable> serializableSet18 = serializableSet3.descendingSet();
        java.lang.Class<java.io.Serializable> serializableClass19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.SortedSet<java.io.Serializable> serializableSet20 = java.util.Collections.checkedSortedSet((java.util.SortedSet<java.io.Serializable>) serializableSet18, serializableClass19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: type");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableSet6);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strComparableArray13);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertNotNull(serializableItor17);
        org.junit.Assert.assertNotNull(serializableSet18);
    }

    @Test
    public void test412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test412");
        java.util.NavigableMap<java.util.Set<java.io.Serializable>, java.lang.String[]> serializableSetMap0 = java.util.Collections.emptyNavigableMap();
        org.junit.Assert.assertNotNull(serializableSetMap0);
    }

    @Test
    public void test413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test413");
        java.util.HashSet<java.lang.String> strSet1 = new java.util.HashSet<java.lang.String>((int) (short) 1);
        java.lang.Object obj2 = strSet1.clone();
        java.io.Serializable[] serializableArray43 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList44 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList44, serializableArray43);
        java.util.Collection<java.io.Serializable> serializableCollection46 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList44);
        java.io.Serializable[] serializableArray53 = new java.io.Serializable[] { 'a', 10, 100, serializableList44, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList54 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList54, serializableArray53);
        boolean boolean58 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList54, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        serializableList54.ensureCapacity((int) (short) -1);
        java.util.Collections.reverse((java.util.List<java.io.Serializable>) serializableList54);
        java.util.List<java.io.Serializable> serializableList62 = java.util.Collections.synchronizedList((java.util.List<java.io.Serializable>) serializableList54);
        java.util.Iterator<java.io.Serializable> serializableItor63 = serializableList54.iterator();
        boolean boolean64 = strSet1.removeAll((java.util.Collection<java.io.Serializable>) serializableList54);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "[]");
        org.junit.Assert.assertNotNull(serializableArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(serializableCollection46);
        org.junit.Assert.assertNotNull(serializableArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(serializableList62);
        org.junit.Assert.assertNotNull(serializableItor63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test414");
        java.util.HashSet<java.lang.String> strSet1 = new java.util.HashSet<java.lang.String>(10);
        java.util.Iterator<java.lang.String> strItor2 = strSet1.iterator();
        java.util.SortedSet<java.io.Serializable> serializableSet3 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList4 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet3);
        java.util.SortedSet<java.io.Serializable> serializableSet5 = java.util.Collections.unmodifiableSortedSet(serializableSet3);
        java.util.TreeSet<java.io.Serializable> serializableSet6 = new java.util.TreeSet<java.io.Serializable>(serializableSet5);
        java.io.Serializable serializable7 = serializableSet6.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator8 = serializableSet6.comparator();
        int int9 = serializableSet6.size();
        java.util.SortedSet<java.io.Serializable> serializableSet10 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList11 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet10);
        java.util.SortedSet<java.io.Serializable> serializableSet12 = java.util.Collections.unmodifiableSortedSet(serializableSet10);
        java.util.TreeSet<java.io.Serializable> serializableSet13 = new java.util.TreeSet<java.io.Serializable>(serializableSet12);
        java.io.Serializable serializable14 = serializableSet13.pollFirst();
        java.util.HashSet<java.util.ListIterator<java.io.Serializable>> serializableItorSet16 = new java.util.HashSet<java.util.ListIterator<java.io.Serializable>>((int) '4');
        java.util.NavigableSet<java.io.Serializable> serializableSet18 = serializableSet13.tailSet((java.io.Serializable) '4', true);
        boolean boolean19 = java.util.Collections.disjoint((java.util.Collection<java.io.Serializable>) serializableSet6, (java.util.Collection<java.io.Serializable>) serializableSet13);
        java.util.Set<java.io.Serializable> serializableSet20 = java.util.Collections.synchronizedSet((java.util.Set<java.io.Serializable>) serializableSet13);
        boolean boolean21 = strSet1.contains((java.lang.Object) serializableSet13);
        org.junit.Assert.assertNotNull(strItor2);
        org.junit.Assert.assertNotNull(serializableSet3);
        org.junit.Assert.assertNotNull(serializableIterableList4);
        org.junit.Assert.assertNotNull(serializableSet5);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNull(wildcardComparator8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(serializableSet10);
        org.junit.Assert.assertNotNull(serializableIterableList11);
        org.junit.Assert.assertNotNull(serializableSet12);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNotNull(serializableSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(serializableSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test415");
        java.io.Serializable[] serializableArray35 = new java.io.Serializable[] { false, (-1), 'a', (-1.0f), "hi!", '#', '4', '4', '#', (byte) 10, 100, 1.0f, (byte) -1, (short) 0, '4', (-1.0d), (-1.0d), 'a', 'a', (short) 10, "hi!", (byte) -1, 0.0d, 1.0f, (-1.0d), 0.0d, 100L, 10.0f, '4', 1L, (-1), (-1L), 100, 0L, true };
        java.util.ArrayList<java.io.Serializable> serializableList36 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList36, serializableArray35);
        java.lang.Object obj38 = null;
        boolean boolean39 = serializableList36.equals(obj38);
        boolean boolean40 = serializableList36.isEmpty();
        java.io.Serializable serializable43 = serializableList36.set(34, (java.io.Serializable) 'a');
        java.util.Collections.rotate((java.util.List<java.io.Serializable>) serializableList36, 1);
        org.junit.Assert.assertNotNull(serializableArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + true + "'", serializable43, true);
    }

    @Test
    public void test416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test416");
        java.io.Serializable[] serializableArray37 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList38 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList38, serializableArray37);
        java.util.Collection<java.io.Serializable> serializableCollection40 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList38);
        java.lang.Object[] objArray41 = serializableList38.toArray();
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet46 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet46, strArray45);
        boolean boolean49 = strSet46.equals((java.lang.Object) false);
        int int50 = strSet46.size();
        java.io.Serializable serializable51 = serializableList38.set((int) '#', (java.io.Serializable) strSet46);
        java.io.Serializable serializable52 = null;
        java.util.SortedSet<java.io.Serializable> serializableSet53 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList54 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet53);
        java.util.SortedSet<java.io.Serializable> serializableSet55 = java.util.Collections.unmodifiableSortedSet(serializableSet53);
        java.util.TreeSet<java.io.Serializable> serializableSet56 = new java.util.TreeSet<java.io.Serializable>(serializableSet55);
        java.io.Serializable serializable57 = serializableSet56.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator58 = serializableSet56.comparator();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration59 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableSet56);
        boolean boolean60 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList38, serializable52, (java.io.Serializable) serializableSet56);
        org.junit.Assert.assertNotNull(serializableArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(serializableCollection40);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + (byte) -1 + "'", serializable51, (byte) -1);
        org.junit.Assert.assertNotNull(serializableSet53);
        org.junit.Assert.assertNotNull(serializableIterableList54);
        org.junit.Assert.assertNotNull(serializableSet55);
        org.junit.Assert.assertNull(serializable57);
        org.junit.Assert.assertNull(wildcardComparator58);
        org.junit.Assert.assertNotNull(serializableEnumeration59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test417");
        java.util.SortedSet<java.util.Comparator<java.lang.CharSequence>> charSequenceComparatorSet0 = java.util.Collections.emptySortedSet();
        org.junit.Assert.assertNotNull(charSequenceComparatorSet0);
    }

    @Test
    public void test418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test418");
        // The following exception was thrown during execution in test generation
        try {
            java.util.HashSet<java.util.Set<java.io.Serializable>> serializableSetSet2 = new java.util.HashSet<java.util.Set<java.io.Serializable>>(10, 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal load factor: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test419");
        java.io.Serializable[] serializableArray38 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList39 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList39, serializableArray38);
        java.util.Collection<java.io.Serializable> serializableCollection41 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList39);
        java.lang.Object[] objArray42 = serializableList39.toArray();
        java.util.List<java.util.List<java.io.Serializable>> serializableListList43 = java.util.Collections.nCopies(0, (java.util.List<java.io.Serializable>) serializableList39);
        java.util.ArrayList<java.io.Serializable> serializableList44 = new java.util.ArrayList<java.io.Serializable>((java.util.Collection<java.io.Serializable>) serializableList39);
        java.io.Serializable serializable46 = serializableList39.get((int) (byte) 10);
        org.junit.Assert.assertNotNull(serializableArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(serializableCollection41);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertNotNull(serializableListList43);
        org.junit.Assert.assertEquals("'" + serializable46 + "' != '" + ' ' + "'", serializable46, ' ');
    }

    @Test
    public void test420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test420");
        java.util.HashSet<java.lang.String> strSet1 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.lang.Object obj2 = null;
        boolean boolean3 = strSet1.contains(obj2);
        java.util.SortedSet<java.io.Serializable> serializableSet4 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList5 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet4);
        java.util.SortedSet<java.io.Serializable> serializableSet6 = java.util.Collections.unmodifiableSortedSet(serializableSet4);
        java.util.TreeSet<java.io.Serializable> serializableSet7 = new java.util.TreeSet<java.io.Serializable>(serializableSet6);
        java.io.Serializable serializable8 = serializableSet7.pollFirst();
        java.util.HashSet<java.util.ListIterator<java.io.Serializable>> serializableItorSet10 = new java.util.HashSet<java.util.ListIterator<java.io.Serializable>>((int) '4');
        java.util.NavigableSet<java.io.Serializable> serializableSet12 = serializableSet7.tailSet((java.io.Serializable) '4', true);
        java.util.SortedSet<java.io.Serializable> serializableSet14 = serializableSet7.headSet((java.io.Serializable) (short) 0);
        java.util.SortedSet<java.io.Serializable> serializableSet15 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList16 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet15);
        java.util.SortedSet<java.io.Serializable> serializableSet17 = java.util.Collections.unmodifiableSortedSet(serializableSet15);
        java.util.TreeSet<java.io.Serializable> serializableSet18 = new java.util.TreeSet<java.io.Serializable>(serializableSet17);
        java.io.Serializable serializable19 = serializableSet18.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator20 = serializableSet18.comparator();
        serializableSet18.clear();
        java.util.NavigableSet<java.io.Serializable> serializableSet22 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet18);
        boolean boolean23 = serializableSet7.addAll((java.util.Collection<java.io.Serializable>) serializableSet22);
        boolean boolean24 = strSet1.removeAll((java.util.Collection<java.io.Serializable>) serializableSet7);
        java.io.Serializable[] serializableArray65 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList66 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList66, serializableArray65);
        java.util.Collection<java.io.Serializable> serializableCollection68 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList66);
        java.io.Serializable[] serializableArray75 = new java.io.Serializable[] { 'a', 10, 100, serializableList66, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList76 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList76, serializableArray75);
        boolean boolean80 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList76, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.Map<java.io.Serializable, java.lang.Object> serializableMap83 = java.util.Collections.singletonMap((java.io.Serializable) (short) 1, (java.lang.Object) (short) 1);
        int int84 = serializableList76.lastIndexOf((java.lang.Object) (short) 1);
        serializableList76.clear();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration86 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableList76);
        java.util.Random random87 = null;
        java.util.Collections.shuffle((java.util.List<java.io.Serializable>) serializableList76, random87);
        serializableList76.trimToSize();
        java.lang.String str90 = serializableList76.toString();
        java.util.stream.Stream<java.io.Serializable> serializableStream91 = serializableList76.stream();
        boolean boolean92 = strSet1.equals((java.lang.Object) serializableStream91);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(serializableSet4);
        org.junit.Assert.assertNotNull(serializableIterableList5);
        org.junit.Assert.assertNotNull(serializableSet6);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(serializableSet12);
        org.junit.Assert.assertNotNull(serializableSet14);
        org.junit.Assert.assertNotNull(serializableSet15);
        org.junit.Assert.assertNotNull(serializableIterableList16);
        org.junit.Assert.assertNotNull(serializableSet17);
        org.junit.Assert.assertNull(serializable19);
        org.junit.Assert.assertNull(wildcardComparator20);
        org.junit.Assert.assertNotNull(serializableSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(serializableArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(serializableCollection68);
        org.junit.Assert.assertNotNull(serializableArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(serializableMap83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(serializableEnumeration86);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[]" + "'", str90, "[]");
        org.junit.Assert.assertNotNull(serializableStream91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test421");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        boolean boolean6 = serializableSet3.isEmpty();
        serializableSet3.clear();
        java.util.Spliterator<java.io.Serializable> serializableSpliterator8 = serializableSet3.spliterator();
        java.io.Serializable serializable9 = serializableSet3.pollLast();
        java.util.NavigableSet<java.io.Serializable> serializableSet10 = java.util.Collections.synchronizedNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet3);
        java.util.stream.Stream<java.io.Serializable> serializableStream11 = serializableSet3.parallelStream();
        java.util.HashSet<java.lang.String> strSet13 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.util.SortedSet<java.io.Serializable> serializableSet14 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList15 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet14);
        java.util.SortedSet<java.io.Serializable> serializableSet16 = java.util.Collections.unmodifiableSortedSet(serializableSet14);
        java.util.TreeSet<java.io.Serializable> serializableSet17 = new java.util.TreeSet<java.io.Serializable>(serializableSet16);
        java.io.Serializable serializable18 = serializableSet17.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator19 = serializableSet17.comparator();
        int int20 = serializableSet17.size();
        boolean boolean21 = strSet13.remove((java.lang.Object) serializableSet17);
        java.io.Serializable serializable22 = serializableSet3.ceiling((java.io.Serializable) strSet13);
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(serializableSpliterator8);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertNotNull(serializableSet10);
        org.junit.Assert.assertNotNull(serializableStream11);
        org.junit.Assert.assertNotNull(serializableSet14);
        org.junit.Assert.assertNotNull(serializableIterableList15);
        org.junit.Assert.assertNotNull(serializableSet16);
        org.junit.Assert.assertNull(serializable18);
        org.junit.Assert.assertNull(wildcardComparator19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(serializable22);
    }

    @Test
    public void test422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test422");
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList41 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList41, serializableArray40);
        java.util.Collection<java.io.Serializable> serializableCollection43 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList41);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] { 'a', 10, 100, serializableList41, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList51 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList51, serializableArray50);
        boolean boolean55 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList51, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.SortedSet<java.io.Serializable> serializableSet57 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList58 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet57);
        java.util.SortedSet<java.io.Serializable> serializableSet59 = java.util.Collections.unmodifiableSortedSet(serializableSet57);
        java.util.TreeSet<java.io.Serializable> serializableSet60 = new java.util.TreeSet<java.io.Serializable>(serializableSet59);
        java.io.Serializable serializable61 = serializableSet60.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator62 = serializableSet60.comparator();
        java.util.NavigableSet<java.io.Serializable> serializableSet63 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet60);
        java.util.SortedSet<java.io.Serializable> serializableSet64 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList65 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet64);
        java.util.SortedSet<java.io.Serializable> serializableSet66 = java.util.Collections.unmodifiableSortedSet(serializableSet64);
        java.util.TreeSet<java.io.Serializable> serializableSet67 = new java.util.TreeSet<java.io.Serializable>(serializableSet66);
        java.util.HashSet<java.lang.String> strSet69 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.lang.Object obj70 = strSet69.clone();
        java.io.Serializable serializable71 = serializableSet67.lower((java.io.Serializable) strSet69);
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet75 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet75, strArray74);
        boolean boolean78 = strSet75.equals((java.lang.Object) false);
        boolean boolean79 = strSet75.isEmpty();
        boolean boolean81 = strSet75.equals((java.lang.Object) 10L);
        java.util.SortedSet<java.io.Serializable> serializableSet82 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList83 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet82);
        java.util.SortedSet<java.io.Serializable> serializableSet84 = java.util.Collections.unmodifiableSortedSet(serializableSet82);
        java.util.TreeSet<java.io.Serializable> serializableSet85 = new java.util.TreeSet<java.io.Serializable>(serializableSet84);
        boolean boolean87 = serializableSet85.remove((java.lang.Object) (-1.0f));
        java.util.Comparator<? super java.io.Serializable> wildcardComparator88 = serializableSet85.comparator();
        boolean boolean89 = strSet75.remove((java.lang.Object) serializableSet85);
        boolean boolean90 = strSet69.remove((java.lang.Object) serializableSet85);
        boolean boolean91 = serializableSet60.remove((java.lang.Object) boolean90);
        boolean boolean92 = serializableList51.addAll((int) (short) 0, (java.util.Collection<java.io.Serializable>) serializableSet60);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable94 = serializableList51.get(35);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 35 out of bounds for length 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(serializableCollection43);
        org.junit.Assert.assertNotNull(serializableArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(serializableSet57);
        org.junit.Assert.assertNotNull(serializableIterableList58);
        org.junit.Assert.assertNotNull(serializableSet59);
        org.junit.Assert.assertNull(serializable61);
        org.junit.Assert.assertNull(wildcardComparator62);
        org.junit.Assert.assertNotNull(serializableSet63);
        org.junit.Assert.assertNotNull(serializableSet64);
        org.junit.Assert.assertNotNull(serializableIterableList65);
        org.junit.Assert.assertNotNull(serializableSet66);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "[]");
        org.junit.Assert.assertNull(serializable71);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(serializableSet82);
        org.junit.Assert.assertNotNull(serializableIterableList83);
        org.junit.Assert.assertNotNull(serializableSet84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(wildcardComparator88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test423");
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList41 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList41, serializableArray40);
        java.util.Collection<java.io.Serializable> serializableCollection43 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList41);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] { 'a', 10, 100, serializableList41, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList51 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList51, serializableArray50);
        boolean boolean55 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList51, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        serializableList51.add(10, (java.io.Serializable) '#');
        java.io.Serializable serializable60 = serializableList51.remove(0);
        java.util.SortedSet<java.io.Serializable> serializableSet61 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList62 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet61);
        java.util.SortedSet<java.io.Serializable> serializableSet63 = java.util.Collections.unmodifiableSortedSet(serializableSet61);
        java.util.TreeSet<java.io.Serializable> serializableSet64 = new java.util.TreeSet<java.io.Serializable>(serializableSet63);
        java.io.Serializable serializable65 = serializableSet64.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator66 = serializableSet64.comparator();
        java.util.NavigableSet<java.io.Serializable> serializableSet67 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet64);
        java.util.stream.Stream[][] streamArray68 = new java.util.stream.Stream[][] {};
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableSet64, streamArray68);
        java.util.Comparator<? super java.io.Serializable> wildcardComparator70 = serializableSet64.comparator();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean71 = serializableList51.removeAll((java.util.Collection<java.io.Serializable>) serializableSet64);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class java.util.ArrayList cannot be cast to class java.lang.Comparable (java.util.ArrayList and java.lang.Comparable are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(serializableCollection43);
        org.junit.Assert.assertNotNull(serializableArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + serializable60 + "' != '" + 'a' + "'", serializable60, 'a');
        org.junit.Assert.assertNotNull(serializableSet61);
        org.junit.Assert.assertNotNull(serializableIterableList62);
        org.junit.Assert.assertNotNull(serializableSet63);
        org.junit.Assert.assertNull(serializable65);
        org.junit.Assert.assertNull(wildcardComparator66);
        org.junit.Assert.assertNotNull(serializableSet67);
        org.junit.Assert.assertNotNull(streamArray68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(wildcardComparator70);
    }

    @Test
    public void test424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test424");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        serializableSet3.clear();
        java.util.Iterator<java.io.Serializable> serializableItor7 = serializableSet3.descendingIterator();
        java.util.Spliterator<java.io.Serializable> serializableSpliterator8 = serializableSet3.spliterator();
        java.util.Set<java.io.Serializable> serializableSet9 = java.util.Collections.synchronizedSet((java.util.Set<java.io.Serializable>) serializableSet3);
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableItor7);
        org.junit.Assert.assertNotNull(serializableSpliterator8);
        org.junit.Assert.assertNotNull(serializableSet9);
    }

    @Test
    public void test425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test425");
        java.io.Serializable[] serializableArray37 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList38 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList38, serializableArray37);
        java.util.Collection<java.io.Serializable> serializableCollection40 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList38);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator41 = serializableList38.spliterator();
        serializableList38.ensureCapacity((int) (byte) 100);
        java.lang.String str44 = serializableList38.toString();
        org.junit.Assert.assertNotNull(serializableArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(serializableCollection40);
        org.junit.Assert.assertNotNull(serializableSpliterator41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]" + "'", str44, "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
    }

    @Test
    public void test426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test426");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.util.ArrayList<java.io.Serializable> serializableList4 = new java.util.ArrayList<java.io.Serializable>((java.util.Collection<java.io.Serializable>) serializableSet2);
        java.util.ListIterator<java.io.Serializable> serializableItor5 = serializableList4.listIterator();
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNotNull(serializableItor5);
    }

    @Test
    public void test427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test427");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        serializableSet3.clear();
        java.util.NavigableSet<java.io.Serializable> serializableSet7 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet3);
        java.util.Comparator<? super java.io.Serializable> wildcardComparator8 = serializableSet3.comparator();
        java.util.Iterator<java.io.Serializable> serializableItor9 = serializableSet3.iterator();
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableSet7);
        org.junit.Assert.assertNull(wildcardComparator8);
        org.junit.Assert.assertNotNull(serializableItor9);
    }

    @Test
    public void test428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test428");
        java.util.HashSet<java.lang.String> strSet1 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        strSet1.clear();
        java.util.Spliterator<java.lang.String> strSpliterator3 = strSet1.spliterator();
        java.util.SortedSet<java.io.Serializable> serializableSet4 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList5 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet4);
        java.util.SortedSet<java.io.Serializable> serializableSet6 = java.util.Collections.unmodifiableSortedSet(serializableSet4);
        java.util.TreeSet<java.io.Serializable> serializableSet7 = new java.util.TreeSet<java.io.Serializable>(serializableSet6);
        java.io.Serializable serializable8 = serializableSet7.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator9 = serializableSet7.comparator();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration10 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableSet7);
        java.util.NavigableSet<java.io.Serializable> serializableSet13 = serializableSet7.tailSet((java.io.Serializable) 100L, true);
        boolean boolean14 = serializableSet7.isEmpty();
        boolean boolean15 = strSet1.remove((java.lang.Object) boolean14);
        org.junit.Assert.assertNotNull(strSpliterator3);
        org.junit.Assert.assertNotNull(serializableSet4);
        org.junit.Assert.assertNotNull(serializableIterableList5);
        org.junit.Assert.assertNotNull(serializableSet6);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNull(wildcardComparator9);
        org.junit.Assert.assertNotNull(serializableEnumeration10);
        org.junit.Assert.assertNotNull(serializableSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test429");
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList41 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList41, serializableArray40);
        java.util.Collection<java.io.Serializable> serializableCollection43 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList41);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] { 'a', 10, 100, serializableList41, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList51 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList51, serializableArray50);
        boolean boolean55 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList51, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.Map<java.io.Serializable, java.lang.Object> serializableMap58 = java.util.Collections.singletonMap((java.io.Serializable) (short) 1, (java.lang.Object) (short) 1);
        int int59 = serializableList51.lastIndexOf((java.lang.Object) (short) 1);
        serializableList51.clear();
        boolean boolean61 = serializableList51.isEmpty();
        org.junit.Assert.assertNotNull(serializableArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(serializableCollection43);
        org.junit.Assert.assertNotNull(serializableArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(serializableMap58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test430");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.HashSet<java.util.ListIterator<java.io.Serializable>> serializableItorSet6 = new java.util.HashSet<java.util.ListIterator<java.io.Serializable>>((int) '4');
        java.util.NavigableSet<java.io.Serializable> serializableSet8 = serializableSet3.tailSet((java.io.Serializable) '4', true);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator9 = serializableSet3.spliterator();
        java.lang.Object obj10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = serializableSet3.remove(obj10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(serializableSet8);
        org.junit.Assert.assertNotNull(serializableSpliterator9);
    }

    @Test
    public void test431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test431");
        java.util.SortedMap<java.util.Collection<java.io.Serializable>, java.lang.reflect.AnnotatedElement> serializableCollectionMap0 = java.util.Collections.emptySortedMap();
        org.junit.Assert.assertNotNull(serializableCollectionMap0);
    }

    @Test
    public void test432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test432");
        java.util.HashSet<java.lang.String> strSet1 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        int int2 = strSet1.size();
        strSet1.clear();
        java.util.Iterator<java.lang.String> strItor4 = strSet1.iterator();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(strItor4);
    }

    @Test
    public void test433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test433");
        java.util.SortedMap<java.util.stream.Stream<java.io.Serializable>, java.util.Enumeration<java.util.HashSet<java.lang.String>>> serializableStreamMap0 = java.util.Collections.emptySortedMap();
        org.junit.Assert.assertNotNull(serializableStreamMap0);
    }

    @Test
    public void test434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test434");
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList41 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList41, serializableArray40);
        java.util.Collection<java.io.Serializable> serializableCollection43 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList41);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] { 'a', 10, 100, serializableList41, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList51 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList51, serializableArray50);
        boolean boolean55 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList51, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator56 = serializableList51.spliterator();
        serializableList51.clear();
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet61 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet61, strArray60);
        boolean boolean64 = strSet61.equals((java.lang.Object) false);
        int int65 = strSet61.size();
        java.util.SortedSet<java.io.Serializable> serializableSet66 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList67 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet66);
        java.util.SortedSet<java.io.Serializable> serializableSet68 = java.util.Collections.unmodifiableSortedSet(serializableSet66);
        boolean boolean69 = strSet61.removeAll((java.util.Collection<java.io.Serializable>) serializableSet66);
        int int70 = serializableList51.lastIndexOf((java.lang.Object) strSet61);
        java.util.Iterator<java.lang.String> strItor71 = strSet61.iterator();
        java.util.Spliterator<java.lang.String> strSpliterator72 = strSet61.spliterator();
        java.util.Iterator<java.lang.String> strItor73 = strSet61.iterator();
        org.junit.Assert.assertNotNull(serializableArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(serializableCollection43);
        org.junit.Assert.assertNotNull(serializableArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(serializableSpliterator56);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(serializableSet66);
        org.junit.Assert.assertNotNull(serializableIterableList67);
        org.junit.Assert.assertNotNull(serializableSet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(strItor71);
        org.junit.Assert.assertNotNull(strSpliterator72);
        org.junit.Assert.assertNotNull(strItor73);
    }

    @Test
    public void test435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test435");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        java.util.Iterator<java.io.Serializable> serializableItor6 = serializableSet3.descendingIterator();
        java.util.HashSet<java.lang.String> strSet8 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.lang.Object obj9 = null;
        boolean boolean10 = strSet8.contains(obj9);
        boolean boolean12 = strSet8.add("[]");
        java.util.NavigableSet<java.io.Serializable> serializableSet14 = serializableSet3.headSet((java.io.Serializable) boolean12, false);
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableItor6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(serializableSet14);
    }

    @Test
    public void test436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test436");
        java.io.Serializable[] serializableArray37 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList38 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList38, serializableArray37);
        java.util.Collection<java.io.Serializable> serializableCollection40 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList38);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator41 = serializableList38.spliterator();
        java.util.Spliterator<java.io.Serializable> serializableSpliterator42 = serializableList38.spliterator();
        java.lang.Object[] objArray43 = serializableList38.toArray();
        java.util.SortedSet<java.io.Serializable> serializableSet44 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList45 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet44);
        java.util.SortedSet<java.io.Serializable> serializableSet46 = java.util.Collections.unmodifiableSortedSet(serializableSet44);
        java.util.TreeSet<java.io.Serializable> serializableSet47 = new java.util.TreeSet<java.io.Serializable>(serializableSet46);
        java.io.Serializable serializable48 = serializableSet47.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator49 = serializableSet47.comparator();
        java.util.NavigableSet<java.io.Serializable> serializableSet50 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet47);
        java.util.SortedSet<java.io.Serializable> serializableSet51 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList52 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet51);
        java.util.SortedSet<java.io.Serializable> serializableSet53 = java.util.Collections.unmodifiableSortedSet(serializableSet51);
        java.util.TreeSet<java.io.Serializable> serializableSet54 = new java.util.TreeSet<java.io.Serializable>(serializableSet53);
        java.util.HashSet<java.lang.String> strSet56 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.lang.Object obj57 = strSet56.clone();
        java.io.Serializable serializable58 = serializableSet54.lower((java.io.Serializable) strSet56);
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet62 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet62, strArray61);
        boolean boolean65 = strSet62.equals((java.lang.Object) false);
        boolean boolean66 = strSet62.isEmpty();
        boolean boolean68 = strSet62.equals((java.lang.Object) 10L);
        java.util.SortedSet<java.io.Serializable> serializableSet69 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList70 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet69);
        java.util.SortedSet<java.io.Serializable> serializableSet71 = java.util.Collections.unmodifiableSortedSet(serializableSet69);
        java.util.TreeSet<java.io.Serializable> serializableSet72 = new java.util.TreeSet<java.io.Serializable>(serializableSet71);
        boolean boolean74 = serializableSet72.remove((java.lang.Object) (-1.0f));
        java.util.Comparator<? super java.io.Serializable> wildcardComparator75 = serializableSet72.comparator();
        boolean boolean76 = strSet62.remove((java.lang.Object) serializableSet72);
        boolean boolean77 = strSet56.remove((java.lang.Object) serializableSet72);
        boolean boolean78 = serializableSet47.remove((java.lang.Object) boolean77);
        boolean boolean79 = serializableList38.retainAll((java.util.Collection<java.io.Serializable>) serializableSet47);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.io.Serializable> serializableItor81 = serializableList38.listIterator((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(serializableCollection40);
        org.junit.Assert.assertNotNull(serializableSpliterator41);
        org.junit.Assert.assertNotNull(serializableSpliterator42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertNotNull(serializableSet44);
        org.junit.Assert.assertNotNull(serializableIterableList45);
        org.junit.Assert.assertNotNull(serializableSet46);
        org.junit.Assert.assertNull(serializable48);
        org.junit.Assert.assertNull(wildcardComparator49);
        org.junit.Assert.assertNotNull(serializableSet50);
        org.junit.Assert.assertNotNull(serializableSet51);
        org.junit.Assert.assertNotNull(serializableIterableList52);
        org.junit.Assert.assertNotNull(serializableSet53);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "[]");
        org.junit.Assert.assertNull(serializable58);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(serializableSet69);
        org.junit.Assert.assertNotNull(serializableIterableList70);
        org.junit.Assert.assertNotNull(serializableSet71);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(wildcardComparator75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test437");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        java.util.NavigableSet<java.io.Serializable> serializableSet6 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet3);
        java.util.SortedSet<java.io.Serializable> serializableSet7 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList8 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet7);
        java.util.SortedSet<java.io.Serializable> serializableSet9 = java.util.Collections.unmodifiableSortedSet(serializableSet7);
        java.util.TreeSet<java.io.Serializable> serializableSet10 = new java.util.TreeSet<java.io.Serializable>(serializableSet9);
        java.util.HashSet<java.lang.String> strSet12 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.lang.Object obj13 = strSet12.clone();
        java.io.Serializable serializable14 = serializableSet10.lower((java.io.Serializable) strSet12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        boolean boolean21 = strSet18.equals((java.lang.Object) false);
        boolean boolean22 = strSet18.isEmpty();
        boolean boolean24 = strSet18.equals((java.lang.Object) 10L);
        java.util.SortedSet<java.io.Serializable> serializableSet25 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList26 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet25);
        java.util.SortedSet<java.io.Serializable> serializableSet27 = java.util.Collections.unmodifiableSortedSet(serializableSet25);
        java.util.TreeSet<java.io.Serializable> serializableSet28 = new java.util.TreeSet<java.io.Serializable>(serializableSet27);
        boolean boolean30 = serializableSet28.remove((java.lang.Object) (-1.0f));
        java.util.Comparator<? super java.io.Serializable> wildcardComparator31 = serializableSet28.comparator();
        boolean boolean32 = strSet18.remove((java.lang.Object) serializableSet28);
        boolean boolean33 = strSet12.remove((java.lang.Object) serializableSet28);
        boolean boolean34 = serializableSet3.remove((java.lang.Object) boolean33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.lang.reflect.Type[] typeArray36 = serializableSet3.toArray(typeArray35);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator37 = serializableSet3.spliterator();
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableSet6);
        org.junit.Assert.assertNotNull(serializableSet7);
        org.junit.Assert.assertNotNull(serializableIterableList8);
        org.junit.Assert.assertNotNull(serializableSet9);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "[]");
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(serializableSet25);
        org.junit.Assert.assertNotNull(serializableIterableList26);
        org.junit.Assert.assertNotNull(serializableSet27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardComparator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertNotNull(serializableSpliterator37);
    }

    @Test
    public void test438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test438");
        java.util.SortedMap<java.util.stream.Stream[][], java.util.ArrayList<java.io.Serializable>> streamArrayMap0 = java.util.Collections.emptySortedMap();
        org.junit.Assert.assertNotNull(streamArrayMap0);
    }

    @Test
    public void test439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test439");
        java.util.Enumeration<java.lang.Object> objEnumeration0 = java.util.Collections.emptyEnumeration();
        org.junit.Assert.assertNotNull(objEnumeration0);
    }

    @Test
    public void test440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test440");
        java.util.NavigableSet<java.util.List<java.io.Serializable>> serializableListSet0 = java.util.Collections.emptyNavigableSet();
        org.junit.Assert.assertNotNull(serializableListSet0);
    }

    @Test
    public void test441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test441");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        boolean boolean6 = serializableSet3.isEmpty();
        serializableSet3.clear();
        java.util.Spliterator<java.io.Serializable> serializableSpliterator8 = serializableSet3.spliterator();
        java.io.Serializable serializable9 = serializableSet3.pollLast();
        java.util.NavigableSet<java.io.Serializable> serializableSet10 = java.util.Collections.synchronizedNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet3);
        java.util.stream.Stream<java.io.Serializable> serializableStream11 = serializableSet3.parallelStream();
        java.io.Serializable[] serializableArray52 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList53 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList53, serializableArray52);
        java.util.Collection<java.io.Serializable> serializableCollection55 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList53);
        java.io.Serializable[] serializableArray62 = new java.io.Serializable[] { 'a', 10, 100, serializableList53, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList63 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList63, serializableArray62);
        boolean boolean67 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList63, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        serializableList63.add(10, (java.io.Serializable) '#');
        java.io.Serializable serializable72 = serializableList63.remove(0);
        java.util.HashSet<java.lang.String> strSet74 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        int int75 = strSet74.size();
        strSet74.clear();
        boolean boolean77 = serializableList63.add((java.io.Serializable) strSet74);
        java.util.Iterator<java.lang.String> strItor78 = strSet74.iterator();
        // The following exception was thrown during execution in test generation
        try {
            java.util.NavigableSet<java.io.Serializable> serializableSet80 = serializableSet3.tailSet((java.io.Serializable) strSet74, false);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class java.util.HashSet cannot be cast to class java.lang.Comparable (java.util.HashSet and java.lang.Comparable are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(serializableSpliterator8);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertNotNull(serializableSet10);
        org.junit.Assert.assertNotNull(serializableStream11);
        org.junit.Assert.assertNotNull(serializableArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(serializableCollection55);
        org.junit.Assert.assertNotNull(serializableArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + serializable72 + "' != '" + 'a' + "'", serializable72, 'a');
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strItor78);
    }

    @Test
    public void test442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test442");
        java.util.ArrayList<java.util.TreeSet<java.io.Serializable>> serializableSetList0 = new java.util.ArrayList<java.util.TreeSet<java.io.Serializable>>();
    }

    @Test
    public void test443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test443");
        java.io.Serializable[] serializableArray37 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList38 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList38, serializableArray37);
        java.util.Collection<java.io.Serializable> serializableCollection40 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList38);
        java.lang.Object obj41 = serializableList38.clone();
        java.util.Iterator<java.io.Serializable> serializableItor42 = serializableList38.iterator();
        java.io.Serializable serializable43 = null;
        java.util.SortedSet<java.io.Serializable> serializableSet44 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList45 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet44);
        java.util.SortedSet<java.io.Serializable> serializableSet46 = java.util.Collections.unmodifiableSortedSet(serializableSet44);
        java.util.TreeSet<java.io.Serializable> serializableSet47 = new java.util.TreeSet<java.io.Serializable>(serializableSet46);
        java.io.Serializable serializable48 = serializableSet47.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator49 = serializableSet47.comparator();
        java.util.NavigableSet<java.io.Serializable> serializableSet50 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet47);
        java.util.SortedSet<java.io.Serializable> serializableSet51 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList52 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet51);
        java.util.SortedSet<java.io.Serializable> serializableSet53 = java.util.Collections.unmodifiableSortedSet(serializableSet51);
        java.util.TreeSet<java.io.Serializable> serializableSet54 = new java.util.TreeSet<java.io.Serializable>(serializableSet53);
        java.util.HashSet<java.lang.String> strSet56 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.lang.Object obj57 = strSet56.clone();
        java.io.Serializable serializable58 = serializableSet54.lower((java.io.Serializable) strSet56);
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet62 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet62, strArray61);
        boolean boolean65 = strSet62.equals((java.lang.Object) false);
        boolean boolean66 = strSet62.isEmpty();
        boolean boolean68 = strSet62.equals((java.lang.Object) 10L);
        java.util.SortedSet<java.io.Serializable> serializableSet69 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList70 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet69);
        java.util.SortedSet<java.io.Serializable> serializableSet71 = java.util.Collections.unmodifiableSortedSet(serializableSet69);
        java.util.TreeSet<java.io.Serializable> serializableSet72 = new java.util.TreeSet<java.io.Serializable>(serializableSet71);
        boolean boolean74 = serializableSet72.remove((java.lang.Object) (-1.0f));
        java.util.Comparator<? super java.io.Serializable> wildcardComparator75 = serializableSet72.comparator();
        boolean boolean76 = strSet62.remove((java.lang.Object) serializableSet72);
        boolean boolean77 = strSet56.remove((java.lang.Object) serializableSet72);
        boolean boolean78 = serializableSet47.remove((java.lang.Object) boolean77);
        boolean boolean79 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList38, serializable43, (java.io.Serializable) serializableSet47);
        java.util.Collections.reverse((java.util.List<java.io.Serializable>) serializableList38);
        org.junit.Assert.assertNotNull(serializableArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(serializableCollection40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertNotNull(serializableItor42);
        org.junit.Assert.assertNotNull(serializableSet44);
        org.junit.Assert.assertNotNull(serializableIterableList45);
        org.junit.Assert.assertNotNull(serializableSet46);
        org.junit.Assert.assertNull(serializable48);
        org.junit.Assert.assertNull(wildcardComparator49);
        org.junit.Assert.assertNotNull(serializableSet50);
        org.junit.Assert.assertNotNull(serializableSet51);
        org.junit.Assert.assertNotNull(serializableIterableList52);
        org.junit.Assert.assertNotNull(serializableSet53);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "[]");
        org.junit.Assert.assertNull(serializable58);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(serializableSet69);
        org.junit.Assert.assertNotNull(serializableIterableList70);
        org.junit.Assert.assertNotNull(serializableSet71);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(wildcardComparator75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test444");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.util.SortedSet<java.io.Serializable> serializableSet4 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList5 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet4);
        java.util.SortedSet<java.io.Serializable> serializableSet6 = java.util.Collections.unmodifiableSortedSet(serializableSet4);
        java.util.TreeSet<java.io.Serializable> serializableSet7 = new java.util.TreeSet<java.io.Serializable>(serializableSet6);
        java.io.Serializable serializable8 = serializableSet7.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator9 = serializableSet7.comparator();
        boolean boolean10 = serializableSet7.isEmpty();
        serializableSet7.clear();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration12 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableSet7);
        boolean boolean13 = serializableSet3.retainAll((java.util.Collection<java.io.Serializable>) serializableSet7);
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNotNull(serializableSet4);
        org.junit.Assert.assertNotNull(serializableIterableList5);
        org.junit.Assert.assertNotNull(serializableSet6);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNull(wildcardComparator9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(serializableEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test445");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList1 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>(0);
    }

    @Test
    public void test446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test446");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean6 = strSet3.equals((java.lang.Object) false);
        boolean boolean7 = strSet3.isEmpty();
        boolean boolean9 = strSet3.equals((java.lang.Object) 10L);
        java.util.SortedSet<java.io.Serializable> serializableSet10 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList11 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet10);
        java.util.SortedSet<java.io.Serializable> serializableSet12 = java.util.Collections.unmodifiableSortedSet(serializableSet10);
        java.util.TreeSet<java.io.Serializable> serializableSet13 = new java.util.TreeSet<java.io.Serializable>(serializableSet12);
        boolean boolean15 = serializableSet13.remove((java.lang.Object) (-1.0f));
        java.util.Comparator<? super java.io.Serializable> wildcardComparator16 = serializableSet13.comparator();
        boolean boolean17 = strSet3.remove((java.lang.Object) serializableSet13);
        java.util.NavigableSet<java.io.Serializable> serializableSet18 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet13);
        java.lang.Class<java.io.Serializable> serializableClass19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.NavigableSet<java.io.Serializable> serializableSet20 = java.util.Collections.checkedNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet13, serializableClass19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: type");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(serializableSet10);
        org.junit.Assert.assertNotNull(serializableIterableList11);
        org.junit.Assert.assertNotNull(serializableSet12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardComparator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(serializableSet18);
    }

    @Test
    public void test447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test447");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.io.Serializable serializable6 = serializableSet3.ceiling((java.io.Serializable) 0.0d);
        java.util.Comparator<? super java.io.Serializable> wildcardComparator7 = serializableSet3.comparator();
        java.util.SortedSet<java.io.Serializable> serializableSet9 = serializableSet3.tailSet((java.io.Serializable) 100L);
        java.util.stream.Stream<java.io.Serializable> serializableStream10 = serializableSet3.parallelStream();
        java.io.Serializable[] serializableArray62 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList63 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList63, serializableArray62);
        java.util.Collection<java.io.Serializable> serializableCollection65 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList63);
        java.io.Serializable[] serializableArray90 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList63, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList91 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList91, serializableArray90);
        serializableList91.ensureCapacity(100);
        java.util.stream.Stream<java.io.Serializable> serializableStream95 = serializableList91.stream();
        boolean boolean96 = serializableList91.isEmpty();
        java.util.Collection<java.io.Serializable> serializableCollection97 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList91);
        java.lang.Object obj98 = serializableList91.clone();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean99 = serializableSet3.addAll((java.util.Collection<java.io.Serializable>) serializableList91);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class java.lang.Byte cannot be cast to class java.lang.Short (java.lang.Byte and java.lang.Short are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertNull(wildcardComparator7);
        org.junit.Assert.assertNotNull(serializableSet9);
        org.junit.Assert.assertNotNull(serializableStream10);
        org.junit.Assert.assertNotNull(serializableArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(serializableCollection65);
        org.junit.Assert.assertNotNull(serializableArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(serializableStream95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(serializableCollection97);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertEquals(obj98.toString(), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj98), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj98), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
    }

    @Test
    public void test448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test448");
        java.util.SortedSet<java.util.Spliterator<java.io.Serializable>> serializableSpliteratorSet0 = java.util.Collections.emptySortedSet();
        org.junit.Assert.assertNotNull(serializableSpliteratorSet0);
    }

    @Test
    public void test449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test449");
        java.util.HashSet<java.lang.String> strSet1 = new java.util.HashSet<java.lang.String>(0);
        java.lang.Object obj2 = strSet1.clone();
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "[]");
    }

    @Test
    public void test450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test450");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean6 = strSet3.equals((java.lang.Object) false);
        boolean boolean7 = strSet3.isEmpty();
        boolean boolean9 = strSet3.equals((java.lang.Object) 10L);
        java.util.SortedSet<java.io.Serializable> serializableSet10 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList11 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet10);
        java.util.SortedSet<java.io.Serializable> serializableSet12 = java.util.Collections.unmodifiableSortedSet(serializableSet10);
        java.util.TreeSet<java.io.Serializable> serializableSet13 = new java.util.TreeSet<java.io.Serializable>(serializableSet12);
        boolean boolean15 = serializableSet13.remove((java.lang.Object) (-1.0f));
        java.util.Comparator<? super java.io.Serializable> wildcardComparator16 = serializableSet13.comparator();
        boolean boolean17 = strSet3.remove((java.lang.Object) serializableSet13);
        java.util.NavigableSet<java.io.Serializable> serializableSet18 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet13);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable19 = serializableSet13.first();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(serializableSet10);
        org.junit.Assert.assertNotNull(serializableIterableList11);
        org.junit.Assert.assertNotNull(serializableSet12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(wildcardComparator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(serializableSet18);
    }

    @Test
    public void test451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test451");
        java.util.Enumeration<java.util.SortedSet<java.io.Serializable>> serializableSetEnumeration0 = java.util.Collections.emptyEnumeration();
        org.junit.Assert.assertNotNull(serializableSetEnumeration0);
    }

    @Test
    public void test452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test452");
        java.util.NavigableMap<java.util.SortedSet<java.io.Serializable>[], java.util.AbstractSet<java.lang.String>> serializableSetArrayMap0 = java.util.Collections.emptyNavigableMap();
        org.junit.Assert.assertNotNull(serializableSetArrayMap0);
    }

    @Test
    public void test453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test453");
        java.util.ArrayList<java.io.Serializable> serializableList1 = new java.util.ArrayList<java.io.Serializable>(100);
        java.util.Collection<java.io.Serializable> serializableCollection2 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList1);
        java.util.SortedSet<java.io.Serializable> serializableSet3 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList4 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet3);
        java.util.SortedSet<java.io.Serializable> serializableSet5 = java.util.Collections.unmodifiableSortedSet(serializableSet3);
        java.util.TreeSet<java.io.Serializable> serializableSet6 = new java.util.TreeSet<java.io.Serializable>(serializableSet5);
        boolean boolean8 = serializableSet6.remove((java.lang.Object) (-1.0f));
        java.util.Comparator<? super java.io.Serializable> wildcardComparator9 = serializableSet6.comparator();
        java.util.SortedSet<java.io.Serializable> serializableSet10 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList11 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet10);
        java.util.SortedSet<java.io.Serializable> serializableSet12 = java.util.Collections.unmodifiableSortedSet(serializableSet10);
        java.util.TreeSet<java.io.Serializable> serializableSet13 = new java.util.TreeSet<java.io.Serializable>(serializableSet12);
        java.io.Serializable serializable14 = serializableSet13.pollFirst();
        java.util.HashSet<java.util.ListIterator<java.io.Serializable>> serializableItorSet16 = new java.util.HashSet<java.util.ListIterator<java.io.Serializable>>((int) '4');
        java.util.NavigableSet<java.io.Serializable> serializableSet18 = serializableSet13.tailSet((java.io.Serializable) '4', true);
        java.util.SortedSet<java.io.Serializable> serializableSet20 = serializableSet13.headSet((java.io.Serializable) (short) 0);
        int int21 = java.util.Collections.frequency((java.util.Collection<java.io.Serializable>) serializableSet6, (java.lang.Object) serializableSet20);
        java.util.Set<java.io.Serializable> serializableSet22 = java.util.Collections.synchronizedSet((java.util.Set<java.io.Serializable>) serializableSet6);
        boolean boolean23 = java.util.Collections.disjoint((java.util.Collection<java.io.Serializable>) serializableList1, (java.util.Collection<java.io.Serializable>) serializableSet6);
        java.lang.Class<java.io.Serializable> serializableClass24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.io.Serializable> serializableList25 = java.util.Collections.checkedList((java.util.List<java.io.Serializable>) serializableList1, serializableClass24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: type");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableCollection2);
        org.junit.Assert.assertNotNull(serializableSet3);
        org.junit.Assert.assertNotNull(serializableIterableList4);
        org.junit.Assert.assertNotNull(serializableSet5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardComparator9);
        org.junit.Assert.assertNotNull(serializableSet10);
        org.junit.Assert.assertNotNull(serializableIterableList11);
        org.junit.Assert.assertNotNull(serializableSet12);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNotNull(serializableSet18);
        org.junit.Assert.assertNotNull(serializableSet20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(serializableSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test454");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        java.util.NavigableSet<java.io.Serializable> serializableSet6 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet3);
        java.util.SortedSet<java.io.Serializable> serializableSet7 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList8 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet7);
        java.util.SortedSet<java.io.Serializable> serializableSet9 = java.util.Collections.unmodifiableSortedSet(serializableSet7);
        java.util.TreeSet<java.io.Serializable> serializableSet10 = new java.util.TreeSet<java.io.Serializable>(serializableSet9);
        java.util.HashSet<java.lang.String> strSet12 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.lang.Object obj13 = strSet12.clone();
        java.io.Serializable serializable14 = serializableSet10.lower((java.io.Serializable) strSet12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        boolean boolean21 = strSet18.equals((java.lang.Object) false);
        boolean boolean22 = strSet18.isEmpty();
        boolean boolean24 = strSet18.equals((java.lang.Object) 10L);
        java.util.SortedSet<java.io.Serializable> serializableSet25 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList26 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet25);
        java.util.SortedSet<java.io.Serializable> serializableSet27 = java.util.Collections.unmodifiableSortedSet(serializableSet25);
        java.util.TreeSet<java.io.Serializable> serializableSet28 = new java.util.TreeSet<java.io.Serializable>(serializableSet27);
        boolean boolean30 = serializableSet28.remove((java.lang.Object) (-1.0f));
        java.util.Comparator<? super java.io.Serializable> wildcardComparator31 = serializableSet28.comparator();
        boolean boolean32 = strSet18.remove((java.lang.Object) serializableSet28);
        boolean boolean33 = strSet12.remove((java.lang.Object) serializableSet28);
        boolean boolean34 = serializableSet3.remove((java.lang.Object) boolean33);
        java.util.NavigableSet<java.io.Serializable> serializableSet35 = java.util.Collections.synchronizedNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet3);
        java.util.NavigableSet<java.io.Serializable> serializableSet36 = serializableSet3.descendingSet();
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableSet6);
        org.junit.Assert.assertNotNull(serializableSet7);
        org.junit.Assert.assertNotNull(serializableIterableList8);
        org.junit.Assert.assertNotNull(serializableSet9);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "[]");
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(serializableSet25);
        org.junit.Assert.assertNotNull(serializableIterableList26);
        org.junit.Assert.assertNotNull(serializableSet27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardComparator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(serializableSet35);
        org.junit.Assert.assertNotNull(serializableSet36);
    }

    @Test
    public void test455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test455");
        java.io.Serializable[] serializableArray37 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList38 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList38, serializableArray37);
        java.util.Collection<java.io.Serializable> serializableCollection40 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList38);
        java.lang.Object[] objArray41 = serializableList38.toArray();
        java.lang.Object obj42 = serializableList38.clone();
        java.util.ListIterator<java.io.Serializable> serializableItor44 = serializableList38.listIterator((int) (short) 10);
        int int45 = serializableList38.size();
        java.util.ListIterator<java.io.Serializable> serializableItor46 = serializableList38.listIterator();
        org.junit.Assert.assertNotNull(serializableArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(serializableCollection40);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertNotNull(serializableItor44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 37 + "'", int45 == 37);
        org.junit.Assert.assertNotNull(serializableItor46);
    }

    @Test
    public void test456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test456");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.util.HashSet<java.lang.String> strSet5 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.lang.Object obj6 = strSet5.clone();
        java.io.Serializable serializable7 = serializableSet3.lower((java.io.Serializable) strSet5);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet11 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet11, strArray10);
        boolean boolean14 = strSet11.equals((java.lang.Object) false);
        boolean boolean15 = strSet11.isEmpty();
        boolean boolean17 = strSet11.equals((java.lang.Object) 10L);
        java.util.SortedSet<java.io.Serializable> serializableSet18 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList19 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet18);
        java.util.SortedSet<java.io.Serializable> serializableSet20 = java.util.Collections.unmodifiableSortedSet(serializableSet18);
        java.util.TreeSet<java.io.Serializable> serializableSet21 = new java.util.TreeSet<java.io.Serializable>(serializableSet20);
        boolean boolean23 = serializableSet21.remove((java.lang.Object) (-1.0f));
        java.util.Comparator<? super java.io.Serializable> wildcardComparator24 = serializableSet21.comparator();
        boolean boolean25 = strSet11.remove((java.lang.Object) serializableSet21);
        boolean boolean26 = strSet5.remove((java.lang.Object) serializableSet21);
        java.util.NavigableSet<java.io.Serializable> serializableSet27 = java.util.Collections.synchronizedNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet21);
        java.lang.Object obj28 = serializableSet21.clone();
        java.lang.Class<java.io.Serializable> serializableClass29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.SortedSet<java.io.Serializable> serializableSet30 = java.util.Collections.checkedSortedSet((java.util.SortedSet<java.io.Serializable>) serializableSet21, serializableClass29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: type");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "[]");
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(serializableSet18);
        org.junit.Assert.assertNotNull(serializableIterableList19);
        org.junit.Assert.assertNotNull(serializableSet20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardComparator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(serializableSet27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "[]");
    }

    @Test
    public void test457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test457");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.util.stream.Stream<java.io.Serializable> serializableStream4 = serializableSet2.parallelStream();
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNotNull(serializableStream4);
    }

    @Test
    public void test458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test458");
        // The following exception was thrown during execution in test generation
        try {
            java.util.HashSet<java.util.HashSet<java.lang.String>> strSetSet2 = new java.util.HashSet<java.util.HashSet<java.lang.String>>((int) (byte) -1, (float) 34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal initial capacity: -1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test459");
        java.util.NavigableMap<java.lang.reflect.AnnotatedElement, java.util.List<java.io.Serializable>> annotatedElementMap0 = java.util.Collections.emptyNavigableMap();
        org.junit.Assert.assertNotNull(annotatedElementMap0);
    }

    @Test
    public void test460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test460");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration6 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableSet3);
        java.util.SortedSet<java.io.Serializable> serializableSet7 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList8 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet7);
        java.util.SortedSet<java.io.Serializable> serializableSet9 = java.util.Collections.unmodifiableSortedSet(serializableSet7);
        java.util.TreeSet<java.io.Serializable> serializableSet10 = new java.util.TreeSet<java.io.Serializable>(serializableSet9);
        java.io.Serializable serializable11 = serializableSet10.pollFirst();
        java.util.HashSet<java.util.ListIterator<java.io.Serializable>> serializableItorSet13 = new java.util.HashSet<java.util.ListIterator<java.io.Serializable>>((int) '4');
        java.util.NavigableSet<java.io.Serializable> serializableSet15 = serializableSet10.tailSet((java.io.Serializable) '4', true);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator16 = serializableSet10.spliterator();
        boolean boolean17 = serializableSet3.addAll((java.util.Collection<java.io.Serializable>) serializableSet10);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator18 = serializableSet3.spliterator();
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableEnumeration6);
        org.junit.Assert.assertNotNull(serializableSet7);
        org.junit.Assert.assertNotNull(serializableIterableList8);
        org.junit.Assert.assertNotNull(serializableSet9);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNotNull(serializableSet15);
        org.junit.Assert.assertNotNull(serializableSpliterator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(serializableSpliterator18);
    }

    @Test
    public void test461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test461");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        boolean boolean6 = serializableSet3.isEmpty();
        serializableSet3.clear();
        java.util.TreeSet<java.io.Serializable> serializableSet8 = new java.util.TreeSet<java.io.Serializable>((java.util.SortedSet<java.io.Serializable>) serializableSet3);
        java.util.SortedSet<java.io.Serializable> serializableSet9 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList10 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet9);
        java.util.SortedSet<java.io.Serializable> serializableSet11 = java.util.Collections.unmodifiableSortedSet(serializableSet9);
        java.util.TreeSet<java.io.Serializable> serializableSet12 = new java.util.TreeSet<java.io.Serializable>(serializableSet11);
        java.io.Serializable serializable13 = serializableSet12.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator14 = serializableSet12.comparator();
        java.util.NavigableSet<java.io.Serializable> serializableSet15 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet12);
        java.util.SortedSet<java.io.Serializable> serializableSet16 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList17 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet16);
        java.util.SortedSet<java.io.Serializable> serializableSet18 = java.util.Collections.unmodifiableSortedSet(serializableSet16);
        java.util.TreeSet<java.io.Serializable> serializableSet19 = new java.util.TreeSet<java.io.Serializable>(serializableSet18);
        java.util.HashSet<java.lang.String> strSet21 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.lang.Object obj22 = strSet21.clone();
        java.io.Serializable serializable23 = serializableSet19.lower((java.io.Serializable) strSet21);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet27 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet27, strArray26);
        boolean boolean30 = strSet27.equals((java.lang.Object) false);
        boolean boolean31 = strSet27.isEmpty();
        boolean boolean33 = strSet27.equals((java.lang.Object) 10L);
        java.util.SortedSet<java.io.Serializable> serializableSet34 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList35 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet34);
        java.util.SortedSet<java.io.Serializable> serializableSet36 = java.util.Collections.unmodifiableSortedSet(serializableSet34);
        java.util.TreeSet<java.io.Serializable> serializableSet37 = new java.util.TreeSet<java.io.Serializable>(serializableSet36);
        boolean boolean39 = serializableSet37.remove((java.lang.Object) (-1.0f));
        java.util.Comparator<? super java.io.Serializable> wildcardComparator40 = serializableSet37.comparator();
        boolean boolean41 = strSet27.remove((java.lang.Object) serializableSet37);
        boolean boolean42 = strSet21.remove((java.lang.Object) serializableSet37);
        java.util.NavigableSet<java.io.Serializable> serializableSet43 = java.util.Collections.synchronizedNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet37);
        java.lang.Object obj44 = serializableSet37.clone();
        boolean boolean45 = serializableSet12.addAll((java.util.Collection<java.io.Serializable>) serializableSet37);
        java.io.Serializable serializable46 = serializableSet3.floor((java.io.Serializable) serializableSet37);
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(serializableSet9);
        org.junit.Assert.assertNotNull(serializableIterableList10);
        org.junit.Assert.assertNotNull(serializableSet11);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertNull(wildcardComparator14);
        org.junit.Assert.assertNotNull(serializableSet15);
        org.junit.Assert.assertNotNull(serializableSet16);
        org.junit.Assert.assertNotNull(serializableIterableList17);
        org.junit.Assert.assertNotNull(serializableSet18);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "[]");
        org.junit.Assert.assertNull(serializable23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(serializableSet34);
        org.junit.Assert.assertNotNull(serializableIterableList35);
        org.junit.Assert.assertNotNull(serializableSet36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(wildcardComparator40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(serializableSet43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(serializable46);
    }

    @Test
    public void test462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test462");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        boolean boolean6 = serializableSet3.isEmpty();
        serializableSet3.clear();
        java.util.Spliterator<java.io.Serializable> serializableSpliterator8 = serializableSet3.spliterator();
        java.io.Serializable serializable9 = serializableSet3.pollLast();
        java.util.NavigableSet<java.io.Serializable> serializableSet10 = java.util.Collections.synchronizedNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet3);
        java.util.SortedSet<java.io.Serializable> serializableSet11 = java.util.Collections.synchronizedSortedSet((java.util.SortedSet<java.io.Serializable>) serializableSet10);
        java.util.SortedSet<java.io.Serializable> serializableSet12 = java.util.Collections.unmodifiableSortedSet((java.util.SortedSet<java.io.Serializable>) serializableSet10);
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(serializableSpliterator8);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertNotNull(serializableSet10);
        org.junit.Assert.assertNotNull(serializableSet11);
        org.junit.Assert.assertNotNull(serializableSet12);
    }

    @Test
    public void test463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test463");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        java.util.Collection<java.io.Serializable> serializableCollection6 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = java.util.Collections.disjoint((java.util.Collection<java.io.Serializable>) serializableSet3, serializableCollection6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
    }

    @Test
    public void test464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test464");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        java.util.NavigableSet<java.io.Serializable> serializableSet6 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet3);
        java.util.SortedSet<java.io.Serializable> serializableSet7 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList8 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet7);
        java.util.SortedSet<java.io.Serializable> serializableSet9 = java.util.Collections.unmodifiableSortedSet(serializableSet7);
        java.util.TreeSet<java.io.Serializable> serializableSet10 = new java.util.TreeSet<java.io.Serializable>(serializableSet9);
        java.util.HashSet<java.lang.String> strSet12 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.lang.Object obj13 = strSet12.clone();
        java.io.Serializable serializable14 = serializableSet10.lower((java.io.Serializable) strSet12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        boolean boolean21 = strSet18.equals((java.lang.Object) false);
        boolean boolean22 = strSet18.isEmpty();
        boolean boolean24 = strSet18.equals((java.lang.Object) 10L);
        java.util.SortedSet<java.io.Serializable> serializableSet25 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList26 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet25);
        java.util.SortedSet<java.io.Serializable> serializableSet27 = java.util.Collections.unmodifiableSortedSet(serializableSet25);
        java.util.TreeSet<java.io.Serializable> serializableSet28 = new java.util.TreeSet<java.io.Serializable>(serializableSet27);
        boolean boolean30 = serializableSet28.remove((java.lang.Object) (-1.0f));
        java.util.Comparator<? super java.io.Serializable> wildcardComparator31 = serializableSet28.comparator();
        boolean boolean32 = strSet18.remove((java.lang.Object) serializableSet28);
        boolean boolean33 = strSet12.remove((java.lang.Object) serializableSet28);
        java.util.NavigableSet<java.io.Serializable> serializableSet34 = java.util.Collections.synchronizedNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet28);
        java.lang.Object obj35 = serializableSet28.clone();
        boolean boolean36 = serializableSet3.addAll((java.util.Collection<java.io.Serializable>) serializableSet28);
        int int37 = serializableSet28.size();
        java.io.Serializable[] serializableArray73 = new java.io.Serializable[] { false, (-1), 'a', (-1.0f), "hi!", '#', '4', '4', '#', (byte) 10, 100, 1.0f, (byte) -1, (short) 0, '4', (-1.0d), (-1.0d), 'a', 'a', (short) 10, "hi!", (byte) -1, 0.0d, 1.0f, (-1.0d), 0.0d, 100L, 10.0f, '4', 1L, (-1), (-1L), 100, 0L, true };
        java.util.ArrayList<java.io.Serializable> serializableList74 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList74, serializableArray73);
        java.lang.Object obj76 = null;
        boolean boolean77 = serializableList74.equals(obj76);
        boolean boolean78 = serializableList74.isEmpty();
        java.io.Serializable serializable81 = serializableList74.set(34, (java.io.Serializable) 'a');
        boolean boolean82 = serializableSet28.remove((java.lang.Object) 34);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable83 = serializableSet28.last();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableSet6);
        org.junit.Assert.assertNotNull(serializableSet7);
        org.junit.Assert.assertNotNull(serializableIterableList8);
        org.junit.Assert.assertNotNull(serializableSet9);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "[]");
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(serializableSet25);
        org.junit.Assert.assertNotNull(serializableIterableList26);
        org.junit.Assert.assertNotNull(serializableSet27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardComparator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(serializableSet34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "[]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(serializableArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + serializable81 + "' != '" + true + "'", serializable81, true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test465");
        java.io.Serializable[] serializableArray51 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList52 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList52, serializableArray51);
        java.util.Collection<java.io.Serializable> serializableCollection54 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList52);
        java.io.Serializable[] serializableArray79 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList52, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList80 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList80, serializableArray79);
        serializableList80.ensureCapacity(100);
        java.lang.Object[] objArray84 = serializableList80.toArray();
        java.lang.Object[] objArray85 = serializableList80.toArray();
        java.util.SortedSet<java.io.Serializable> serializableSet86 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList87 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet86);
        java.util.SortedSet<java.io.Serializable> serializableSet88 = java.util.Collections.unmodifiableSortedSet(serializableSet86);
        java.util.TreeSet<java.io.Serializable> serializableSet89 = new java.util.TreeSet<java.io.Serializable>(serializableSet88);
        java.io.Serializable serializable90 = serializableSet89.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator91 = serializableSet89.comparator();
        java.util.NavigableSet<java.io.Serializable> serializableSet92 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet89);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean93 = serializableList80.retainAll((java.util.Collection<java.io.Serializable>) serializableSet89);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: class java.util.ArrayList cannot be cast to class java.lang.Comparable (java.util.ArrayList and java.lang.Comparable are in module java.base of loader 'bootstrap')");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(serializableCollection54);
        org.junit.Assert.assertNotNull(serializableArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(serializableSet86);
        org.junit.Assert.assertNotNull(serializableIterableList87);
        org.junit.Assert.assertNotNull(serializableSet88);
        org.junit.Assert.assertNull(serializable90);
        org.junit.Assert.assertNull(wildcardComparator91);
        org.junit.Assert.assertNotNull(serializableSet92);
    }

    @Test
    public void test466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test466");
        java.util.SortedMap<java.util.stream.Stream<java.io.Serializable>, java.util.AbstractCollection<java.io.Serializable>> serializableStreamMap0 = java.util.Collections.emptySortedMap();
        org.junit.Assert.assertNotNull(serializableStreamMap0);
    }

    @Test
    public void test467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test467");
        java.io.Serializable[] serializableArray37 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList38 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList38, serializableArray37);
        java.util.Collection<java.io.Serializable> serializableCollection40 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList38);
        java.lang.Object obj41 = serializableList38.clone();
        java.util.Iterator<java.io.Serializable> serializableItor42 = serializableList38.iterator();
        java.io.Serializable serializable43 = null;
        java.util.SortedSet<java.io.Serializable> serializableSet44 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList45 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet44);
        java.util.SortedSet<java.io.Serializable> serializableSet46 = java.util.Collections.unmodifiableSortedSet(serializableSet44);
        java.util.TreeSet<java.io.Serializable> serializableSet47 = new java.util.TreeSet<java.io.Serializable>(serializableSet46);
        java.io.Serializable serializable48 = serializableSet47.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator49 = serializableSet47.comparator();
        java.util.NavigableSet<java.io.Serializable> serializableSet50 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet47);
        java.util.SortedSet<java.io.Serializable> serializableSet51 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList52 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet51);
        java.util.SortedSet<java.io.Serializable> serializableSet53 = java.util.Collections.unmodifiableSortedSet(serializableSet51);
        java.util.TreeSet<java.io.Serializable> serializableSet54 = new java.util.TreeSet<java.io.Serializable>(serializableSet53);
        java.util.HashSet<java.lang.String> strSet56 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.lang.Object obj57 = strSet56.clone();
        java.io.Serializable serializable58 = serializableSet54.lower((java.io.Serializable) strSet56);
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet62 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet62, strArray61);
        boolean boolean65 = strSet62.equals((java.lang.Object) false);
        boolean boolean66 = strSet62.isEmpty();
        boolean boolean68 = strSet62.equals((java.lang.Object) 10L);
        java.util.SortedSet<java.io.Serializable> serializableSet69 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList70 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet69);
        java.util.SortedSet<java.io.Serializable> serializableSet71 = java.util.Collections.unmodifiableSortedSet(serializableSet69);
        java.util.TreeSet<java.io.Serializable> serializableSet72 = new java.util.TreeSet<java.io.Serializable>(serializableSet71);
        boolean boolean74 = serializableSet72.remove((java.lang.Object) (-1.0f));
        java.util.Comparator<? super java.io.Serializable> wildcardComparator75 = serializableSet72.comparator();
        boolean boolean76 = strSet62.remove((java.lang.Object) serializableSet72);
        boolean boolean77 = strSet56.remove((java.lang.Object) serializableSet72);
        boolean boolean78 = serializableSet47.remove((java.lang.Object) boolean77);
        boolean boolean79 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList38, serializable43, (java.io.Serializable) serializableSet47);
        java.util.SortedSet<java.io.Serializable> serializableSet80 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList81 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet80);
        java.util.SortedSet<java.io.Serializable> serializableSet82 = java.util.Collections.unmodifiableSortedSet(serializableSet80);
        java.util.TreeSet<java.io.Serializable> serializableSet83 = new java.util.TreeSet<java.io.Serializable>(serializableSet82);
        java.util.Iterator<java.io.Serializable> serializableItor84 = serializableSet83.iterator();
        java.util.Spliterator<java.io.Serializable> serializableSpliterator85 = serializableSet83.spliterator();
        boolean boolean86 = serializableSet47.containsAll((java.util.Collection<java.io.Serializable>) serializableSet83);
        org.junit.Assert.assertNotNull(serializableArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(serializableCollection40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertNotNull(serializableItor42);
        org.junit.Assert.assertNotNull(serializableSet44);
        org.junit.Assert.assertNotNull(serializableIterableList45);
        org.junit.Assert.assertNotNull(serializableSet46);
        org.junit.Assert.assertNull(serializable48);
        org.junit.Assert.assertNull(wildcardComparator49);
        org.junit.Assert.assertNotNull(serializableSet50);
        org.junit.Assert.assertNotNull(serializableSet51);
        org.junit.Assert.assertNotNull(serializableIterableList52);
        org.junit.Assert.assertNotNull(serializableSet53);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "[]");
        org.junit.Assert.assertNull(serializable58);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(serializableSet69);
        org.junit.Assert.assertNotNull(serializableIterableList70);
        org.junit.Assert.assertNotNull(serializableSet71);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(wildcardComparator75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(serializableSet80);
        org.junit.Assert.assertNotNull(serializableIterableList81);
        org.junit.Assert.assertNotNull(serializableSet82);
        org.junit.Assert.assertNotNull(serializableItor84);
        org.junit.Assert.assertNotNull(serializableSpliterator85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test468");
        java.util.ArrayList<java.util.SortedSet<java.io.Serializable>[]> serializableSetArrayList1 = new java.util.ArrayList<java.util.SortedSet<java.io.Serializable>[]>((int) (short) 10);
    }

    @Test
    public void test469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test469");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        java.util.NavigableSet<java.io.Serializable> serializableSet6 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet3);
        java.util.SortedSet<java.io.Serializable> serializableSet7 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList8 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet7);
        java.util.SortedSet<java.io.Serializable> serializableSet9 = java.util.Collections.unmodifiableSortedSet(serializableSet7);
        java.util.TreeSet<java.io.Serializable> serializableSet10 = new java.util.TreeSet<java.io.Serializable>(serializableSet9);
        java.util.HashSet<java.lang.String> strSet12 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.lang.Object obj13 = strSet12.clone();
        java.io.Serializable serializable14 = serializableSet10.lower((java.io.Serializable) strSet12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        boolean boolean21 = strSet18.equals((java.lang.Object) false);
        boolean boolean22 = strSet18.isEmpty();
        boolean boolean24 = strSet18.equals((java.lang.Object) 10L);
        java.util.SortedSet<java.io.Serializable> serializableSet25 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList26 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet25);
        java.util.SortedSet<java.io.Serializable> serializableSet27 = java.util.Collections.unmodifiableSortedSet(serializableSet25);
        java.util.TreeSet<java.io.Serializable> serializableSet28 = new java.util.TreeSet<java.io.Serializable>(serializableSet27);
        boolean boolean30 = serializableSet28.remove((java.lang.Object) (-1.0f));
        java.util.Comparator<? super java.io.Serializable> wildcardComparator31 = serializableSet28.comparator();
        boolean boolean32 = strSet18.remove((java.lang.Object) serializableSet28);
        boolean boolean33 = strSet12.remove((java.lang.Object) serializableSet28);
        java.util.NavigableSet<java.io.Serializable> serializableSet34 = java.util.Collections.synchronizedNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet28);
        java.lang.Object obj35 = serializableSet28.clone();
        boolean boolean36 = serializableSet3.addAll((java.util.Collection<java.io.Serializable>) serializableSet28);
        java.util.Enumeration<java.io.Serializable> serializableEnumeration37 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableSet3);
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableSet6);
        org.junit.Assert.assertNotNull(serializableSet7);
        org.junit.Assert.assertNotNull(serializableIterableList8);
        org.junit.Assert.assertNotNull(serializableSet9);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "[]");
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(serializableSet25);
        org.junit.Assert.assertNotNull(serializableIterableList26);
        org.junit.Assert.assertNotNull(serializableSet27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(wildcardComparator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(serializableSet34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "[]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(serializableEnumeration37);
    }

    @Test
    public void test470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test470");
        java.util.Enumeration<java.util.Collection<java.io.Serializable>> serializableCollectionEnumeration0 = java.util.Collections.emptyEnumeration();
        org.junit.Assert.assertNotNull(serializableCollectionEnumeration0);
    }

    @Test
    public void test471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test471");
        java.util.Comparator<java.lang.CharSequence> charSequenceComparator0 = null;
        java.util.Comparator<java.lang.CharSequence> charSequenceComparator1 = java.util.Collections.reverseOrder(charSequenceComparator0);
        java.util.TreeSet<java.lang.CharSequence> charSequenceSet2 = new java.util.TreeSet<java.lang.CharSequence>(charSequenceComparator0);
        org.junit.Assert.assertNotNull(charSequenceComparator1);
    }

    @Test
    public void test472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test472");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet3 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet3, strArray2);
        boolean boolean6 = strSet3.equals((java.lang.Object) false);
        java.io.Serializable[] serializableArray42 = new java.io.Serializable[] { false, (-1), 'a', (-1.0f), "hi!", '#', '4', '4', '#', (byte) 10, 100, 1.0f, (byte) -1, (short) 0, '4', (-1.0d), (-1.0d), 'a', 'a', (short) 10, "hi!", (byte) -1, 0.0d, 1.0f, (-1.0d), 0.0d, 100L, 10.0f, '4', 1L, (-1), (-1L), 100, 0L, true };
        java.util.ArrayList<java.io.Serializable> serializableList43 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList43, serializableArray42);
        java.lang.Object obj45 = null;
        boolean boolean46 = serializableList43.equals(obj45);
        java.util.Collection<java.io.Serializable> serializableCollection47 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList43);
        boolean boolean48 = strSet3.contains((java.lang.Object) serializableList43);
        java.io.Serializable serializable50 = serializableList43.get((int) (byte) 10);
        serializableList43.trimToSize();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(serializableArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(serializableCollection47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 100 + "'", serializable50, 100);
    }

    @Test
    public void test473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test473");
        java.util.HashSet<java.lang.String> strSet1 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.lang.Object obj2 = null;
        boolean boolean3 = strSet1.contains(obj2);
        boolean boolean5 = strSet1.add("[]");
        boolean boolean6 = strSet1.isEmpty();
        java.util.Iterator<java.lang.String> strItor7 = strSet1.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strItor7);
    }

    @Test
    public void test474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test474");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        boolean boolean6 = serializableSet3.isEmpty();
        java.io.Serializable[] serializableArray47 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList48 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList48, serializableArray47);
        java.util.Collection<java.io.Serializable> serializableCollection50 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList48);
        java.io.Serializable[] serializableArray57 = new java.io.Serializable[] { 'a', 10, 100, serializableList48, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList58 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList58, serializableArray57);
        boolean boolean62 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList58, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.Map<java.io.Serializable, java.lang.Object> serializableMap65 = java.util.Collections.singletonMap((java.io.Serializable) (short) 1, (java.lang.Object) (short) 1);
        int int66 = serializableList58.lastIndexOf((java.lang.Object) (short) 1);
        serializableList58.clear();
        java.util.Random random68 = null;
        java.util.Collections.shuffle((java.util.List<java.io.Serializable>) serializableList58, random68);
        java.io.Serializable serializable70 = serializableSet3.lower((java.io.Serializable) random68);
        java.util.Set<java.io.Serializable> serializableSet71 = java.util.Collections.synchronizedSet((java.util.Set<java.io.Serializable>) serializableSet3);
        java.lang.Object obj72 = serializableSet3.clone();
        int int73 = serializableSet3.size();
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(serializableArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(serializableCollection50);
        org.junit.Assert.assertNotNull(serializableArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(serializableMap65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNull(serializable70);
        org.junit.Assert.assertNotNull(serializableSet71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "[]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
    }

    @Test
    public void test475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test475");
        java.util.SortedSet<java.lang.Comparable<java.lang.String>[]> strComparableArraySet0 = java.util.Collections.emptySortedSet();
        org.junit.Assert.assertNotNull(strComparableArraySet0);
    }

    @Test
    public void test476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test476");
        java.util.NavigableSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = java.util.Collections.emptyNavigableSet();
        org.junit.Assert.assertNotNull(strComparableSet0);
    }

    @Test
    public void test477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test477");
        java.util.HashSet<java.lang.String> strSet1 = new java.util.HashSet<java.lang.String>((int) (short) 1);
        strSet1.clear();
    }

    @Test
    public void test478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test478");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        serializableSet3.clear();
        java.util.Iterator<java.io.Serializable> serializableItor7 = serializableSet3.descendingIterator();
        java.io.Serializable[] serializableArray59 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList60 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList60, serializableArray59);
        java.util.Collection<java.io.Serializable> serializableCollection62 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList60);
        java.io.Serializable[] serializableArray87 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList60, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList88 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList88, serializableArray87);
        serializableList88.ensureCapacity(100);
        java.lang.Object[] objArray92 = serializableList88.toArray();
        boolean boolean94 = serializableList88.remove((java.lang.Object) (byte) 0);
        java.io.Serializable serializable95 = serializableSet3.higher((java.io.Serializable) (byte) 0);
        boolean boolean96 = serializableSet3.isEmpty();
        java.util.NavigableSet<java.io.Serializable> serializableSet97 = serializableSet3.descendingSet();
        java.util.NavigableSet<java.io.Serializable> serializableSet98 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet3);
        java.util.SortedSet<java.io.Serializable> serializableSet99 = java.util.Collections.synchronizedSortedSet((java.util.SortedSet<java.io.Serializable>) serializableSet3);
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableItor7);
        org.junit.Assert.assertNotNull(serializableArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(serializableCollection62);
        org.junit.Assert.assertNotNull(serializableArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNull(serializable95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(serializableSet97);
        org.junit.Assert.assertNotNull(serializableSet98);
        org.junit.Assert.assertNotNull(serializableSet99);
    }

    @Test
    public void test479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test479");
        java.util.HashSet<java.lang.String> strSet1 = new java.util.HashSet<java.lang.String>(10);
        java.util.Iterator<java.lang.String> strItor2 = strSet1.iterator();
        strSet1.clear();
        java.util.Spliterator<java.lang.String> strSpliterator4 = strSet1.spliterator();
        boolean boolean5 = strSet1.isEmpty();
        boolean boolean7 = strSet1.add("[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertNotNull(strItor2);
        org.junit.Assert.assertNotNull(strSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test480");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.io.Serializable serializable6 = serializableSet3.ceiling((java.io.Serializable) 0.0d);
        java.lang.Object obj7 = serializableSet3.clone();
        java.io.Serializable[] serializableArray48 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList49 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList49, serializableArray48);
        java.util.Collection<java.io.Serializable> serializableCollection51 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList49);
        java.io.Serializable[] serializableArray58 = new java.io.Serializable[] { 'a', 10, 100, serializableList49, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList59 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList59, serializableArray58);
        boolean boolean63 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList59, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.Map<java.io.Serializable, java.lang.Object> serializableMap66 = java.util.Collections.singletonMap((java.io.Serializable) (short) 1, (java.lang.Object) (short) 1);
        int int67 = serializableList59.lastIndexOf((java.lang.Object) (short) 1);
        java.util.Enumeration<java.io.Serializable> serializableEnumeration68 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableList59);
        java.io.Serializable serializable69 = serializableSet3.floor((java.io.Serializable) serializableList59);
        java.util.SortedSet<java.io.Serializable> serializableSet70 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList71 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet70);
        java.util.SortedSet<java.io.Serializable> serializableSet72 = java.util.Collections.unmodifiableSortedSet(serializableSet70);
        java.util.TreeSet<java.io.Serializable> serializableSet73 = new java.util.TreeSet<java.io.Serializable>(serializableSet72);
        java.io.Serializable serializable74 = serializableSet73.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator75 = serializableSet73.comparator();
        boolean boolean76 = serializableSet73.isEmpty();
        serializableSet73.clear();
        java.io.Serializable serializable78 = serializableSet73.pollFirst();
        java.util.SortedSet<java.io.Serializable> serializableSet79 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList80 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet79);
        java.util.SortedSet<java.io.Serializable> serializableSet81 = java.util.Collections.unmodifiableSortedSet(serializableSet79);
        java.util.TreeSet<java.io.Serializable> serializableSet82 = new java.util.TreeSet<java.io.Serializable>(serializableSet81);
        boolean boolean84 = serializableSet82.remove((java.lang.Object) (-1.0f));
        java.io.Serializable serializable85 = serializableSet82.pollLast();
        boolean boolean86 = serializableSet73.containsAll((java.util.Collection<java.io.Serializable>) serializableSet82);
        java.util.TreeSet<java.io.Serializable> serializableSet87 = new java.util.TreeSet<java.io.Serializable>((java.util.SortedSet<java.io.Serializable>) serializableSet73);
        java.util.stream.Stream<java.io.Serializable> serializableStream88 = serializableSet87.stream();
        java.io.Serializable serializable89 = serializableSet3.ceiling((java.io.Serializable) serializableSet87);
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertNotNull(serializableArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(serializableCollection51);
        org.junit.Assert.assertNotNull(serializableArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(serializableMap66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(serializableEnumeration68);
        org.junit.Assert.assertNull(serializable69);
        org.junit.Assert.assertNotNull(serializableSet70);
        org.junit.Assert.assertNotNull(serializableIterableList71);
        org.junit.Assert.assertNotNull(serializableSet72);
        org.junit.Assert.assertNull(serializable74);
        org.junit.Assert.assertNull(wildcardComparator75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(serializable78);
        org.junit.Assert.assertNotNull(serializableSet79);
        org.junit.Assert.assertNotNull(serializableIterableList80);
        org.junit.Assert.assertNotNull(serializableSet81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(serializable85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(serializableStream88);
        org.junit.Assert.assertNull(serializable89);
    }

    @Test
    public void test481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test481");
        java.util.ArrayList<java.io.Serializable> serializableList1 = new java.util.ArrayList<java.io.Serializable>(100);
        java.util.Collection<java.io.Serializable> serializableCollection2 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList1);
        java.util.SortedSet<java.io.Serializable> serializableSet3 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList4 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet3);
        java.util.SortedSet<java.io.Serializable> serializableSet5 = java.util.Collections.unmodifiableSortedSet(serializableSet3);
        java.util.TreeSet<java.io.Serializable> serializableSet6 = new java.util.TreeSet<java.io.Serializable>(serializableSet5);
        boolean boolean8 = serializableSet6.remove((java.lang.Object) (-1.0f));
        java.util.Comparator<? super java.io.Serializable> wildcardComparator9 = serializableSet6.comparator();
        java.util.SortedSet<java.io.Serializable> serializableSet10 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList11 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet10);
        java.util.SortedSet<java.io.Serializable> serializableSet12 = java.util.Collections.unmodifiableSortedSet(serializableSet10);
        java.util.TreeSet<java.io.Serializable> serializableSet13 = new java.util.TreeSet<java.io.Serializable>(serializableSet12);
        java.io.Serializable serializable14 = serializableSet13.pollFirst();
        java.util.HashSet<java.util.ListIterator<java.io.Serializable>> serializableItorSet16 = new java.util.HashSet<java.util.ListIterator<java.io.Serializable>>((int) '4');
        java.util.NavigableSet<java.io.Serializable> serializableSet18 = serializableSet13.tailSet((java.io.Serializable) '4', true);
        java.util.SortedSet<java.io.Serializable> serializableSet20 = serializableSet13.headSet((java.io.Serializable) (short) 0);
        int int21 = java.util.Collections.frequency((java.util.Collection<java.io.Serializable>) serializableSet6, (java.lang.Object) serializableSet20);
        java.util.Set<java.io.Serializable> serializableSet22 = java.util.Collections.synchronizedSet((java.util.Set<java.io.Serializable>) serializableSet6);
        boolean boolean23 = java.util.Collections.disjoint((java.util.Collection<java.io.Serializable>) serializableList1, (java.util.Collection<java.io.Serializable>) serializableSet6);
        java.util.SortedSet<java.io.Serializable> serializableSet24 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList25 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet24);
        java.util.SortedSet<java.io.Serializable> serializableSet26 = java.util.Collections.unmodifiableSortedSet(serializableSet24);
        java.util.TreeSet<java.io.Serializable> serializableSet27 = new java.util.TreeSet<java.io.Serializable>(serializableSet26);
        java.io.Serializable serializable28 = serializableSet27.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator29 = serializableSet27.comparator();
        boolean boolean30 = serializableSet27.isEmpty();
        java.io.Serializable[] serializableArray71 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList72 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList72, serializableArray71);
        java.util.Collection<java.io.Serializable> serializableCollection74 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList72);
        java.io.Serializable[] serializableArray81 = new java.io.Serializable[] { 'a', 10, 100, serializableList72, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList82 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList82, serializableArray81);
        boolean boolean86 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList82, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.Map<java.io.Serializable, java.lang.Object> serializableMap89 = java.util.Collections.singletonMap((java.io.Serializable) (short) 1, (java.lang.Object) (short) 1);
        int int90 = serializableList82.lastIndexOf((java.lang.Object) (short) 1);
        serializableList82.clear();
        java.util.Random random92 = null;
        java.util.Collections.shuffle((java.util.List<java.io.Serializable>) serializableList82, random92);
        java.io.Serializable serializable94 = serializableSet27.lower((java.io.Serializable) random92);
        java.util.Set<java.io.Serializable> serializableSet95 = java.util.Collections.synchronizedSet((java.util.Set<java.io.Serializable>) serializableSet27);
        boolean boolean96 = serializableList1.equals((java.lang.Object) serializableSet27);
        org.junit.Assert.assertNotNull(serializableCollection2);
        org.junit.Assert.assertNotNull(serializableSet3);
        org.junit.Assert.assertNotNull(serializableIterableList4);
        org.junit.Assert.assertNotNull(serializableSet5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(wildcardComparator9);
        org.junit.Assert.assertNotNull(serializableSet10);
        org.junit.Assert.assertNotNull(serializableIterableList11);
        org.junit.Assert.assertNotNull(serializableSet12);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNotNull(serializableSet18);
        org.junit.Assert.assertNotNull(serializableSet20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(serializableSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(serializableSet24);
        org.junit.Assert.assertNotNull(serializableIterableList25);
        org.junit.Assert.assertNotNull(serializableSet26);
        org.junit.Assert.assertNull(serializable28);
        org.junit.Assert.assertNull(wildcardComparator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(serializableArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(serializableCollection74);
        org.junit.Assert.assertNotNull(serializableArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(serializableMap89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertNull(serializable94);
        org.junit.Assert.assertNotNull(serializableSet95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test482");
        java.util.HashSet<java.util.stream.Stream[]> streamArraySet0 = new java.util.HashSet<java.util.stream.Stream[]>();
    }

    @Test
    public void test483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test483");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration6 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableSet3);
        java.util.SortedSet<java.io.Serializable> serializableSet7 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList8 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet7);
        java.util.SortedSet<java.io.Serializable> serializableSet9 = java.util.Collections.unmodifiableSortedSet(serializableSet7);
        java.util.TreeSet<java.io.Serializable> serializableSet10 = new java.util.TreeSet<java.io.Serializable>(serializableSet9);
        java.io.Serializable serializable11 = serializableSet10.pollFirst();
        java.util.HashSet<java.util.ListIterator<java.io.Serializable>> serializableItorSet13 = new java.util.HashSet<java.util.ListIterator<java.io.Serializable>>((int) '4');
        java.util.NavigableSet<java.io.Serializable> serializableSet15 = serializableSet10.tailSet((java.io.Serializable) '4', true);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator16 = serializableSet10.spliterator();
        boolean boolean17 = serializableSet3.addAll((java.util.Collection<java.io.Serializable>) serializableSet10);
        boolean boolean18 = serializableSet10.isEmpty();
        java.lang.Class<java.io.Serializable> serializableClass19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.SortedSet<java.io.Serializable> serializableSet20 = java.util.Collections.checkedSortedSet((java.util.SortedSet<java.io.Serializable>) serializableSet10, serializableClass19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: type");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableEnumeration6);
        org.junit.Assert.assertNotNull(serializableSet7);
        org.junit.Assert.assertNotNull(serializableIterableList8);
        org.junit.Assert.assertNotNull(serializableSet9);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNotNull(serializableSet15);
        org.junit.Assert.assertNotNull(serializableSpliterator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test484");
        java.util.List<java.util.Spliterator<java.io.Serializable>> serializableSpliteratorList0 = java.util.Collections.emptyList();
        org.junit.Assert.assertNotNull(serializableSpliteratorList0);
    }

    @Test
    public void test485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test485");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        int int6 = serializableSet3.size();
        java.io.Serializable serializable7 = serializableSet3.pollFirst();
        java.lang.Class<java.io.Serializable> serializableClass8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collection<java.io.Serializable> serializableCollection9 = java.util.Collections.checkedCollection((java.util.Collection<java.io.Serializable>) serializableSet3, serializableClass8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: type");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(serializable7);
    }

    @Test
    public void test486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test486");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        java.util.NavigableSet<java.io.Serializable> serializableSet6 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet3);
        java.util.ArrayList<java.io.Serializable> serializableList8 = new java.util.ArrayList<java.io.Serializable>(100);
        java.lang.String[] strArray12 = new java.lang.String[] { "", "", "hi!" };
        java.lang.Comparable<java.lang.String>[] strComparableArray13 = serializableList8.toArray((java.lang.Comparable<java.lang.String>[]) strArray12);
        java.util.Random random14 = null;
        java.util.Collections.shuffle((java.util.List<java.io.Serializable>) serializableList8, random14);
        java.io.Serializable serializable16 = serializableSet3.ceiling((java.io.Serializable) random14);
        java.util.Collection<java.io.Serializable> serializableCollection17 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableSet3);
        java.util.SortedSet<java.io.Serializable> serializableSet19 = serializableSet3.tailSet((java.io.Serializable) 0.0f);
        java.util.SortedSet<java.io.Serializable> serializableSet20 = java.util.Collections.synchronizedSortedSet(serializableSet19);
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableSet6);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strComparableArray13);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertNotNull(serializableCollection17);
        org.junit.Assert.assertNotNull(serializableSet19);
        org.junit.Assert.assertNotNull(serializableSet20);
    }

    @Test
    public void test487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test487");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        serializableSet3.clear();
        java.util.Iterator<java.io.Serializable> serializableItor7 = serializableSet3.descendingIterator();
        java.io.Serializable[] serializableArray59 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList60 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList60, serializableArray59);
        java.util.Collection<java.io.Serializable> serializableCollection62 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList60);
        java.io.Serializable[] serializableArray87 = new java.io.Serializable[] { (byte) 1, (byte) 0, (byte) 0, (short) -1, "hi!", 100.0d, 0L, "", (-1L), (byte) 1, '#', 1L, 0L, 10.0d, serializableList60, false, (-1.0d), '#', "hi!", (short) -1, 10.0f, 100, "hi!", 100L, (byte) 10, (byte) 1, 1L, (byte) 1, 100L, (byte) 100, 0.0d, '4', 0.0d, (byte) 10, (byte) 0, 100, (short) -1, 0.0f, 10.0f };
        java.util.ArrayList<java.io.Serializable> serializableList88 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList88, serializableArray87);
        serializableList88.ensureCapacity(100);
        java.lang.Object[] objArray92 = serializableList88.toArray();
        boolean boolean94 = serializableList88.remove((java.lang.Object) (byte) 0);
        java.io.Serializable serializable95 = serializableSet3.higher((java.io.Serializable) (byte) 0);
        java.util.Iterator<java.io.Serializable> serializableItor96 = serializableSet3.descendingIterator();
        int int97 = serializableSet3.size();
        java.util.NavigableSet<java.io.Serializable> serializableSet98 = serializableSet3.descendingSet();
        java.util.NavigableSet<java.io.Serializable> serializableSet99 = java.util.Collections.synchronizedNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet3);
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableItor7);
        org.junit.Assert.assertNotNull(serializableArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(serializableCollection62);
        org.junit.Assert.assertNotNull(serializableArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[1, 0, 0, -1, hi!, 100.0, 0, , -1, 1, #, 1, 0, 10.0, [10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1], false, -1.0, #, hi!, -1, 10.0, 100, hi!, 100, 10, 1, 1, 1, 100, 100, 0.0, 4, 0.0, 10, 0, 100, -1, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNull(serializable95);
        org.junit.Assert.assertNotNull(serializableItor96);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 0 + "'", int97 == 0);
        org.junit.Assert.assertNotNull(serializableSet98);
        org.junit.Assert.assertNotNull(serializableSet99);
    }

    @Test
    public void test488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test488");
        java.io.Serializable[] serializableArray37 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList38 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList38, serializableArray37);
        java.util.Collection<java.io.Serializable> serializableCollection40 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList38);
        java.lang.Object[] objArray41 = serializableList38.toArray();
        java.lang.Object obj42 = serializableList38.clone();
        java.util.List<java.io.Serializable> serializableList45 = serializableList38.subList(0, 34);
        java.util.Collections.rotate(serializableList45, 10);
        org.junit.Assert.assertNotNull(serializableArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(serializableCollection40);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertNotNull(serializableList45);
    }

    @Test
    public void test489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test489");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration6 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableSet3);
        java.util.SortedSet<java.io.Serializable> serializableSet7 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList8 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet7);
        java.util.SortedSet<java.io.Serializable> serializableSet9 = java.util.Collections.unmodifiableSortedSet(serializableSet7);
        java.util.TreeSet<java.io.Serializable> serializableSet10 = new java.util.TreeSet<java.io.Serializable>(serializableSet9);
        java.io.Serializable serializable11 = serializableSet10.pollFirst();
        java.util.HashSet<java.util.ListIterator<java.io.Serializable>> serializableItorSet13 = new java.util.HashSet<java.util.ListIterator<java.io.Serializable>>((int) '4');
        java.util.NavigableSet<java.io.Serializable> serializableSet15 = serializableSet10.tailSet((java.io.Serializable) '4', true);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator16 = serializableSet10.spliterator();
        boolean boolean17 = serializableSet3.addAll((java.util.Collection<java.io.Serializable>) serializableSet10);
        java.io.Serializable[] serializableArray58 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList59 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList59, serializableArray58);
        java.util.Collection<java.io.Serializable> serializableCollection61 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList59);
        java.io.Serializable[] serializableArray68 = new java.io.Serializable[] { 'a', 10, 100, serializableList59, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList69 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList69, serializableArray68);
        boolean boolean73 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList69, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.Map<java.io.Serializable, java.lang.Object> serializableMap76 = java.util.Collections.singletonMap((java.io.Serializable) (short) 1, (java.lang.Object) (short) 1);
        int int77 = serializableList69.lastIndexOf((java.lang.Object) (short) 1);
        serializableList69.clear();
        java.util.Enumeration<java.io.Serializable> serializableEnumeration79 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableList69);
        boolean boolean80 = serializableSet3.retainAll((java.util.Collection<java.io.Serializable>) serializableList69);
        serializableSet3.clear();
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableEnumeration6);
        org.junit.Assert.assertNotNull(serializableSet7);
        org.junit.Assert.assertNotNull(serializableIterableList8);
        org.junit.Assert.assertNotNull(serializableSet9);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNotNull(serializableSet15);
        org.junit.Assert.assertNotNull(serializableSpliterator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(serializableArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(serializableCollection61);
        org.junit.Assert.assertNotNull(serializableArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(serializableMap76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(serializableEnumeration79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test490");
        java.util.SortedMap<java.util.List<java.io.Serializable>, java.util.Enumeration<java.util.HashSet<java.lang.String>>[]> serializableListMap0 = java.util.Collections.emptySortedMap();
        org.junit.Assert.assertNotNull(serializableListMap0);
    }

    @Test
    public void test491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test491");
        java.io.Serializable[] serializableArray38 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList39 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList39, serializableArray38);
        java.util.Collection<java.io.Serializable> serializableCollection41 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList39);
        java.lang.Object[] objArray42 = serializableList39.toArray();
        java.util.List<java.util.List<java.io.Serializable>> serializableListList43 = java.util.Collections.nCopies(0, (java.util.List<java.io.Serializable>) serializableList39);
        java.util.ArrayList<java.io.Serializable> serializableList44 = new java.util.ArrayList<java.io.Serializable>((java.util.Collection<java.io.Serializable>) serializableList39);
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet48 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet48, strArray47);
        boolean boolean51 = strSet48.equals((java.lang.Object) false);
        java.io.Serializable[] serializableArray87 = new java.io.Serializable[] { false, (-1), 'a', (-1.0f), "hi!", '#', '4', '4', '#', (byte) 10, 100, 1.0f, (byte) -1, (short) 0, '4', (-1.0d), (-1.0d), 'a', 'a', (short) 10, "hi!", (byte) -1, 0.0d, 1.0f, (-1.0d), 0.0d, 100L, 10.0f, '4', 1L, (-1), (-1L), 100, 0L, true };
        java.util.ArrayList<java.io.Serializable> serializableList88 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList88, serializableArray87);
        java.lang.Object obj90 = null;
        boolean boolean91 = serializableList88.equals(obj90);
        java.util.Collection<java.io.Serializable> serializableCollection92 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList88);
        boolean boolean93 = strSet48.contains((java.lang.Object) serializableList88);
        java.io.Serializable serializable95 = serializableList88.get((int) (byte) 10);
        java.util.Set<java.util.Collection<java.io.Serializable>> serializableCollectionSet96 = java.util.Collections.singleton((java.util.Collection<java.io.Serializable>) serializableList88);
        boolean boolean97 = serializableList39.removeAll((java.util.Collection<java.io.Serializable>) serializableList88);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable99 = serializableList88.remove((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 35 out of bounds for length 35");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(serializableCollection41);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertNotNull(serializableListList43);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(serializableArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(serializableCollection92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertEquals("'" + serializable95 + "' != '" + 100 + "'", serializable95, 100);
        org.junit.Assert.assertNotNull(serializableCollectionSet96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
    }

    @Test
    public void test492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test492");
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList41 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList41, serializableArray40);
        java.util.Collection<java.io.Serializable> serializableCollection43 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList41);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] { 'a', 10, 100, serializableList41, 100L, (short) 0, true, (byte) 1, ' ', false };
        java.util.ArrayList<java.io.Serializable> serializableList51 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList51, serializableArray50);
        boolean boolean55 = java.util.Collections.replaceAll((java.util.List<java.io.Serializable>) serializableList51, (java.io.Serializable) 100.0d, (java.io.Serializable) 0.0d);
        java.util.Spliterator<java.io.Serializable> serializableSpliterator56 = serializableList51.spliterator();
        serializableList51.clear();
        java.lang.Object obj58 = serializableList51.clone();
        serializableList51.ensureCapacity(10);
        java.util.ArrayList<java.io.Serializable> serializableList62 = new java.util.ArrayList<java.io.Serializable>(100);
        java.lang.String[] strArray66 = new java.lang.String[] { "", "", "hi!" };
        java.lang.Comparable<java.lang.String>[] strComparableArray67 = serializableList62.toArray((java.lang.Comparable<java.lang.String>[]) strArray66);
        java.lang.String[] strArray68 = serializableList51.toArray(strArray66);
        int int69 = serializableList51.size();
        org.junit.Assert.assertNotNull(serializableArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(serializableCollection43);
        org.junit.Assert.assertNotNull(serializableArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(serializableSpliterator56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "[]");
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strComparableArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
    }

    @Test
    public void test493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test493");
        java.util.HashSet<java.lang.String> strSet1 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.lang.Object obj2 = null;
        boolean boolean3 = strSet1.contains(obj2);
        java.lang.Object obj4 = strSet1.clone();
        java.util.HashSet<java.lang.String> strSet6 = new java.util.HashSet<java.lang.String>((int) (short) 1);
        java.lang.Object obj7 = strSet6.clone();
        boolean boolean8 = strSet1.equals(obj7);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "[]");
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test494");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.util.HashSet<java.lang.String> strSet5 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.lang.Object obj6 = strSet5.clone();
        java.io.Serializable serializable7 = serializableSet3.lower((java.io.Serializable) strSet5);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet11 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet11, strArray10);
        boolean boolean14 = strSet11.equals((java.lang.Object) false);
        boolean boolean15 = strSet11.isEmpty();
        boolean boolean17 = strSet11.equals((java.lang.Object) 10L);
        java.util.SortedSet<java.io.Serializable> serializableSet18 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList19 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet18);
        java.util.SortedSet<java.io.Serializable> serializableSet20 = java.util.Collections.unmodifiableSortedSet(serializableSet18);
        java.util.TreeSet<java.io.Serializable> serializableSet21 = new java.util.TreeSet<java.io.Serializable>(serializableSet20);
        boolean boolean23 = serializableSet21.remove((java.lang.Object) (-1.0f));
        java.util.Comparator<? super java.io.Serializable> wildcardComparator24 = serializableSet21.comparator();
        boolean boolean25 = strSet11.remove((java.lang.Object) serializableSet21);
        boolean boolean26 = strSet5.remove((java.lang.Object) serializableSet21);
        java.util.Enumeration<java.io.Serializable> serializableEnumeration27 = java.util.Collections.enumeration((java.util.Collection<java.io.Serializable>) serializableSet21);
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "[]");
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(serializableSet18);
        org.junit.Assert.assertNotNull(serializableIterableList19);
        org.junit.Assert.assertNotNull(serializableSet20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(wildcardComparator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(serializableEnumeration27);
    }

    @Test
    public void test495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test495");
        java.io.Serializable[] serializableArray37 = new java.io.Serializable[] { (byte) 10, 1, (byte) 1, (-1.0d), 100.0d, (short) 100, 10.0f, 1L, 100, (-1.0f), ' ', ' ', 0.0d, ' ', 1, 'a', 1.0d, 100.0f, '#', 10.0f, (byte) -1, (byte) 1, (short) 0, 10L, (byte) 10, (-1L), 10L, (byte) -1, 'a', 10L, 10L, "hi!", 1.0d, ' ', false, (byte) -1, (short) 1 };
        java.util.ArrayList<java.io.Serializable> serializableList38 = new java.util.ArrayList<java.io.Serializable>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableList38, serializableArray37);
        java.util.Collection<java.io.Serializable> serializableCollection40 = java.util.Collections.synchronizedCollection((java.util.Collection<java.io.Serializable>) serializableList38);
        java.lang.Object obj41 = serializableList38.clone();
        java.lang.Object obj42 = null;
        boolean boolean43 = serializableList38.remove(obj42);
        org.junit.Assert.assertNotNull(serializableArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(serializableCollection40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "[10, 1, 1, -1.0, 100.0, 100, 10.0, 1, 100, -1.0,  ,  , 0.0,  , 1, a, 1.0, 100.0, #, 10.0, -1, 1, 0, 10, 10, -1, 10, -1, a, 10, 10, hi!, 1.0,  , false, -1, 1]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test496");
        java.util.SortedSet<java.io.Serializable> serializableSet0 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList1 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet0);
        java.util.SortedSet<java.io.Serializable> serializableSet2 = java.util.Collections.unmodifiableSortedSet(serializableSet0);
        java.util.TreeSet<java.io.Serializable> serializableSet3 = new java.util.TreeSet<java.io.Serializable>(serializableSet2);
        java.io.Serializable serializable4 = serializableSet3.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator5 = serializableSet3.comparator();
        java.util.NavigableSet<java.io.Serializable> serializableSet6 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet3);
        java.util.ArrayList<java.io.Serializable> serializableList8 = new java.util.ArrayList<java.io.Serializable>(100);
        java.lang.String[] strArray12 = new java.lang.String[] { "", "", "hi!" };
        java.lang.Comparable<java.lang.String>[] strComparableArray13 = serializableList8.toArray((java.lang.Comparable<java.lang.String>[]) strArray12);
        java.util.Random random14 = null;
        java.util.Collections.shuffle((java.util.List<java.io.Serializable>) serializableList8, random14);
        java.io.Serializable serializable16 = serializableSet3.ceiling((java.io.Serializable) random14);
        java.util.Iterator<java.io.Serializable> serializableItor17 = serializableSet3.iterator();
        java.util.ArrayList<java.io.Serializable> serializableList19 = new java.util.ArrayList<java.io.Serializable>(100);
        java.lang.String[] strArray23 = new java.lang.String[] { "", "", "hi!" };
        java.lang.Comparable<java.lang.String>[] strComparableArray24 = serializableList19.toArray((java.lang.Comparable<java.lang.String>[]) strArray23);
        java.util.Random random25 = null;
        java.util.Collections.shuffle((java.util.List<java.io.Serializable>) serializableList19, random25);
        java.util.ArrayList<java.io.Serializable> serializableList28 = new java.util.ArrayList<java.io.Serializable>(100);
        int int29 = java.util.Collections.indexOfSubList((java.util.List<java.io.Serializable>) serializableList19, (java.util.List<java.io.Serializable>) serializableList28);
        boolean boolean30 = serializableList28.isEmpty();
        boolean boolean31 = serializableSet3.remove((java.lang.Object) boolean30);
        org.junit.Assert.assertNotNull(serializableSet0);
        org.junit.Assert.assertNotNull(serializableIterableList1);
        org.junit.Assert.assertNotNull(serializableSet2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(wildcardComparator5);
        org.junit.Assert.assertNotNull(serializableSet6);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strComparableArray13);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertNotNull(serializableItor17);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strComparableArray24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test497");
        java.util.HashSet<java.lang.String> strSet1 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        strSet1.clear();
        java.util.SortedSet<java.io.Serializable> serializableSet3 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList4 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet3);
        java.util.SortedSet<java.io.Serializable> serializableSet5 = java.util.Collections.unmodifiableSortedSet(serializableSet3);
        java.util.TreeSet<java.io.Serializable> serializableSet6 = new java.util.TreeSet<java.io.Serializable>(serializableSet5);
        java.io.Serializable serializable7 = serializableSet6.pollFirst();
        java.io.Serializable serializable9 = serializableSet6.ceiling((java.io.Serializable) 0.0d);
        java.io.Serializable serializable10 = serializableSet6.pollLast();
        boolean boolean11 = strSet1.remove((java.lang.Object) serializable10);
        java.lang.Object obj12 = strSet1.clone();
        org.junit.Assert.assertNotNull(serializableSet3);
        org.junit.Assert.assertNotNull(serializableIterableList4);
        org.junit.Assert.assertNotNull(serializableSet5);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "[]");
    }

    @Test
    public void test498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test498");
        java.util.HashSet<java.lang.String> strSet1 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        strSet1.clear();
        java.util.SortedSet<java.io.Serializable> serializableSet3 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList4 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet3);
        java.util.SortedSet<java.io.Serializable> serializableSet5 = java.util.Collections.unmodifiableSortedSet(serializableSet3);
        java.util.TreeSet<java.io.Serializable> serializableSet6 = new java.util.TreeSet<java.io.Serializable>(serializableSet5);
        java.io.Serializable serializable7 = serializableSet6.pollFirst();
        java.io.Serializable serializable9 = serializableSet6.ceiling((java.io.Serializable) 0.0d);
        java.io.Serializable serializable10 = serializableSet6.pollLast();
        boolean boolean11 = strSet1.remove((java.lang.Object) serializable10);
        strSet1.clear();
        java.util.SortedSet<java.io.Serializable> serializableSet13 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList14 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet13);
        java.util.SortedSet<java.io.Serializable> serializableSet15 = java.util.Collections.unmodifiableSortedSet(serializableSet13);
        java.util.TreeSet<java.io.Serializable> serializableSet16 = new java.util.TreeSet<java.io.Serializable>(serializableSet15);
        java.io.Serializable serializable17 = serializableSet16.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator18 = serializableSet16.comparator();
        java.util.NavigableSet<java.io.Serializable> serializableSet19 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet16);
        java.util.stream.Stream[][] streamArray20 = new java.util.stream.Stream[][] {};
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.io.Serializable>) serializableSet16, streamArray20);
        boolean boolean22 = strSet1.contains((java.lang.Object) boolean21);
        int int23 = strSet1.size();
        org.junit.Assert.assertNotNull(serializableSet3);
        org.junit.Assert.assertNotNull(serializableIterableList4);
        org.junit.Assert.assertNotNull(serializableSet5);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(serializableSet13);
        org.junit.Assert.assertNotNull(serializableIterableList14);
        org.junit.Assert.assertNotNull(serializableSet15);
        org.junit.Assert.assertNull(serializable17);
        org.junit.Assert.assertNull(wildcardComparator18);
        org.junit.Assert.assertNotNull(serializableSet19);
        org.junit.Assert.assertNotNull(streamArray20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test499");
        java.util.ArrayList<java.io.Serializable> serializableList1 = new java.util.ArrayList<java.io.Serializable>(100);
        java.lang.String[] strArray5 = new java.lang.String[] { "", "", "hi!" };
        java.lang.Comparable<java.lang.String>[] strComparableArray6 = serializableList1.toArray((java.lang.Comparable<java.lang.String>[]) strArray5);
        java.util.SortedSet<java.io.Serializable> serializableSet7 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList8 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet7);
        java.util.SortedSet<java.io.Serializable> serializableSet9 = java.util.Collections.unmodifiableSortedSet(serializableSet7);
        java.util.TreeSet<java.io.Serializable> serializableSet10 = new java.util.TreeSet<java.io.Serializable>(serializableSet9);
        java.io.Serializable serializable11 = serializableSet10.pollFirst();
        java.util.Comparator<? super java.io.Serializable> wildcardComparator12 = serializableSet10.comparator();
        java.util.NavigableSet<java.io.Serializable> serializableSet13 = java.util.Collections.unmodifiableNavigableSet((java.util.NavigableSet<java.io.Serializable>) serializableSet10);
        java.util.SortedSet<java.io.Serializable> serializableSet14 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList15 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet14);
        java.util.SortedSet<java.io.Serializable> serializableSet16 = java.util.Collections.unmodifiableSortedSet(serializableSet14);
        java.util.TreeSet<java.io.Serializable> serializableSet17 = new java.util.TreeSet<java.io.Serializable>(serializableSet16);
        java.util.HashSet<java.lang.String> strSet19 = new java.util.HashSet<java.lang.String>((int) (byte) 100);
        java.lang.Object obj20 = strSet19.clone();
        java.io.Serializable serializable21 = serializableSet17.lower((java.io.Serializable) strSet19);
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet25 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet25, strArray24);
        boolean boolean28 = strSet25.equals((java.lang.Object) false);
        boolean boolean29 = strSet25.isEmpty();
        boolean boolean31 = strSet25.equals((java.lang.Object) 10L);
        java.util.SortedSet<java.io.Serializable> serializableSet32 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList33 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet32);
        java.util.SortedSet<java.io.Serializable> serializableSet34 = java.util.Collections.unmodifiableSortedSet(serializableSet32);
        java.util.TreeSet<java.io.Serializable> serializableSet35 = new java.util.TreeSet<java.io.Serializable>(serializableSet34);
        boolean boolean37 = serializableSet35.remove((java.lang.Object) (-1.0f));
        java.util.Comparator<? super java.io.Serializable> wildcardComparator38 = serializableSet35.comparator();
        boolean boolean39 = strSet25.remove((java.lang.Object) serializableSet35);
        boolean boolean40 = strSet19.remove((java.lang.Object) serializableSet35);
        boolean boolean41 = serializableSet10.remove((java.lang.Object) boolean40);
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] {};
        java.lang.reflect.Type[] typeArray43 = serializableSet10.toArray(typeArray42);
        boolean boolean44 = serializableList1.retainAll((java.util.Collection<java.io.Serializable>) serializableSet10);
        java.util.SortedSet<java.io.Serializable> serializableSet45 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList46 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet45);
        java.util.SortedSet<java.io.Serializable> serializableSet47 = java.util.Collections.unmodifiableSortedSet(serializableSet45);
        boolean boolean48 = java.util.Collections.disjoint((java.util.Collection<java.io.Serializable>) serializableList1, (java.util.Collection<java.io.Serializable>) serializableSet47);
        java.util.SortedSet<java.io.Serializable> serializableSet49 = java.util.Collections.emptySortedSet();
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList50 = java.util.Collections.singletonList((java.lang.Iterable<java.io.Serializable>) serializableSet49);
        java.util.SortedSet<java.io.Serializable> serializableSet51 = java.util.Collections.unmodifiableSortedSet(serializableSet49);
        java.util.Set<java.io.Serializable> serializableSet52 = java.util.Collections.synchronizedSet((java.util.Set<java.io.Serializable>) serializableSet51);
        boolean boolean53 = serializableList1.addAll((java.util.Collection<java.io.Serializable>) serializableSet52);
        serializableList1.clear();
        java.lang.Object obj55 = serializableList1.clone();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strComparableArray6);
        org.junit.Assert.assertNotNull(serializableSet7);
        org.junit.Assert.assertNotNull(serializableIterableList8);
        org.junit.Assert.assertNotNull(serializableSet9);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(wildcardComparator12);
        org.junit.Assert.assertNotNull(serializableSet13);
        org.junit.Assert.assertNotNull(serializableSet14);
        org.junit.Assert.assertNotNull(serializableIterableList15);
        org.junit.Assert.assertNotNull(serializableSet16);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "[]");
        org.junit.Assert.assertNull(serializable21);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(serializableSet32);
        org.junit.Assert.assertNotNull(serializableIterableList33);
        org.junit.Assert.assertNotNull(serializableSet34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(wildcardComparator38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(serializableSet45);
        org.junit.Assert.assertNotNull(serializableIterableList46);
        org.junit.Assert.assertNotNull(serializableSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(serializableSet49);
        org.junit.Assert.assertNotNull(serializableIterableList50);
        org.junit.Assert.assertNotNull(serializableSet51);
        org.junit.Assert.assertNotNull(serializableSet52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "[]");
    }

    @Test
    public void test500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test500");
        java.util.HashSet<java.lang.reflect.GenericDeclaration> genericDeclarationSet1 = new java.util.HashSet<java.lang.reflect.GenericDeclaration>(0);
    }
}

